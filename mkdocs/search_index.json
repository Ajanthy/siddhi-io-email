{
    "docs": [
        {
            "location": "/", 
            "text": "siddhi-io-email\n\n\nThe \nsiddhi-io-email extension\n is an extension to \nSiddhi\n that receives and publishes events via email.\nUsing the extension, events can be published through smtp mail server and received through 'pop3' or 'imap' mail serves.\n\n\nFind some useful links below:\n\n\n\n\nSource code\n\n\nReleases\n\n\nIssue tracker\n\n\n\n\nLatest API Docs\n\n\nLatest API Docs is \n1.0.16\n.\n\n\nHow to use\n\n\nUsing the extension in \nWSO2 Stream Processor\n\n\n\n\n\n\nYou can use this extension in the latest \nWSO2 Stream Processor\n that is a part of \nWSO2 Analytics\n offering, with editor, debugger and simulation support. \n\n\n\n\n\n\nThis extension is shipped by default with WSO2 Stream Processor, if you wish to use an alternative version of this extension you can replace the component \njar\n that can be found in the \nSTREAM_PROCESSOR_HOME\n/lib\n directory.\n\n\n\n\n\n\nUsing the extension as a \njava library\n\n\n\n\nThis extension can be added as a maven dependency along with other Siddhi dependencies to your project.\n\n\n\n\n     \ndependency\n\n        \ngroupId\norg.wso2.extension.siddhi.io.email\n/groupId\n\n        \nartifactId\nsiddhi-io-email\n/artifactId\n\n        \nversion\nx.x.x\n/version\n\n     \n/dependency\n\n\n\n\n\nJenkins Build Status\n\n\n\n\n\n\n\n\n\n\nBranch\n\n\nBuild Status\n\n\n\n\n\n\n\n\n\n\nmaster\n\n\n\n\n\n\n\n\n\n\n\n\nFeatures\n\n\n\n\nemail\n \n(Sink)\nThe email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken for the optional parameters. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters). Further, some email account required to enable 'access to less secure apps' option (for gmail account you can enable it via https://myaccount.google.com/lesssecureapps).\n\n\nemail\n \n(Source)\nEmail source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store ,  https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters).\n\n\n\n\nHow to Contribute\n\n\n\n\n\n\nPlease report issues at \nGitHub Issue Tracker\n.\n\n\n\n\n\n\nSend your contributions as pull requests to \nmaster branch\n. \n\n\n\n\n\n\nContact us\n\n\n\n\n\n\nPost your questions with the \n\"Siddhi\"\n tag in \nStackoverflow\n. \n\n\n\n\n\n\nSiddhi developers can be contacted via the mailing lists:\n\n\nDevelopers List   : \ndev@wso2.org\n\n\nArchitecture List : \narchitecture@wso2.org\n\n\n\n\n\n\nSupport\n\n\n\n\n\n\nWe are committed to ensuring support for this extension in production. Our unique approach ensures that all support leverages our open development methodology and is provided by the very same engineers who build the technology. \n\n\n\n\n\n\nFor more details and to take advantage of this unique opportunity contact us via \nhttp://wso2.com/support/\n.", 
            "title": "Welcome to WSO2 Siddhi IO Email"
        }, 
        {
            "location": "/#siddhi-io-email", 
            "text": "The  siddhi-io-email extension  is an extension to  Siddhi  that receives and publishes events via email.\nUsing the extension, events can be published through smtp mail server and received through 'pop3' or 'imap' mail serves.  Find some useful links below:   Source code  Releases  Issue tracker", 
            "title": "siddhi-io-email"
        }, 
        {
            "location": "/#latest-api-docs", 
            "text": "Latest API Docs is  1.0.16 .", 
            "title": "Latest API Docs"
        }, 
        {
            "location": "/#how-to-use", 
            "text": "Using the extension in  WSO2 Stream Processor    You can use this extension in the latest  WSO2 Stream Processor  that is a part of  WSO2 Analytics  offering, with editor, debugger and simulation support.     This extension is shipped by default with WSO2 Stream Processor, if you wish to use an alternative version of this extension you can replace the component  jar  that can be found in the  STREAM_PROCESSOR_HOME /lib  directory.    Using the extension as a  java library   This extension can be added as a maven dependency along with other Siddhi dependencies to your project.         dependency \n         groupId org.wso2.extension.siddhi.io.email /groupId \n         artifactId siddhi-io-email /artifactId \n         version x.x.x /version \n      /dependency", 
            "title": "How to use"
        }, 
        {
            "location": "/#jenkins-build-status", 
            "text": "Branch  Build Status      master", 
            "title": "Jenkins Build Status"
        }, 
        {
            "location": "/#features", 
            "text": "email   (Sink) The email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken for the optional parameters. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters). Further, some email account required to enable 'access to less secure apps' option (for gmail account you can enable it via https://myaccount.google.com/lesssecureapps).  email   (Source) Email source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store ,  https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters).", 
            "title": "Features"
        }, 
        {
            "location": "/#how-to-contribute", 
            "text": "Please report issues at  GitHub Issue Tracker .    Send your contributions as pull requests to  master branch .", 
            "title": "How to Contribute"
        }, 
        {
            "location": "/#contact-us", 
            "text": "Post your questions with the  \"Siddhi\"  tag in  Stackoverflow .     Siddhi developers can be contacted via the mailing lists:  Developers List   :  dev@wso2.org  Architecture List :  architecture@wso2.org", 
            "title": "Contact us"
        }, 
        {
            "location": "/#support", 
            "text": "We are committed to ensuring support for this extension in production. Our unique approach ensures that all support leverages our open development methodology and is provided by the very same engineers who build the technology.     For more details and to take advantage of this unique opportunity contact us via  http://wso2.com/support/ .", 
            "title": "Support"
        }, 
        {
            "location": "/api/1.0.16/", 
            "text": "API Docs - v1.0.16\n\n\nSink\n\n\nemail \n(Sink)\n\n\nThe email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken for the optional parameters. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters). Further, some email account required to enable 'access to less secure apps' option (for gmail account you can enable it via https://myaccount.google.com/lesssecureapps).\n\n\n\nSyntax\n\n\n@sink(type=\nemail\n, username=\nSTRING\n, address=\nSTRING\n, password=\nSTRING\n, host=\nSTRING\n, port=\nINT\n, ssl.enable=\nBOOL\n, auth=\nBOOL\n, content.type=\nSTRING\n, subject=\nSTRING\n, to=\nSTRING\n, cc=\nSTRING\n, bcc=\nSTRING\n, attachments=\nSTRING\n, @map(...)))\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \nusername\n\n        \nUsername of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com).\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \naddress\n\n        \nAddress of the email account which is used to send emails.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \npassword\n\n        \nPassword of the email account.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \nhost\n\n        \nHost name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account.\n\n        \nsmtp.gmail.com\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nport\n\n        \nThe port which is used to create the connection.\n\n        \n'465' the default value is only valid is ssl enable\n\n        \nINT\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nssl.enable\n\n        \nWhether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection.\n\n        \ntrue\n\n        \nBOOL\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nauth\n\n        \nWhether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command.\n\n        \ntrue\n\n        \nBOOL\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \ncontent.type\n\n        \nContent type can be either 'text/plain' or 'text/html'.\n\n        \ntext/plain\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nsubject\n\n        \nSubject of the mail which has to be send.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nYes\n\n    \n\n    \n\n        \nto\n\n        \nAddress of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nYes\n\n    \n\n    \n\n        \ncc\n\n        \nAddress of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list.\n\n        \nNone\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nbcc\n\n        \nAddress of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list.\n\n        \nNone\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nattachments\n\n        \nFile paths of the files that needs to be attached to the email.\nThese paths should be absolute paths.\nThey can be either a directories or files\n. If it's a directory, all the files at its first level will be attached.\n\n        \nNone\n\n        \nSTRING\n\n        \nYes\n\n        \nYes\n\n    \n\n\n\n\nSystem Parameters\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Parameters\n\n    \n\n    \n\n        \nmail.smtp.ssl.trust\n\n        \nIf set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to \"\n\", all hosts are trusted. If set to a whitespace separated list of hosts, those hosts are trusted. Otherwise, trust depends on the certificate the server presents.\n\n        \n\n        \nString\n\n    \n\n    \n\n        \nmail.smtp.connectiontimeout\n\n        \nSocket connection timeout value in milliseconds. \n\n        \ninfinite timeout\n\n        \nAny Integer\n\n    \n\n    \n\n        \nmail.smtp.timeout\n\n        \nSocket I/O timeout value in milliseconds. \n\n        \ninfinite timeout\n\n        \nAny Integer\n\n    \n\n    \n\n        \nmail.smtp.from\n\n        \nEmail address to use for SMTP MAIL command. This sets the envelope return address.\n\n        \nDefaults to msg.getFrom() or InternetAddress.getLocalAddress().\n\n        \nValid email address\n\n    \n\n    \n\n        \nmail.smtp.localport\n\n        \nLocal port number to bind to when creating the SMTP socket.\n\n        \nDefaults to the port number picked by the Socket class.\n\n        \nAny Integer\n\n    \n\n    \n\n        \nmail.smtp.ehlo\n\n        \nIf false, do not attempt to sign on with the EHLO command.\n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.login.disable\n\n        \nIf true, prevents use of the AUTH LOGIN command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.plain.disable\n\n        \nIf true, prevents use of the AUTH PLAIN command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.digest-md5.disable\n\n        \nIf true, prevents use of the AUTH DIGEST-MD5 command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.ntlm.disable\n\n        \nIf true, prevents use of the AUTH NTLM command\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.ntlm.domain\n\n        \nThe NTLM authentication domain.\n\n        \nNone\n\n        \nValid NTLM authentication domain name\n\n    \n\n    \n\n        \nmail.smtp.auth.ntlm.flags\n\n        \nNTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details.\n\n        \nNone\n\n        \nValid NTLM protocol-specific flags.\n\n    \n\n    \n\n        \nmail.smtp.dsn.notify\n\n        \nThe NOTIFY option to the RCPT command.\n\n        \nNone\n\n        \nEither NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas).\n\n    \n\n    \n\n        \nmail.smtp.dsn.ret\n\n        \nThe RET option to the MAIL command.\n\n        \nNone\n\n        \nEither FULL or HDRS.\n\n    \n\n    \n\n        \nmail.smtp.sendpartial\n\n        \nIf set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.sasl.enable\n\n        \nIf set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.sasl.mechanisms\n\n        \nA space or comma separated list of SASL mechanism names to try to use.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.sasl.authorizationid\n\n        \nThe authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used.\n\n        \nusername\n\n        \nValid ID\n\n    \n\n    \n\n        \nmail.smtp.sasl.realm\n\n        \nThe realm to use with DIGEST-MD5 authentication.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.quitwait\n\n        \nIf set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.reportsuccess\n\n        \nIf set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.socketFactory\n\n        \nIf set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets.\n\n        \nNone\n\n        \nSocket Factory\n\n    \n\n    \n\n        \nmail.smtp.socketFactory.class\n\n        \nIf set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.socketFactory.fallback\n\n        \nIf set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class.\n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.socketFactory.port\n\n        \nSpecifies the port to connect to when using the specified socket factory\n\n        \n25\n\n        \nValid port number\n\n    \n\n    \n\n        \nmail.smtp.ssl.protocols\n\n        \nSpecifies the SSL protocols that will be enabled for SSL connections.\n\n        \nNone\n\n        \nThe property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method.\n\n    \n\n    \n\n        \nmail.smtp.starttls.enable\n\n        \nIf true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.starttls.required\n\n        \nIf true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.socks.host\n\n        \nSpecifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.socks.port\n\n        \nSpecifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080.\n\n        \n1080\n\n        \nvalid port number\n\n    \n\n    \n\n        \nmail.smtp.auth.ntlm.disable\n\n        \nIf true, prevents use of the AUTH NTLM command\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.mailextension\n\n        \nExtension string to append to the MAIL command.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.userset\n\n        \nIf set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\n@sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string);\n\n\n\n\nFollowing example illustrates how to publish events using the email sinkusing mandatory parameters. As in the example, it publishes events come from the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection.\n\n\n\nEXAMPLE 2\n\n\n@sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string);\n\n\n\n\nFollowing example illustrates how to configure the query parameters and system parameters in the deployment ymal file.\nCorresponding parameters need to be configure under name:'email' and namespace:'sink' as follows\nextensions:\n-  extension:\nname:'email'\nnamespace:'sink'\nproperties:\nusername: \nsender's email username\naddress: \nsender's email address\npassword: \nsender's email password\nAs in the example, it publishes events comefrom the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection.\n\n\n\nEXAMPLE 3\n\n\n@sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream fooStream (name string, age int, country string);\n\n\n\n\nFollowing example illustrates how to publish events using the email sink. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given \nto\n,\ncc\n and \nbcc\n recipients using a secure connection. \nname\n in the \nsubject\n attribute will be the value of the \nname\n parameter in the corresponding output event\n\n\n\nEXAMPLE 4\n\n\n@sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.comattachments= '{{attachments}}')define stream fooStream (name string, age int, country string, attachments string);\n\n\n\n\nFollowing example illustrates how to publish events using theemail sink. Here files are also attached to the email. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given \nto\n,\ncc\n and \nbcc\n recipients using a secure connection. \nname\n in the \nsubject\n attribute will be the value of the \nname\n parameter in the corresponding output event.\nAlso to the same email message, the local file(s) related to the path received for the attribute attachments is/are attached.\n\n\n\nSource\n\n\nemail \n(Source)\n\n\nEmail source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store ,  https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters).\n\n\n\nSyntax\n\n\n@source(type=\nemail\n, username=\nSTRING\n, password=\nSTRING\n, store=\nSTRING\n, host=\nSTRING\n, port=\nINT\n, folder=\nSTRING\n, search.term=\nSTRING\n, polling.interval=\nLONG\n, action.after.processed=\nSTRING\n, folder.to.move=\nSTRING\n, content.type=\nSTRING\n, ssl.enable=\nBOOL\n, @map(...)))\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \nusername\n\n        \nuser name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \npassword\n\n        \npassword of the email account\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \nstore\n\n        \nStore type that used to receive emails. it can be either imap or pop3.\n\n        \nimap\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nhost\n\n        \nHost name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable.\n\n        \nIf store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'.\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nport\n\n        \nThe port which is used to create the connection.\n\n        \n'993' the default value is valid only if store is imap and ssl enable\n\n        \nINT\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nfolder\n\n        \nName of the folder to fetch email.\n\n        \nINBOX\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nsearch.term\n\n        \nOption which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol.\n\n        \nNone\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \npolling.interval\n\n        \nInterval that email source should poll the account to check for new mails arrivals in seconds.\n\n        \n600\n\n        \nLONG\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \naction.after.processed\n\n        \nAction that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE\n\n        \nNONE\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nfolder.to.move\n\n        \nThe name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \ncontent.type\n\n        \nContent type of the email. It can be either 'text/plain' or 'text/html.'\n\n        \ntext/plain\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nssl.enable\n\n        \nIf it is 'true' then use a secure port to establish the connection. The possible values are 'true or false.\n\n        \ntrue\n\n        \nBOOL\n\n        \nYes\n\n        \nNo\n\n    \n\n\n\n\nSystem Parameters\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Parameters\n\n    \n\n    \n\n        \nmail.imap.partialfetch\n\n        \nControls whether the IMAP partial-fetch capability should be used\n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.fetchsize\n\n        \nPartial fetch size in bytes.\n\n        \n16K\n\n        \nvalue in bytes\n\n    \n\n    \n\n        \nmail.imap.peek\n\n        \nIf set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.connectiontimeout\n\n        \nSocket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket.\n\n        \ninfinity timeout\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.timeout\n\n        \nSocket read timeout value in milliseconds. This timeout is implemented by java.net.Socket.\n\n        \ninfinity timeout\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.writetimeout\n\n        \nSocket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection.\n\n        \ninfinity timeout\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.statuscachetimeout\n\n        \nTimeout value in milliseconds for cache of STATUS command response.\n\n        \n1000ms\n\n        \nTime out in miliseconds\n\n    \n\n    \n\n        \nmail.imap.appendbuffersize\n\n        \nMaximum size of a message to buffer in memory when appending to an IMAP folder.\n\n        \nNone\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.connectionpoolsize\n\n        \nMaximum number of available connections in the connection pool.\n\n        \n1\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.connectionpooltimeout\n\n        \nTimeout value in milliseconds for connection pool connections. \n\n        \n45000ms\n\n        \nAny Integer\n\n    \n\n    \n\n        \nmail.imap.separatestoreconnection\n\n        \nFlag to indicate whether to use a dedicated store connection for store commands.\n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.auth.login.disable\n\n        \nIf true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.auth.plain.disable\n\n        \nIf true, prevents use of the AUTHENTICATE PLAIN command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.auth.ntlm.disable\n\n        \nIf true, prevents use of the AUTHENTICATE NTLM command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.proxyauth.user\n\n        \nIf the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property.\n\n        \nNone\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.localaddress\n\n        \nLocal address (host name) to bind to when creating the IMAP socket.\n\n        \nDefaults to the address picked by the Socket class.\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.localport\n\n        \nLocal port number to bind to when creating the IMAP socket.\n\n        \nDefaults to the port number picked by the Socket class.\n\n        \nValid String value\n\n    \n\n    \n\n        \nmail.imap.sasl.enable\n\n        \nIf set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.sasl.mechanisms\n\n        \nA space or comma separated list of SASL mechanism names to try to use.\n\n        \nNone\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.sasl.authorizationid\n\n        \nThe authorization ID to use in the SASL authentication.\n\n        \nIf not set, the authentication ID (user name) is used.\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.sasl.realm\n\n        \nThe realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5.\n\n        \nNone\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.auth.ntlm.domain\n\n        \nThe NTLM authentication domain.\n\n        \nNone\n\n        \nValid string value\n\n    \n\n    \n\n        \nThe NTLM authentication domain.\n\n        \nNTLM protocol-specific flags.\n\n        \nNone\n\n        \nValid integer value\n\n    \n\n    \n\n        \nmail.imap.socketFactory\n\n        \nIf set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets.\n\n        \nNone\n\n        \nValid SocketFactory\n\n    \n\n    \n\n        \nmail.imap.socketFactory.class\n\n        \nIf set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets.\n\n        \nNone\n\n        \nValid string\n\n    \n\n    \n\n        \nmail.imap.socketFactory.fallback\n\n        \nIf set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. \n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.socketFactory.port\n\n        \nSpecifies the port to connect to when using the specified socket factory. Default port is used when not set.\n\n        \n143\n\n        \nValid Integer\n\n    \n\n    \n\n        \nmail.imap.ssl.checkserveridentity\n\n        \nIf set to true, check the server identity as specified by RFC 2595.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.ssl.trust\n\n        \nIf set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '\n', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents.\n\n        \n\n        \nValid String\n\n    \n\n    \n\n        \nmail.imap.ssl.socketFactory\n\n        \nIf set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets.\n\n        \nNone\n\n        \nSSL Socket Factory\n\n    \n\n    \n\n        \nmail.imap.ssl.socketFactory.class\n\n        \nIf set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.imap.ssl.socketFactory.port\n\n        \nSpecifies the port to connect to when using the specified socket factory.\n\n        \nthe default port will be used-993\n\n        \nvalid port number\n\n    \n\n    \n\n        \nmail.imap.ssl.protocols\n\n        \nSpecifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method.\n\n        \nNone\n\n        \nValid string\n\n    \n\n    \n\n        \nmail.imap.starttls.enable\n\n        \nIf true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.socks.host\n\n        \nSpecifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.imap.socks.port\n\n        \nSpecifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080.\n\n        \n1080\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.imap.minidletime\n\n        \nThis property sets the delay in milliseconds.\n\n        \n10 milliseconds\n\n        \ntime in seconds (Integer)\n\n    \n\n    \n\n        \nmail.imap.enableimapevents\n\n        \nEnable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.folder.class\n\n        \nClass name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store)\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.connectiontimeout\n\n        \nSocket connection timeout value in milliseconds.\n\n        \nInfinite timeout\n\n        \nInteger value\n\n    \n\n    \n\n        \nmail.pop3.timeout\n\n        \nSocket I/O timeout value in milliseconds. \n\n        \nInfinite timeout\n\n        \nInteger value\n\n    \n\n    \n\n        \nmail.pop3.message.class\n\n        \nClass name of a subclass of com.sun.mail.pop3.POP3Message\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.localaddress\n\n        \nLocal address (host name) to bind to when creating the POP3 socket.\n\n        \nDefaults to the address picked by the Socket class.\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.localport\n\n        \nLocal port number to bind to when creating the POP3 socket.\n\n        \nDefaults to the port number picked by the Socket class.\n\n        \nValid port number\n\n    \n\n    \n\n        \nmail.pop3.apop.enable\n\n        \nIf set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.socketFactory\n\n        \nIf set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets.\n\n        \nNone\n\n        \nSocket Factory\n\n    \n\n    \n\n        \nmail.pop3.socketFactory.class\n\n        \nIf set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.socketFactory.fallback\n\n        \nIf set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.socketFactory.port\n\n        \nSpecifies the port to connect to when using the specified socket factory.\n\n        \nDefault port\n\n        \nValid port number\n\n    \n\n    \n\n        \nmail.pop3.ssl.checkserveridentity\n\n        \nIf set to true, check the server identity as specified by RFC 2595. \n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.ssl.trust\n\n        \nIf set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to '\n', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents.\n\n        \n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.ssl.socketFactory\n\n        \nIf set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets.\n\n        \nNone\n\n        \nSSL Socket Factory\n\n    \n\n    \n\n        \nmail.pop3.ssl.checkserveridentity\n\n        \nIf set to true, check the server identity as specified by RFC 2595. \n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.ssl.trust\n\n        \n If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted. \n\n        \ntrust depends on the certificate the server presents.\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.ssl.socketFactory\n\n        \nIf set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets.\n\n        \nNone\n\n        \nSSL Socket Factory\n\n    \n\n    \n\n        \nmail.pop3.ssl.socketFactory.class\n\n        \nIf set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets. \n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.ssl.socketFactory.p\n\n        \nSpecifies the port to connect to when using the specified socket factory.\n\n        \n995\n\n        \nValid Integer\n\n    \n\n    \n\n        \nmail.pop3.ssl.protocols\n\n        \nSpecifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.starttls.enable\n\n        \nIf true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.starttls.required\n\n        \nIf true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.socks.host\n\n        \nSpecifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.socks.port\n\n        \nSpecifies the port number for the SOCKS5 proxy server.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.disabletop\n\n        \nIf set to true, the POP3 TOP command will not be used to fetch message headers. \n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.forgettopheaders\n\n        \nIf set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.filecache.enable\n\n        \nIf set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.filecache.dir\n\n        \nIf the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.cachewriteto\n\n        \nControls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.keepmessagecontent\n\n        \nIf this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method). \n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\n@source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string);\n\n\n\n\nFollowing example illustrates how to receive events in \nxml\n format using email source. In this example only mandatory parameters are defined in the  in the stream definition. For other parameters default values are taken. since search term is not defined, it poll and take all new messages in the inbox folder\n\n\n\nEXAMPLE 2\n\n\n@source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string);\n\n\n\n\nFollowing example illustrates how to receive events in \nxml\n format using email source. The email source polls the mail account in every 500 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term (email messages which come from\nfrom.account@.\nhost name\n, contains \ncc.account\n in cc receipts list, and \nStream Processor\n words in the mail subject) In the example, action after processes is defined as the \nDELETE\n, so that after processing the event, corresponding mail is deleted from the mail folder.", 
            "title": "1.0.16"
        }, 
        {
            "location": "/api/1.0.16/#api-docs-v1016", 
            "text": "", 
            "title": "API Docs - v1.0.16"
        }, 
        {
            "location": "/api/1.0.16/#sink", 
            "text": "", 
            "title": "Sink"
        }, 
        {
            "location": "/api/1.0.16/#email-sink", 
            "text": "The email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken for the optional parameters. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters). Further, some email account required to enable 'access to less secure apps' option (for gmail account you can enable it via https://myaccount.google.com/lesssecureapps).  Syntax  @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , attachments= STRING , @map(...)))  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         username \n         Username of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com). \n         \n         STRING \n         No \n         No \n     \n     \n         address \n         Address of the email account which is used to send emails. \n         \n         STRING \n         No \n         No \n     \n     \n         password \n         Password of the email account. \n         \n         STRING \n         No \n         No \n     \n     \n         host \n         Host name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account. \n         smtp.gmail.com \n         STRING \n         Yes \n         No \n     \n     \n         port \n         The port which is used to create the connection. \n         '465' the default value is only valid is ssl enable \n         INT \n         Yes \n         No \n     \n     \n         ssl.enable \n         Whether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection. \n         true \n         BOOL \n         Yes \n         No \n     \n     \n         auth \n         Whether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command. \n         true \n         BOOL \n         Yes \n         No \n     \n     \n         content.type \n         Content type can be either 'text/plain' or 'text/html'. \n         text/plain \n         STRING \n         Yes \n         No \n     \n     \n         subject \n         Subject of the mail which has to be send. \n         \n         STRING \n         No \n         Yes \n     \n     \n         to \n         Address of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list. \n         \n         STRING \n         No \n         Yes \n     \n     \n         cc \n         Address of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list. \n         None \n         STRING \n         Yes \n         No \n     \n     \n         bcc \n         Address of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list. \n         None \n         STRING \n         Yes \n         No \n     \n     \n         attachments \n         File paths of the files that needs to be attached to the email. These paths should be absolute paths. They can be either a directories or files . If it's a directory, all the files at its first level will be attached. \n         None \n         STRING \n         Yes \n         Yes \n       System Parameters  \n     \n         Name \n         Description \n         Default Value \n         Possible Parameters \n     \n     \n         mail.smtp.ssl.trust \n         If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to \" \", all hosts are trusted. If set to a whitespace separated list of hosts, those hosts are trusted. Otherwise, trust depends on the certificate the server presents. \n         \n         String \n     \n     \n         mail.smtp.connectiontimeout \n         Socket connection timeout value in milliseconds.  \n         infinite timeout \n         Any Integer \n     \n     \n         mail.smtp.timeout \n         Socket I/O timeout value in milliseconds.  \n         infinite timeout \n         Any Integer \n     \n     \n         mail.smtp.from \n         Email address to use for SMTP MAIL command. This sets the envelope return address. \n         Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). \n         Valid email address \n     \n     \n         mail.smtp.localport \n         Local port number to bind to when creating the SMTP socket. \n         Defaults to the port number picked by the Socket class. \n         Any Integer \n     \n     \n         mail.smtp.ehlo \n         If false, do not attempt to sign on with the EHLO command. \n         true \n         true or false \n     \n     \n         mail.smtp.auth.login.disable \n         If true, prevents use of the AUTH LOGIN command. \n         false \n         true or false \n     \n     \n         mail.smtp.auth.plain.disable \n         If true, prevents use of the AUTH PLAIN command. \n         false \n         true or false \n     \n     \n         mail.smtp.auth.digest-md5.disable \n         If true, prevents use of the AUTH DIGEST-MD5 command. \n         false \n         true or false \n     \n     \n         mail.smtp.auth.ntlm.disable \n         If true, prevents use of the AUTH NTLM command \n         false \n         true or false \n     \n     \n         mail.smtp.auth.ntlm.domain \n         The NTLM authentication domain. \n         None \n         Valid NTLM authentication domain name \n     \n     \n         mail.smtp.auth.ntlm.flags \n         NTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details. \n         None \n         Valid NTLM protocol-specific flags. \n     \n     \n         mail.smtp.dsn.notify \n         The NOTIFY option to the RCPT command. \n         None \n         Either NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas). \n     \n     \n         mail.smtp.dsn.ret \n         The RET option to the MAIL command. \n         None \n         Either FULL or HDRS. \n     \n     \n         mail.smtp.sendpartial \n         If set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address. \n         false \n         true or false \n     \n     \n         mail.smtp.sasl.enable \n         If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. \n         false \n         true or false \n     \n     \n         mail.smtp.sasl.mechanisms \n         A space or comma separated list of SASL mechanism names to try to use. \n         None \n         \n     \n     \n         mail.smtp.sasl.authorizationid \n         The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. \n         username \n         Valid ID \n     \n     \n         mail.smtp.sasl.realm \n         The realm to use with DIGEST-MD5 authentication. \n         None \n         \n     \n     \n         mail.smtp.quitwait \n         If set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command. \n         false \n         true or false \n     \n     \n         mail.smtp.reportsuccess \n         If set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful. \n         false \n         true or false \n     \n     \n         mail.smtp.socketFactory \n         If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets. \n         None \n         Socket Factory \n     \n     \n         mail.smtp.socketFactory.class \n         If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets. \n         None \n         \n     \n     \n         mail.smtp.socketFactory.fallback \n         If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. \n         true \n         true or false \n     \n     \n         mail.smtp.socketFactory.port \n         Specifies the port to connect to when using the specified socket factory \n         25 \n         Valid port number \n     \n     \n         mail.smtp.ssl.protocols \n         Specifies the SSL protocols that will be enabled for SSL connections. \n         None \n         The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. \n     \n     \n         mail.smtp.starttls.enable \n         If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. \n         false \n         true or false \n     \n     \n         mail.smtp.starttls.required \n         If true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail. \n         false \n         true or false \n     \n     \n         mail.smtp.socks.host \n         Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. \n         None \n         \n     \n     \n         mail.smtp.socks.port \n         Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. \n         1080 \n         valid port number \n     \n     \n         mail.smtp.auth.ntlm.disable \n         If true, prevents use of the AUTH NTLM command \n         false \n         true or false \n     \n     \n         mail.smtp.mailextension \n         Extension string to append to the MAIL command. \n         None \n         \n     \n     \n         mail.smtp.userset \n         If set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue. \n         false \n         true or false \n       Examples  EXAMPLE 1  @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string);  Following example illustrates how to publish events using the email sinkusing mandatory parameters. As in the example, it publishes events come from the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection.  EXAMPLE 2  @sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string);  Following example illustrates how to configure the query parameters and system parameters in the deployment ymal file. Corresponding parameters need to be configure under name:'email' and namespace:'sink' as follows extensions: -  extension: name:'email' namespace:'sink' properties: username:  sender's email username address:  sender's email address password:  sender's email password As in the example, it publishes events comefrom the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection.  EXAMPLE 3  @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream fooStream (name string, age int, country string);  Following example illustrates how to publish events using the email sink. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given  to , cc  and  bcc  recipients using a secure connection.  name  in the  subject  attribute will be the value of the  name  parameter in the corresponding output event  EXAMPLE 4  @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.comattachments= '{{attachments}}')define stream fooStream (name string, age int, country string, attachments string);  Following example illustrates how to publish events using theemail sink. Here files are also attached to the email. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given  to , cc  and  bcc  recipients using a secure connection.  name  in the  subject  attribute will be the value of the  name  parameter in the corresponding output event. Also to the same email message, the local file(s) related to the path received for the attribute attachments is/are attached.", 
            "title": "email (Sink)"
        }, 
        {
            "location": "/api/1.0.16/#source", 
            "text": "", 
            "title": "Source"
        }, 
        {
            "location": "/api/1.0.16/#email-source", 
            "text": "Email source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store ,  https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters).  Syntax  @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...)))  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         username \n         user name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account. \n         \n         STRING \n         No \n         No \n     \n     \n         password \n         password of the email account \n         \n         STRING \n         No \n         No \n     \n     \n         store \n         Store type that used to receive emails. it can be either imap or pop3. \n         imap \n         STRING \n         Yes \n         No \n     \n     \n         host \n         Host name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable. \n         If store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'. \n         STRING \n         Yes \n         No \n     \n     \n         port \n         The port which is used to create the connection. \n         '993' the default value is valid only if store is imap and ssl enable \n         INT \n         Yes \n         No \n     \n     \n         folder \n         Name of the folder to fetch email. \n         INBOX \n         STRING \n         Yes \n         No \n     \n     \n         search.term \n         Option which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol. \n         None \n         STRING \n         Yes \n         No \n     \n     \n         polling.interval \n         Interval that email source should poll the account to check for new mails arrivals in seconds. \n         600 \n         LONG \n         Yes \n         No \n     \n     \n         action.after.processed \n         Action that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE \n         NONE \n         STRING \n         Yes \n         No \n     \n     \n         folder.to.move \n         The name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move. \n         \n         STRING \n         No \n         No \n     \n     \n         content.type \n         Content type of the email. It can be either 'text/plain' or 'text/html.' \n         text/plain \n         STRING \n         Yes \n         No \n     \n     \n         ssl.enable \n         If it is 'true' then use a secure port to establish the connection. The possible values are 'true or false. \n         true \n         BOOL \n         Yes \n         No \n       System Parameters  \n     \n         Name \n         Description \n         Default Value \n         Possible Parameters \n     \n     \n         mail.imap.partialfetch \n         Controls whether the IMAP partial-fetch capability should be used \n         true \n         true or false \n     \n     \n         mail.imap.fetchsize \n         Partial fetch size in bytes. \n         16K \n         value in bytes \n     \n     \n         mail.imap.peek \n         If set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage. \n         false \n         true or false \n     \n     \n         mail.imap.connectiontimeout \n         Socket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket. \n         infinity timeout \n         Any Integer value \n     \n     \n         mail.imap.timeout \n         Socket read timeout value in milliseconds. This timeout is implemented by java.net.Socket. \n         infinity timeout \n         Any Integer value \n     \n     \n         mail.imap.writetimeout \n         Socket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection. \n         infinity timeout \n         Any Integer value \n     \n     \n         mail.imap.statuscachetimeout \n         Timeout value in milliseconds for cache of STATUS command response. \n         1000ms \n         Time out in miliseconds \n     \n     \n         mail.imap.appendbuffersize \n         Maximum size of a message to buffer in memory when appending to an IMAP folder. \n         None \n         Any Integer value \n     \n     \n         mail.imap.connectionpoolsize \n         Maximum number of available connections in the connection pool. \n         1 \n         Any Integer value \n     \n     \n         mail.imap.connectionpooltimeout \n         Timeout value in milliseconds for connection pool connections.  \n         45000ms \n         Any Integer \n     \n     \n         mail.imap.separatestoreconnection \n         Flag to indicate whether to use a dedicated store connection for store commands. \n         true \n         true or false \n     \n     \n         mail.imap.auth.login.disable \n         If true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command. \n         false \n         true or false \n     \n     \n         mail.imap.auth.plain.disable \n         If true, prevents use of the AUTHENTICATE PLAIN command. \n         false \n         true or false \n     \n     \n         mail.imap.auth.ntlm.disable \n         If true, prevents use of the AUTHENTICATE NTLM command. \n         false \n         true or false \n     \n     \n         mail.imap.proxyauth.user \n         If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property. \n         None \n         Valid string value \n     \n     \n         mail.imap.localaddress \n         Local address (host name) to bind to when creating the IMAP socket. \n         Defaults to the address picked by the Socket class. \n         Valid string value \n     \n     \n         mail.imap.localport \n         Local port number to bind to when creating the IMAP socket. \n         Defaults to the port number picked by the Socket class. \n         Valid String value \n     \n     \n         mail.imap.sasl.enable \n         If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. \n         false \n         true or false \n     \n     \n         mail.imap.sasl.mechanisms \n         A space or comma separated list of SASL mechanism names to try to use. \n         None \n         Valid string value \n     \n     \n         mail.imap.sasl.authorizationid \n         The authorization ID to use in the SASL authentication. \n         If not set, the authentication ID (user name) is used. \n         Valid string value \n     \n     \n         mail.imap.sasl.realm \n         The realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5. \n         None \n         Valid string value \n     \n     \n         mail.imap.auth.ntlm.domain \n         The NTLM authentication domain. \n         None \n         Valid string value \n     \n     \n         The NTLM authentication domain. \n         NTLM protocol-specific flags. \n         None \n         Valid integer value \n     \n     \n         mail.imap.socketFactory \n         If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets. \n         None \n         Valid SocketFactory \n     \n     \n         mail.imap.socketFactory.class \n         If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets. \n         None \n         Valid string \n     \n     \n         mail.imap.socketFactory.fallback \n         If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class.  \n         true \n         true or false \n     \n     \n         mail.imap.socketFactory.port \n         Specifies the port to connect to when using the specified socket factory. Default port is used when not set. \n         143 \n         Valid Integer \n     \n     \n         mail.imap.ssl.checkserveridentity \n         If set to true, check the server identity as specified by RFC 2595. \n         false \n         true or false \n     \n     \n         mail.imap.ssl.trust \n         If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. \n         \n         Valid String \n     \n     \n         mail.imap.ssl.socketFactory \n         If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets. \n         None \n         SSL Socket Factory \n     \n     \n         mail.imap.ssl.socketFactory.class \n         If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets. \n         None \n         Valid String \n     \n     \n         mail.imap.ssl.socketFactory.port \n         Specifies the port to connect to when using the specified socket factory. \n         the default port will be used-993 \n         valid port number \n     \n     \n         mail.imap.ssl.protocols \n         Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. \n         None \n         Valid string \n     \n     \n         mail.imap.starttls.enable \n         If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. \n         false \n         true or false \n     \n     \n         mail.imap.socks.host \n         Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. \n         None \n         Valid String \n     \n     \n         mail.imap.socks.port \n         Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. \n         1080 \n         Valid String \n     \n     \n         mail.imap.minidletime \n         This property sets the delay in milliseconds. \n         10 milliseconds \n         time in seconds (Integer) \n     \n     \n         mail.imap.enableimapevents \n         Enable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string. \n         false \n         true or false \n     \n     \n         mail.imap.folder.class \n         Class name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store) \n         None \n         Valid String \n     \n     \n         mail.pop3.connectiontimeout \n         Socket connection timeout value in milliseconds. \n         Infinite timeout \n         Integer value \n     \n     \n         mail.pop3.timeout \n         Socket I/O timeout value in milliseconds.  \n         Infinite timeout \n         Integer value \n     \n     \n         mail.pop3.message.class \n         Class name of a subclass of com.sun.mail.pop3.POP3Message \n         None \n         Valid String \n     \n     \n         mail.pop3.localaddress \n         Local address (host name) to bind to when creating the POP3 socket. \n         Defaults to the address picked by the Socket class. \n         Valid String \n     \n     \n         mail.pop3.localport \n         Local port number to bind to when creating the POP3 socket. \n         Defaults to the port number picked by the Socket class. \n         Valid port number \n     \n     \n         mail.pop3.apop.enable \n         If set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password. \n         false \n         true or false \n     \n     \n         mail.pop3.socketFactory \n         If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets. \n         None \n         Socket Factory \n     \n     \n         mail.pop3.socketFactory.class \n         If set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets. \n         None \n         Valid String \n     \n     \n         mail.pop3.socketFactory.fallback \n         If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. \n         false \n         true or false \n     \n     \n         mail.pop3.socketFactory.port \n         Specifies the port to connect to when using the specified socket factory. \n         Default port \n         Valid port number \n     \n     \n         mail.pop3.ssl.checkserveridentity \n         If set to true, check the server identity as specified by RFC 2595.  \n         false \n         true or false \n     \n     \n         mail.pop3.ssl.trust \n         If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. \n         \n         Valid String \n     \n     \n         mail.pop3.ssl.socketFactory \n         If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. \n         None \n         SSL Socket Factory \n     \n     \n         mail.pop3.ssl.checkserveridentity \n         If set to true, check the server identity as specified by RFC 2595.  \n         false \n         true or false \n     \n     \n         mail.pop3.ssl.trust \n          If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.  \n         trust depends on the certificate the server presents. \n         Valid String \n     \n     \n         mail.pop3.ssl.socketFactory \n         If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. \n         None \n         SSL Socket Factory \n     \n     \n         mail.pop3.ssl.socketFactory.class \n         If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets.  \n         None \n         Valid String \n     \n     \n         mail.pop3.ssl.socketFactory.p \n         Specifies the port to connect to when using the specified socket factory. \n         995 \n         Valid Integer \n     \n     \n         mail.pop3.ssl.protocols \n         Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. \n         None \n         Valid String \n     \n     \n         mail.pop3.starttls.enable \n         If true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands \n         false \n         true or false \n     \n     \n         mail.pop3.starttls.required \n         If true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail. \n         false \n         true or false \n     \n     \n         mail.pop3.socks.host \n         Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. \n         None \n         Valid String \n     \n     \n         mail.pop3.socks.port \n         Specifies the port number for the SOCKS5 proxy server. \n         None \n         Valid String \n     \n     \n         mail.pop3.disabletop \n         If set to true, the POP3 TOP command will not be used to fetch message headers.  \n         false \n         true or false \n     \n     \n         mail.pop3.forgettopheaders \n         If set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command. \n         false \n         true or false \n     \n     \n         mail.pop3.filecache.enable \n         If set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. \n         false \n         true or false \n     \n     \n         mail.pop3.filecache.dir \n         If the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files. \n         None \n         Valid String \n     \n     \n         mail.pop3.cachewriteto \n         Controls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached. \n         false \n         true or false \n     \n     \n         mail.pop3.keepmessagecontent \n         If this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method).  \n         false \n         true or false \n       Examples  EXAMPLE 1  @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string);  Following example illustrates how to receive events in  xml  format using email source. In this example only mandatory parameters are defined in the  in the stream definition. For other parameters default values are taken. since search term is not defined, it poll and take all new messages in the inbox folder  EXAMPLE 2  @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string);  Following example illustrates how to receive events in  xml  format using email source. The email source polls the mail account in every 500 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term (email messages which come from from.account@. host name , contains  cc.account  in cc receipts list, and  Stream Processor  words in the mail subject) In the example, action after processes is defined as the  DELETE , so that after processing the event, corresponding mail is deleted from the mail folder.", 
            "title": "email (Source)"
        }, 
        {
            "location": "/api/1.0.15/", 
            "text": "API Docs - v1.0.15\n\n\nSink\n\n\nemail \n(Sink)\n\n\nThe email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken for the optional parameters. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters). Further, some email account required to enable 'access to less secure apps' option (for gmail account you can enable it via https://myaccount.google.com/lesssecureapps).\n\n\n\nSyntax\n\n\n@sink(type=\nemail\n, username=\nSTRING\n, address=\nSTRING\n, password=\nSTRING\n, host=\nSTRING\n, port=\nINT\n, ssl.enable=\nBOOL\n, auth=\nBOOL\n, content.type=\nSTRING\n, subject=\nSTRING\n, to=\nSTRING\n, cc=\nSTRING\n, bcc=\nSTRING\n, attachments=\nSTRING\n, @map(...)))\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \nusername\n\n        \nUsername of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com).\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \naddress\n\n        \nAddress of the email account which is used to send emails.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \npassword\n\n        \nPassword of the email account.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \nhost\n\n        \nHost name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account.\n\n        \nsmtp.gmail.com\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nport\n\n        \nThe port which is used to create the connection.\n\n        \n'465' the default value is only valid is ssl enable\n\n        \nINT\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nssl.enable\n\n        \nWhether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection.\n\n        \ntrue\n\n        \nBOOL\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nauth\n\n        \nWhether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command.\n\n        \ntrue\n\n        \nBOOL\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \ncontent.type\n\n        \nContent type can be either 'text/plain' or 'text/html'.\n\n        \ntext/plain\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nsubject\n\n        \nSubject of the mail which has to be send.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nYes\n\n    \n\n    \n\n        \nto\n\n        \nAddress of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nYes\n\n    \n\n    \n\n        \ncc\n\n        \nAddress of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list.\n\n        \nNone\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nbcc\n\n        \nAddress of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list.\n\n        \nNone\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nattachments\n\n        \nFile paths of the files that needs to be attached to the email.\nThese paths should be absolute paths.\nThey can be either a directories or files. If it's a directory all the files inside  that directory will be attached.\n\n        \nNone\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n\n\n\nSystem Parameters\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Parameters\n\n    \n\n    \n\n        \nmail.smtp.ssl.trust\n\n        \nIf set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to \"\n\", all hosts are trusted. If set to a whitespace separated list of hosts, those hosts are trusted. Otherwise, trust depends on the certificate the server presents.\n\n        \n\n        \nString\n\n    \n\n    \n\n        \nmail.smtp.connectiontimeout\n\n        \nSocket connection timeout value in milliseconds. \n\n        \ninfinite timeout\n\n        \nAny Integer\n\n    \n\n    \n\n        \nmail.smtp.timeout\n\n        \nSocket I/O timeout value in milliseconds. \n\n        \ninfinite timeout\n\n        \nAny Integer\n\n    \n\n    \n\n        \nmail.smtp.from\n\n        \nEmail address to use for SMTP MAIL command. This sets the envelope return address.\n\n        \nDefaults to msg.getFrom() or InternetAddress.getLocalAddress().\n\n        \nValid email address\n\n    \n\n    \n\n        \nmail.smtp.localport\n\n        \nLocal port number to bind to when creating the SMTP socket.\n\n        \nDefaults to the port number picked by the Socket class.\n\n        \nAny Integer\n\n    \n\n    \n\n        \nmail.smtp.ehlo\n\n        \nIf false, do not attempt to sign on with the EHLO command.\n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.login.disable\n\n        \nIf true, prevents use of the AUTH LOGIN command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.plain.disable\n\n        \nIf true, prevents use of the AUTH PLAIN command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.digest-md5.disable\n\n        \nIf true, prevents use of the AUTH DIGEST-MD5 command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.ntlm.disable\n\n        \nIf true, prevents use of the AUTH NTLM command\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.ntlm.domain\n\n        \nThe NTLM authentication domain.\n\n        \nNone\n\n        \nValid NTLM authentication domain name\n\n    \n\n    \n\n        \nmail.smtp.auth.ntlm.flags\n\n        \nNTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details.\n\n        \nNone\n\n        \nValid NTLM protocol-specific flags.\n\n    \n\n    \n\n        \nmail.smtp.dsn.notify\n\n        \nThe NOTIFY option to the RCPT command.\n\n        \nNone\n\n        \nEither NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas).\n\n    \n\n    \n\n        \nmail.smtp.dsn.ret\n\n        \nThe RET option to the MAIL command.\n\n        \nNone\n\n        \nEither FULL or HDRS.\n\n    \n\n    \n\n        \nmail.smtp.sendpartial\n\n        \nIf set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.sasl.enable\n\n        \nIf set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.sasl.mechanisms\n\n        \nA space or comma separated list of SASL mechanism names to try to use.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.sasl.authorizationid\n\n        \nThe authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used.\n\n        \nusername\n\n        \nValid ID\n\n    \n\n    \n\n        \nmail.smtp.sasl.realm\n\n        \nThe realm to use with DIGEST-MD5 authentication.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.quitwait\n\n        \nIf set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.reportsuccess\n\n        \nIf set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.socketFactory\n\n        \nIf set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets.\n\n        \nNone\n\n        \nSocket Factory\n\n    \n\n    \n\n        \nmail.smtp.socketFactory.class\n\n        \nIf set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.socketFactory.fallback\n\n        \nIf set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class.\n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.socketFactory.port\n\n        \nSpecifies the port to connect to when using the specified socket factory\n\n        \n25\n\n        \nValid port number\n\n    \n\n    \n\n        \nmail.smtp.ssl.protocols\n\n        \nSpecifies the SSL protocols that will be enabled for SSL connections.\n\n        \nNone\n\n        \nThe property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method.\n\n    \n\n    \n\n        \nmail.smtp.starttls.enable\n\n        \nIf true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.starttls.required\n\n        \nIf true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.socks.host\n\n        \nSpecifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.socks.port\n\n        \nSpecifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080.\n\n        \n1080\n\n        \nvalid port number\n\n    \n\n    \n\n        \nmail.smtp.auth.ntlm.disable\n\n        \nIf true, prevents use of the AUTH NTLM command\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.mailextension\n\n        \nExtension string to append to the MAIL command.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.userset\n\n        \nIf set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\n@sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string);\n\n\n\n\nFollowing example illustrates how to publish events using the email sinkusing mandatory parameters. As in the example, it publishes events come from the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection.\n\n\n\nEXAMPLE 2\n\n\n@sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string);\n\n\n\n\nFollowing example illustrates how to configure the query parameters and system parameters in the deployment ymal file.\nCorresponding parameters need to be configure under name:'email' and namespace:'sink' as follows\nextensions:\n-  extension:\nname:'email'\nnamespace:'sink'\nproperties:\nusername: \nsender's email username\naddress: \nsender's email address\npassword: \nsender's email password\nAs in the example, it publishes events comefrom the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection.\n\n\n\nEXAMPLE 3\n\n\n@sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream fooStream (name string, age int, country string);\n\n\n\n\nFollowing example illustrates how to publish events using the email sink. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given \nto\n,\ncc\n and \nbcc\n recipients using a secure connection. \nname\n in the \nsubject\n attribute will be the value of the \nname\n parameter in the corresponding output event\n\n\n\nEXAMPLE 4\n\n\n@sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.comattachments= '{{attachments}}')define stream fooStream (name string, age int, country string, attachments string);\n\n\n\n\nFollowing example illustrates how to publish events using theemail sink. Here files are also attached to the email. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given \nto\n,\ncc\n and \nbcc\n recipients using a secure connection. \nname\n in the \nsubject\n attribute will be the value of the \nname\n parameter in the corresponding output event.\nAlso to the same email message, the local file(s) related to the path received for the attribute attachments is/are attached.\n\n\n\nSource\n\n\nemail \n(Source)\n\n\nEmail source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store ,  https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters).\n\n\n\nSyntax\n\n\n@source(type=\nemail\n, username=\nSTRING\n, password=\nSTRING\n, store=\nSTRING\n, host=\nSTRING\n, port=\nINT\n, folder=\nSTRING\n, search.term=\nSTRING\n, polling.interval=\nLONG\n, action.after.processed=\nSTRING\n, folder.to.move=\nSTRING\n, content.type=\nSTRING\n, ssl.enable=\nBOOL\n, @map(...)))\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \nusername\n\n        \nuser name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \npassword\n\n        \npassword of the email account\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \nstore\n\n        \nStore type that used to receive emails. it can be either imap or pop3.\n\n        \nimap\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nhost\n\n        \nHost name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable.\n\n        \nIf store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'.\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nport\n\n        \nThe port which is used to create the connection.\n\n        \n'993' the default value is valid only if store is imap and ssl enable\n\n        \nINT\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nfolder\n\n        \nName of the folder to fetch email.\n\n        \nINBOX\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nsearch.term\n\n        \nOption which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol.\n\n        \nNone\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \npolling.interval\n\n        \nInterval that email source should poll the account to check for new mails arrivals in seconds.\n\n        \n600\n\n        \nLONG\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \naction.after.processed\n\n        \nAction that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE\n\n        \nNONE\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nfolder.to.move\n\n        \nThe name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \ncontent.type\n\n        \nContent type of the email. It can be either 'text/plain' or 'text/html.'\n\n        \ntext/plain\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nssl.enable\n\n        \nIf it is 'true' then use a secure port to establish the connection. The possible values are 'true or false.\n\n        \ntrue\n\n        \nBOOL\n\n        \nYes\n\n        \nNo\n\n    \n\n\n\n\nSystem Parameters\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Parameters\n\n    \n\n    \n\n        \nmail.imap.partialfetch\n\n        \nControls whether the IMAP partial-fetch capability should be used\n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.fetchsize\n\n        \nPartial fetch size in bytes.\n\n        \n16K\n\n        \nvalue in bytes\n\n    \n\n    \n\n        \nmail.imap.peek\n\n        \nIf set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.connectiontimeout\n\n        \nSocket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket.\n\n        \ninfinity timeout\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.timeout\n\n        \nSocket read timeout value in milliseconds. This timeout is implemented by java.net.Socket.\n\n        \ninfinity timeout\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.writetimeout\n\n        \nSocket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection.\n\n        \ninfinity timeout\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.statuscachetimeout\n\n        \nTimeout value in milliseconds for cache of STATUS command response.\n\n        \n1000ms\n\n        \nTime out in miliseconds\n\n    \n\n    \n\n        \nmail.imap.appendbuffersize\n\n        \nMaximum size of a message to buffer in memory when appending to an IMAP folder.\n\n        \nNone\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.connectionpoolsize\n\n        \nMaximum number of available connections in the connection pool.\n\n        \n1\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.connectionpooltimeout\n\n        \nTimeout value in milliseconds for connection pool connections. \n\n        \n45000ms\n\n        \nAny Integer\n\n    \n\n    \n\n        \nmail.imap.separatestoreconnection\n\n        \nFlag to indicate whether to use a dedicated store connection for store commands.\n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.auth.login.disable\n\n        \nIf true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.auth.plain.disable\n\n        \nIf true, prevents use of the AUTHENTICATE PLAIN command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.auth.ntlm.disable\n\n        \nIf true, prevents use of the AUTHENTICATE NTLM command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.proxyauth.user\n\n        \nIf the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property.\n\n        \nNone\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.localaddress\n\n        \nLocal address (host name) to bind to when creating the IMAP socket.\n\n        \nDefaults to the address picked by the Socket class.\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.localport\n\n        \nLocal port number to bind to when creating the IMAP socket.\n\n        \nDefaults to the port number picked by the Socket class.\n\n        \nValid String value\n\n    \n\n    \n\n        \nmail.imap.sasl.enable\n\n        \nIf set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.sasl.mechanisms\n\n        \nA space or comma separated list of SASL mechanism names to try to use.\n\n        \nNone\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.sasl.authorizationid\n\n        \nThe authorization ID to use in the SASL authentication.\n\n        \nIf not set, the authentication ID (user name) is used.\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.sasl.realm\n\n        \nThe realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5.\n\n        \nNone\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.auth.ntlm.domain\n\n        \nThe NTLM authentication domain.\n\n        \nNone\n\n        \nValid string value\n\n    \n\n    \n\n        \nThe NTLM authentication domain.\n\n        \nNTLM protocol-specific flags.\n\n        \nNone\n\n        \nValid integer value\n\n    \n\n    \n\n        \nmail.imap.socketFactory\n\n        \nIf set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets.\n\n        \nNone\n\n        \nValid SocketFactory\n\n    \n\n    \n\n        \nmail.imap.socketFactory.class\n\n        \nIf set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets.\n\n        \nNone\n\n        \nValid string\n\n    \n\n    \n\n        \nmail.imap.socketFactory.fallback\n\n        \nIf set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. \n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.socketFactory.port\n\n        \nSpecifies the port to connect to when using the specified socket factory. Default port is used when not set.\n\n        \n143\n\n        \nValid Integer\n\n    \n\n    \n\n        \nmail.imap.ssl.checkserveridentity\n\n        \nIf set to true, check the server identity as specified by RFC 2595.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.ssl.trust\n\n        \nIf set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '\n', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents.\n\n        \n\n        \nValid String\n\n    \n\n    \n\n        \nmail.imap.ssl.socketFactory\n\n        \nIf set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets.\n\n        \nNone\n\n        \nSSL Socket Factory\n\n    \n\n    \n\n        \nmail.imap.ssl.socketFactory.class\n\n        \nIf set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.imap.ssl.socketFactory.port\n\n        \nSpecifies the port to connect to when using the specified socket factory.\n\n        \nthe default port will be used-993\n\n        \nvalid port number\n\n    \n\n    \n\n        \nmail.imap.ssl.protocols\n\n        \nSpecifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method.\n\n        \nNone\n\n        \nValid string\n\n    \n\n    \n\n        \nmail.imap.starttls.enable\n\n        \nIf true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.socks.host\n\n        \nSpecifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.imap.socks.port\n\n        \nSpecifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080.\n\n        \n1080\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.imap.minidletime\n\n        \nThis property sets the delay in milliseconds.\n\n        \n10 milliseconds\n\n        \ntime in seconds (Integer)\n\n    \n\n    \n\n        \nmail.imap.enableimapevents\n\n        \nEnable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.folder.class\n\n        \nClass name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store)\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.connectiontimeout\n\n        \nSocket connection timeout value in milliseconds.\n\n        \nInfinite timeout\n\n        \nInteger value\n\n    \n\n    \n\n        \nmail.pop3.timeout\n\n        \nSocket I/O timeout value in milliseconds. \n\n        \nInfinite timeout\n\n        \nInteger value\n\n    \n\n    \n\n        \nmail.pop3.message.class\n\n        \nClass name of a subclass of com.sun.mail.pop3.POP3Message\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.localaddress\n\n        \nLocal address (host name) to bind to when creating the POP3 socket.\n\n        \nDefaults to the address picked by the Socket class.\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.localport\n\n        \nLocal port number to bind to when creating the POP3 socket.\n\n        \nDefaults to the port number picked by the Socket class.\n\n        \nValid port number\n\n    \n\n    \n\n        \nmail.pop3.apop.enable\n\n        \nIf set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.socketFactory\n\n        \nIf set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets.\n\n        \nNone\n\n        \nSocket Factory\n\n    \n\n    \n\n        \nmail.pop3.socketFactory.class\n\n        \nIf set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.socketFactory.fallback\n\n        \nIf set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.socketFactory.port\n\n        \nSpecifies the port to connect to when using the specified socket factory.\n\n        \nDefault port\n\n        \nValid port number\n\n    \n\n    \n\n        \nmail.pop3.ssl.checkserveridentity\n\n        \nIf set to true, check the server identity as specified by RFC 2595. \n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.ssl.trust\n\n        \nIf set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to '\n', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents.\n\n        \n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.ssl.socketFactory\n\n        \nIf set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets.\n\n        \nNone\n\n        \nSSL Socket Factory\n\n    \n\n    \n\n        \nmail.pop3.ssl.checkserveridentity\n\n        \nIf set to true, check the server identity as specified by RFC 2595. \n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.ssl.trust\n\n        \n If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted. \n\n        \ntrust depends on the certificate the server presents.\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.ssl.socketFactory\n\n        \nIf set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets.\n\n        \nNone\n\n        \nSSL Socket Factory\n\n    \n\n    \n\n        \nmail.pop3.ssl.socketFactory.class\n\n        \nIf set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets. \n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.ssl.socketFactory.p\n\n        \nSpecifies the port to connect to when using the specified socket factory.\n\n        \n995\n\n        \nValid Integer\n\n    \n\n    \n\n        \nmail.pop3.ssl.protocols\n\n        \nSpecifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.starttls.enable\n\n        \nIf true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.starttls.required\n\n        \nIf true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.socks.host\n\n        \nSpecifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.socks.port\n\n        \nSpecifies the port number for the SOCKS5 proxy server.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.disabletop\n\n        \nIf set to true, the POP3 TOP command will not be used to fetch message headers. \n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.forgettopheaders\n\n        \nIf set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.filecache.enable\n\n        \nIf set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.filecache.dir\n\n        \nIf the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.cachewriteto\n\n        \nControls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.keepmessagecontent\n\n        \nIf this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method). \n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\n@source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string);\n\n\n\n\nFollowing example illustrates how to receive events in \nxml\n format using email source. In this example only mandatory parameters are defined in the  in the stream definition. For other parameters default values are taken. since search term is not defined, it poll and take all new messages in the inbox folder\n\n\n\nEXAMPLE 2\n\n\n@source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string);\n\n\n\n\nFollowing example illustrates how to receive events in \nxml\n format using email source. The email source polls the mail account in every 500 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term (email messages which come from\nfrom.account@.\nhost name\n, contains \ncc.account\n in cc receipts list, and \nStream Processor\n words in the mail subject) In the example, action after processes is defined as the \nDELETE\n, so that after processing the event, corresponding mail is deleted from the mail folder.", 
            "title": "1.0.15"
        }, 
        {
            "location": "/api/1.0.15/#api-docs-v1015", 
            "text": "", 
            "title": "API Docs - v1.0.15"
        }, 
        {
            "location": "/api/1.0.15/#sink", 
            "text": "", 
            "title": "Sink"
        }, 
        {
            "location": "/api/1.0.15/#email-sink", 
            "text": "The email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken for the optional parameters. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters). Further, some email account required to enable 'access to less secure apps' option (for gmail account you can enable it via https://myaccount.google.com/lesssecureapps).  Syntax  @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , attachments= STRING , @map(...)))  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         username \n         Username of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com). \n         \n         STRING \n         No \n         No \n     \n     \n         address \n         Address of the email account which is used to send emails. \n         \n         STRING \n         No \n         No \n     \n     \n         password \n         Password of the email account. \n         \n         STRING \n         No \n         No \n     \n     \n         host \n         Host name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account. \n         smtp.gmail.com \n         STRING \n         Yes \n         No \n     \n     \n         port \n         The port which is used to create the connection. \n         '465' the default value is only valid is ssl enable \n         INT \n         Yes \n         No \n     \n     \n         ssl.enable \n         Whether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection. \n         true \n         BOOL \n         Yes \n         No \n     \n     \n         auth \n         Whether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command. \n         true \n         BOOL \n         Yes \n         No \n     \n     \n         content.type \n         Content type can be either 'text/plain' or 'text/html'. \n         text/plain \n         STRING \n         Yes \n         No \n     \n     \n         subject \n         Subject of the mail which has to be send. \n         \n         STRING \n         No \n         Yes \n     \n     \n         to \n         Address of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list. \n         \n         STRING \n         No \n         Yes \n     \n     \n         cc \n         Address of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list. \n         None \n         STRING \n         Yes \n         No \n     \n     \n         bcc \n         Address of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list. \n         None \n         STRING \n         Yes \n         No \n     \n     \n         attachments \n         File paths of the files that needs to be attached to the email. These paths should be absolute paths. They can be either a directories or files. If it's a directory all the files inside  that directory will be attached. \n         None \n         STRING \n         Yes \n         No \n       System Parameters  \n     \n         Name \n         Description \n         Default Value \n         Possible Parameters \n     \n     \n         mail.smtp.ssl.trust \n         If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to \" \", all hosts are trusted. If set to a whitespace separated list of hosts, those hosts are trusted. Otherwise, trust depends on the certificate the server presents. \n         \n         String \n     \n     \n         mail.smtp.connectiontimeout \n         Socket connection timeout value in milliseconds.  \n         infinite timeout \n         Any Integer \n     \n     \n         mail.smtp.timeout \n         Socket I/O timeout value in milliseconds.  \n         infinite timeout \n         Any Integer \n     \n     \n         mail.smtp.from \n         Email address to use for SMTP MAIL command. This sets the envelope return address. \n         Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). \n         Valid email address \n     \n     \n         mail.smtp.localport \n         Local port number to bind to when creating the SMTP socket. \n         Defaults to the port number picked by the Socket class. \n         Any Integer \n     \n     \n         mail.smtp.ehlo \n         If false, do not attempt to sign on with the EHLO command. \n         true \n         true or false \n     \n     \n         mail.smtp.auth.login.disable \n         If true, prevents use of the AUTH LOGIN command. \n         false \n         true or false \n     \n     \n         mail.smtp.auth.plain.disable \n         If true, prevents use of the AUTH PLAIN command. \n         false \n         true or false \n     \n     \n         mail.smtp.auth.digest-md5.disable \n         If true, prevents use of the AUTH DIGEST-MD5 command. \n         false \n         true or false \n     \n     \n         mail.smtp.auth.ntlm.disable \n         If true, prevents use of the AUTH NTLM command \n         false \n         true or false \n     \n     \n         mail.smtp.auth.ntlm.domain \n         The NTLM authentication domain. \n         None \n         Valid NTLM authentication domain name \n     \n     \n         mail.smtp.auth.ntlm.flags \n         NTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details. \n         None \n         Valid NTLM protocol-specific flags. \n     \n     \n         mail.smtp.dsn.notify \n         The NOTIFY option to the RCPT command. \n         None \n         Either NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas). \n     \n     \n         mail.smtp.dsn.ret \n         The RET option to the MAIL command. \n         None \n         Either FULL or HDRS. \n     \n     \n         mail.smtp.sendpartial \n         If set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address. \n         false \n         true or false \n     \n     \n         mail.smtp.sasl.enable \n         If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. \n         false \n         true or false \n     \n     \n         mail.smtp.sasl.mechanisms \n         A space or comma separated list of SASL mechanism names to try to use. \n         None \n         \n     \n     \n         mail.smtp.sasl.authorizationid \n         The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. \n         username \n         Valid ID \n     \n     \n         mail.smtp.sasl.realm \n         The realm to use with DIGEST-MD5 authentication. \n         None \n         \n     \n     \n         mail.smtp.quitwait \n         If set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command. \n         false \n         true or false \n     \n     \n         mail.smtp.reportsuccess \n         If set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful. \n         false \n         true or false \n     \n     \n         mail.smtp.socketFactory \n         If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets. \n         None \n         Socket Factory \n     \n     \n         mail.smtp.socketFactory.class \n         If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets. \n         None \n         \n     \n     \n         mail.smtp.socketFactory.fallback \n         If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. \n         true \n         true or false \n     \n     \n         mail.smtp.socketFactory.port \n         Specifies the port to connect to when using the specified socket factory \n         25 \n         Valid port number \n     \n     \n         mail.smtp.ssl.protocols \n         Specifies the SSL protocols that will be enabled for SSL connections. \n         None \n         The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. \n     \n     \n         mail.smtp.starttls.enable \n         If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. \n         false \n         true or false \n     \n     \n         mail.smtp.starttls.required \n         If true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail. \n         false \n         true or false \n     \n     \n         mail.smtp.socks.host \n         Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. \n         None \n         \n     \n     \n         mail.smtp.socks.port \n         Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. \n         1080 \n         valid port number \n     \n     \n         mail.smtp.auth.ntlm.disable \n         If true, prevents use of the AUTH NTLM command \n         false \n         true or false \n     \n     \n         mail.smtp.mailextension \n         Extension string to append to the MAIL command. \n         None \n         \n     \n     \n         mail.smtp.userset \n         If set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue. \n         false \n         true or false \n       Examples  EXAMPLE 1  @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string);  Following example illustrates how to publish events using the email sinkusing mandatory parameters. As in the example, it publishes events come from the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection.  EXAMPLE 2  @sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string);  Following example illustrates how to configure the query parameters and system parameters in the deployment ymal file. Corresponding parameters need to be configure under name:'email' and namespace:'sink' as follows extensions: -  extension: name:'email' namespace:'sink' properties: username:  sender's email username address:  sender's email address password:  sender's email password As in the example, it publishes events comefrom the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection.  EXAMPLE 3  @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream fooStream (name string, age int, country string);  Following example illustrates how to publish events using the email sink. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given  to , cc  and  bcc  recipients using a secure connection.  name  in the  subject  attribute will be the value of the  name  parameter in the corresponding output event  EXAMPLE 4  @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.comattachments= '{{attachments}}')define stream fooStream (name string, age int, country string, attachments string);  Following example illustrates how to publish events using theemail sink. Here files are also attached to the email. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given  to , cc  and  bcc  recipients using a secure connection.  name  in the  subject  attribute will be the value of the  name  parameter in the corresponding output event. Also to the same email message, the local file(s) related to the path received for the attribute attachments is/are attached.", 
            "title": "email (Sink)"
        }, 
        {
            "location": "/api/1.0.15/#source", 
            "text": "", 
            "title": "Source"
        }, 
        {
            "location": "/api/1.0.15/#email-source", 
            "text": "Email source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store ,  https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters).  Syntax  @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...)))  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         username \n         user name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account. \n         \n         STRING \n         No \n         No \n     \n     \n         password \n         password of the email account \n         \n         STRING \n         No \n         No \n     \n     \n         store \n         Store type that used to receive emails. it can be either imap or pop3. \n         imap \n         STRING \n         Yes \n         No \n     \n     \n         host \n         Host name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable. \n         If store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'. \n         STRING \n         Yes \n         No \n     \n     \n         port \n         The port which is used to create the connection. \n         '993' the default value is valid only if store is imap and ssl enable \n         INT \n         Yes \n         No \n     \n     \n         folder \n         Name of the folder to fetch email. \n         INBOX \n         STRING \n         Yes \n         No \n     \n     \n         search.term \n         Option which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol. \n         None \n         STRING \n         Yes \n         No \n     \n     \n         polling.interval \n         Interval that email source should poll the account to check for new mails arrivals in seconds. \n         600 \n         LONG \n         Yes \n         No \n     \n     \n         action.after.processed \n         Action that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE \n         NONE \n         STRING \n         Yes \n         No \n     \n     \n         folder.to.move \n         The name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move. \n         \n         STRING \n         No \n         No \n     \n     \n         content.type \n         Content type of the email. It can be either 'text/plain' or 'text/html.' \n         text/plain \n         STRING \n         Yes \n         No \n     \n     \n         ssl.enable \n         If it is 'true' then use a secure port to establish the connection. The possible values are 'true or false. \n         true \n         BOOL \n         Yes \n         No \n       System Parameters  \n     \n         Name \n         Description \n         Default Value \n         Possible Parameters \n     \n     \n         mail.imap.partialfetch \n         Controls whether the IMAP partial-fetch capability should be used \n         true \n         true or false \n     \n     \n         mail.imap.fetchsize \n         Partial fetch size in bytes. \n         16K \n         value in bytes \n     \n     \n         mail.imap.peek \n         If set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage. \n         false \n         true or false \n     \n     \n         mail.imap.connectiontimeout \n         Socket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket. \n         infinity timeout \n         Any Integer value \n     \n     \n         mail.imap.timeout \n         Socket read timeout value in milliseconds. This timeout is implemented by java.net.Socket. \n         infinity timeout \n         Any Integer value \n     \n     \n         mail.imap.writetimeout \n         Socket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection. \n         infinity timeout \n         Any Integer value \n     \n     \n         mail.imap.statuscachetimeout \n         Timeout value in milliseconds for cache of STATUS command response. \n         1000ms \n         Time out in miliseconds \n     \n     \n         mail.imap.appendbuffersize \n         Maximum size of a message to buffer in memory when appending to an IMAP folder. \n         None \n         Any Integer value \n     \n     \n         mail.imap.connectionpoolsize \n         Maximum number of available connections in the connection pool. \n         1 \n         Any Integer value \n     \n     \n         mail.imap.connectionpooltimeout \n         Timeout value in milliseconds for connection pool connections.  \n         45000ms \n         Any Integer \n     \n     \n         mail.imap.separatestoreconnection \n         Flag to indicate whether to use a dedicated store connection for store commands. \n         true \n         true or false \n     \n     \n         mail.imap.auth.login.disable \n         If true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command. \n         false \n         true or false \n     \n     \n         mail.imap.auth.plain.disable \n         If true, prevents use of the AUTHENTICATE PLAIN command. \n         false \n         true or false \n     \n     \n         mail.imap.auth.ntlm.disable \n         If true, prevents use of the AUTHENTICATE NTLM command. \n         false \n         true or false \n     \n     \n         mail.imap.proxyauth.user \n         If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property. \n         None \n         Valid string value \n     \n     \n         mail.imap.localaddress \n         Local address (host name) to bind to when creating the IMAP socket. \n         Defaults to the address picked by the Socket class. \n         Valid string value \n     \n     \n         mail.imap.localport \n         Local port number to bind to when creating the IMAP socket. \n         Defaults to the port number picked by the Socket class. \n         Valid String value \n     \n     \n         mail.imap.sasl.enable \n         If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. \n         false \n         true or false \n     \n     \n         mail.imap.sasl.mechanisms \n         A space or comma separated list of SASL mechanism names to try to use. \n         None \n         Valid string value \n     \n     \n         mail.imap.sasl.authorizationid \n         The authorization ID to use in the SASL authentication. \n         If not set, the authentication ID (user name) is used. \n         Valid string value \n     \n     \n         mail.imap.sasl.realm \n         The realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5. \n         None \n         Valid string value \n     \n     \n         mail.imap.auth.ntlm.domain \n         The NTLM authentication domain. \n         None \n         Valid string value \n     \n     \n         The NTLM authentication domain. \n         NTLM protocol-specific flags. \n         None \n         Valid integer value \n     \n     \n         mail.imap.socketFactory \n         If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets. \n         None \n         Valid SocketFactory \n     \n     \n         mail.imap.socketFactory.class \n         If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets. \n         None \n         Valid string \n     \n     \n         mail.imap.socketFactory.fallback \n         If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class.  \n         true \n         true or false \n     \n     \n         mail.imap.socketFactory.port \n         Specifies the port to connect to when using the specified socket factory. Default port is used when not set. \n         143 \n         Valid Integer \n     \n     \n         mail.imap.ssl.checkserveridentity \n         If set to true, check the server identity as specified by RFC 2595. \n         false \n         true or false \n     \n     \n         mail.imap.ssl.trust \n         If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. \n         \n         Valid String \n     \n     \n         mail.imap.ssl.socketFactory \n         If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets. \n         None \n         SSL Socket Factory \n     \n     \n         mail.imap.ssl.socketFactory.class \n         If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets. \n         None \n         Valid String \n     \n     \n         mail.imap.ssl.socketFactory.port \n         Specifies the port to connect to when using the specified socket factory. \n         the default port will be used-993 \n         valid port number \n     \n     \n         mail.imap.ssl.protocols \n         Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. \n         None \n         Valid string \n     \n     \n         mail.imap.starttls.enable \n         If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. \n         false \n         true or false \n     \n     \n         mail.imap.socks.host \n         Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. \n         None \n         Valid String \n     \n     \n         mail.imap.socks.port \n         Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. \n         1080 \n         Valid String \n     \n     \n         mail.imap.minidletime \n         This property sets the delay in milliseconds. \n         10 milliseconds \n         time in seconds (Integer) \n     \n     \n         mail.imap.enableimapevents \n         Enable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string. \n         false \n         true or false \n     \n     \n         mail.imap.folder.class \n         Class name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store) \n         None \n         Valid String \n     \n     \n         mail.pop3.connectiontimeout \n         Socket connection timeout value in milliseconds. \n         Infinite timeout \n         Integer value \n     \n     \n         mail.pop3.timeout \n         Socket I/O timeout value in milliseconds.  \n         Infinite timeout \n         Integer value \n     \n     \n         mail.pop3.message.class \n         Class name of a subclass of com.sun.mail.pop3.POP3Message \n         None \n         Valid String \n     \n     \n         mail.pop3.localaddress \n         Local address (host name) to bind to when creating the POP3 socket. \n         Defaults to the address picked by the Socket class. \n         Valid String \n     \n     \n         mail.pop3.localport \n         Local port number to bind to when creating the POP3 socket. \n         Defaults to the port number picked by the Socket class. \n         Valid port number \n     \n     \n         mail.pop3.apop.enable \n         If set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password. \n         false \n         true or false \n     \n     \n         mail.pop3.socketFactory \n         If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets. \n         None \n         Socket Factory \n     \n     \n         mail.pop3.socketFactory.class \n         If set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets. \n         None \n         Valid String \n     \n     \n         mail.pop3.socketFactory.fallback \n         If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. \n         false \n         true or false \n     \n     \n         mail.pop3.socketFactory.port \n         Specifies the port to connect to when using the specified socket factory. \n         Default port \n         Valid port number \n     \n     \n         mail.pop3.ssl.checkserveridentity \n         If set to true, check the server identity as specified by RFC 2595.  \n         false \n         true or false \n     \n     \n         mail.pop3.ssl.trust \n         If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. \n         \n         Valid String \n     \n     \n         mail.pop3.ssl.socketFactory \n         If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. \n         None \n         SSL Socket Factory \n     \n     \n         mail.pop3.ssl.checkserveridentity \n         If set to true, check the server identity as specified by RFC 2595.  \n         false \n         true or false \n     \n     \n         mail.pop3.ssl.trust \n          If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.  \n         trust depends on the certificate the server presents. \n         Valid String \n     \n     \n         mail.pop3.ssl.socketFactory \n         If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. \n         None \n         SSL Socket Factory \n     \n     \n         mail.pop3.ssl.socketFactory.class \n         If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets.  \n         None \n         Valid String \n     \n     \n         mail.pop3.ssl.socketFactory.p \n         Specifies the port to connect to when using the specified socket factory. \n         995 \n         Valid Integer \n     \n     \n         mail.pop3.ssl.protocols \n         Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. \n         None \n         Valid String \n     \n     \n         mail.pop3.starttls.enable \n         If true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands \n         false \n         true or false \n     \n     \n         mail.pop3.starttls.required \n         If true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail. \n         false \n         true or false \n     \n     \n         mail.pop3.socks.host \n         Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. \n         None \n         Valid String \n     \n     \n         mail.pop3.socks.port \n         Specifies the port number for the SOCKS5 proxy server. \n         None \n         Valid String \n     \n     \n         mail.pop3.disabletop \n         If set to true, the POP3 TOP command will not be used to fetch message headers.  \n         false \n         true or false \n     \n     \n         mail.pop3.forgettopheaders \n         If set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command. \n         false \n         true or false \n     \n     \n         mail.pop3.filecache.enable \n         If set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. \n         false \n         true or false \n     \n     \n         mail.pop3.filecache.dir \n         If the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files. \n         None \n         Valid String \n     \n     \n         mail.pop3.cachewriteto \n         Controls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached. \n         false \n         true or false \n     \n     \n         mail.pop3.keepmessagecontent \n         If this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method).  \n         false \n         true or false \n       Examples  EXAMPLE 1  @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string);  Following example illustrates how to receive events in  xml  format using email source. In this example only mandatory parameters are defined in the  in the stream definition. For other parameters default values are taken. since search term is not defined, it poll and take all new messages in the inbox folder  EXAMPLE 2  @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string);  Following example illustrates how to receive events in  xml  format using email source. The email source polls the mail account in every 500 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term (email messages which come from from.account@. host name , contains  cc.account  in cc receipts list, and  Stream Processor  words in the mail subject) In the example, action after processes is defined as the  DELETE , so that after processing the event, corresponding mail is deleted from the mail folder.", 
            "title": "email (Source)"
        }, 
        {
            "location": "/api/1.0.14/", 
            "text": "API Docs - v1.0.14\n\n\nSink\n\n\nemail \n(Sink)\n\n\nThe email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken for the optional parameters. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters). Further, some email account required to enable 'access to less secure apps' option (for gmail account you can enable it via https://myaccount.google.com/lesssecureapps).\n\n\n\nSyntax\n\n\n@sink(type=\nemail\n, username=\nSTRING\n, address=\nSTRING\n, password=\nSTRING\n, host=\nSTRING\n, port=\nINT\n, ssl.enable=\nBOOL\n, auth=\nBOOL\n, content.type=\nSTRING\n, subject=\nSTRING\n, to=\nSTRING\n, cc=\nSTRING\n, bcc=\nSTRING\n, @map(...)))\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \nusername\n\n        \nUsername of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com).\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \naddress\n\n        \nAddress of the email account which is used to send emails.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \npassword\n\n        \nPassword of the email account.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \nhost\n\n        \nHost name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account.\n\n        \nsmtp.gmail.com\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nport\n\n        \nThe port which is used to create the connection.\n\n        \n'465' the default value is only valid is ssl enable\n\n        \nINT\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nssl.enable\n\n        \nWhether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection.\n\n        \ntrue\n\n        \nBOOL\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nauth\n\n        \nWhether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command.\n\n        \ntrue\n\n        \nBOOL\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \ncontent.type\n\n        \nContent type can be either 'text/plain' or 'text/html'.\n\n        \ntext/plain\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nsubject\n\n        \nSubject of the mail which has to be send.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nYes\n\n    \n\n    \n\n        \nto\n\n        \nAddress of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nYes\n\n    \n\n    \n\n        \ncc\n\n        \nAddress of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list.\n\n        \nNone\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nbcc\n\n        \nAddress of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list.\n\n        \nNone\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n\n\n\nSystem Parameters\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Parameters\n\n    \n\n    \n\n        \nmail.smtp.ssl.trust\n\n        \nIf set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to \"\n\", all hosts are trusted. If set to a whitespace separated list of hosts, those hosts are trusted. Otherwise, trust depends on the certificate the server presents.\n\n        \n\n        \nString\n\n    \n\n    \n\n        \nmail.smtp.connectiontimeout\n\n        \nSocket connection timeout value in milliseconds. \n\n        \ninfinite timeout\n\n        \nAny Integer\n\n    \n\n    \n\n        \nmail.smtp.timeout\n\n        \nSocket I/O timeout value in milliseconds. \n\n        \ninfinite timeout\n\n        \nAny Integer\n\n    \n\n    \n\n        \nmail.smtp.from\n\n        \nEmail address to use for SMTP MAIL command. This sets the envelope return address.\n\n        \nDefaults to msg.getFrom() or InternetAddress.getLocalAddress().\n\n        \nValid email address\n\n    \n\n    \n\n        \nmail.smtp.localport\n\n        \nLocal port number to bind to when creating the SMTP socket.\n\n        \nDefaults to the port number picked by the Socket class.\n\n        \nAny Integer\n\n    \n\n    \n\n        \nmail.smtp.ehlo\n\n        \nIf false, do not attempt to sign on with the EHLO command.\n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.login.disable\n\n        \nIf true, prevents use of the AUTH LOGIN command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.plain.disable\n\n        \nIf true, prevents use of the AUTH PLAIN command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.digest-md5.disable\n\n        \nIf true, prevents use of the AUTH DIGEST-MD5 command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.ntlm.disable\n\n        \nIf true, prevents use of the AUTH NTLM command\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.ntlm.domain\n\n        \nThe NTLM authentication domain.\n\n        \nNone\n\n        \nValid NTLM authentication domain name\n\n    \n\n    \n\n        \nmail.smtp.auth.ntlm.flags\n\n        \nNTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details.\n\n        \nNone\n\n        \nValid NTLM protocol-specific flags.\n\n    \n\n    \n\n        \nmail.smtp.dsn.notify\n\n        \nThe NOTIFY option to the RCPT command.\n\n        \nNone\n\n        \nEither NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas).\n\n    \n\n    \n\n        \nmail.smtp.dsn.ret\n\n        \nThe RET option to the MAIL command.\n\n        \nNone\n\n        \nEither FULL or HDRS.\n\n    \n\n    \n\n        \nmail.smtp.sendpartial\n\n        \nIf set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.sasl.enable\n\n        \nIf set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.sasl.mechanisms\n\n        \nA space or comma separated list of SASL mechanism names to try to use.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.sasl.authorizationid\n\n        \nThe authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used.\n\n        \nusername\n\n        \nValid ID\n\n    \n\n    \n\n        \nmail.smtp.sasl.realm\n\n        \nThe realm to use with DIGEST-MD5 authentication.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.quitwait\n\n        \nIf set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.reportsuccess\n\n        \nIf set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.socketFactory\n\n        \nIf set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets.\n\n        \nNone\n\n        \nSocket Factory\n\n    \n\n    \n\n        \nmail.smtp.socketFactory.class\n\n        \nIf set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.socketFactory.fallback\n\n        \nIf set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class.\n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.socketFactory.port\n\n        \nSpecifies the port to connect to when using the specified socket factory\n\n        \n25\n\n        \nValid port number\n\n    \n\n    \n\n        \nmail.smtp.ssl.protocols\n\n        \nSpecifies the SSL protocols that will be enabled for SSL connections.\n\n        \nNone\n\n        \nThe property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method.\n\n    \n\n    \n\n        \nmail.smtp.starttls.enable\n\n        \nIf true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.starttls.required\n\n        \nIf true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.socks.host\n\n        \nSpecifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.socks.port\n\n        \nSpecifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080.\n\n        \n1080\n\n        \nvalid port number\n\n    \n\n    \n\n        \nmail.smtp.auth.ntlm.disable\n\n        \nIf true, prevents use of the AUTH NTLM command\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.mailextension\n\n        \nExtension string to append to the MAIL command.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.userset\n\n        \nIf set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\n@sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string);\n\n\n\n\nAbove example illustrates how to publish events using the email sinkusing mandatory parameters. As in the example, it publishes events come from the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection.\n\n\n\nEXAMPLE 2\n\n\n@sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string);\n\n\n\n\nAbove example illustrates how to configure the query parameters and system parameters in the 'deployment.ymal' file of WSO2 Stream Processor.\nCorresponding parameters need to be configure under name:'email' and namespace:'sink' as follows\nsiddhi:\nextensions:\n-  extension:\nname:'email'\nnamespace:'sink'\nproperties:\nusername: \nsender's email username\naddress: \nsender's email address\npassword: \nsender's email password\nAs in the example, it publishes events comefrom the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection.\n\n\n\nEXAMPLE 3\n\n\n@sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream fooStream (name string, age int, country string);\n\n\n\n\nAbove example illustrates how to publish events using the email sink. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given \nto\n,\ncc\n and \nbcc\n recipients using a secure connection. \nname\n in the \nsubject\n attribute will be the value of the \nname\n parameter in the corresponding output event\n\n\n\nSource\n\n\nemail \n(Source)\n\n\nEmail source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store ,  https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters).\n\n\n\nSyntax\n\n\n@source(type=\nemail\n, username=\nSTRING\n, password=\nSTRING\n, store=\nSTRING\n, host=\nSTRING\n, port=\nINT\n, folder=\nSTRING\n, search.term=\nSTRING\n, polling.interval=\nLONG\n, action.after.processed=\nSTRING\n, folder.to.move=\nSTRING\n, content.type=\nSTRING\n, ssl.enable=\nBOOL\n, @map(...)))\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \nusername\n\n        \nuser name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \npassword\n\n        \npassword of the email account\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \nstore\n\n        \nStore type that used to receive emails. it can be either imap or pop3.\n\n        \nimap\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nhost\n\n        \nHost name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable.\n\n        \nIf store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'.\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nport\n\n        \nThe port which is used to create the connection.\n\n        \n'993' the default value is valid only if store is imap and ssl enable\n\n        \nINT\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nfolder\n\n        \nName of the folder to fetch email.\n\n        \nINBOX\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nsearch.term\n\n        \nOption which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol.\n\n        \nNone\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \npolling.interval\n\n        \nInterval that email source should poll the account to check for new mails arrivals in seconds.\n\n        \n600\n\n        \nLONG\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \naction.after.processed\n\n        \nAction that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE\n\n        \nNONE\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nfolder.to.move\n\n        \nThe name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \ncontent.type\n\n        \nContent type of the email. It can be either 'text/plain' or 'text/html.'\n\n        \ntext/plain\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nssl.enable\n\n        \nIf it is 'true' then use a secure port to establish the connection. The possible values are 'true or false.\n\n        \ntrue\n\n        \nBOOL\n\n        \nYes\n\n        \nNo\n\n    \n\n\n\n\nSystem Parameters\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Parameters\n\n    \n\n    \n\n        \nmail.imap.partialfetch\n\n        \nControls whether the IMAP partial-fetch capability should be used\n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.fetchsize\n\n        \nPartial fetch size in bytes.\n\n        \n16K\n\n        \nvalue in bytes\n\n    \n\n    \n\n        \nmail.imap.peek\n\n        \nIf set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.connectiontimeout\n\n        \nSocket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket.\n\n        \ninfinity timeout\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.timeout\n\n        \nSocket read timeout value in milliseconds. This timeout is implemented by java.net.Socket.\n\n        \ninfinity timeout\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.writetimeout\n\n        \nSocket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection.\n\n        \ninfinity timeout\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.statuscachetimeout\n\n        \nTimeout value in milliseconds for cache of STATUS command response.\n\n        \n1000ms\n\n        \nTime out in miliseconds\n\n    \n\n    \n\n        \nmail.imap.appendbuffersize\n\n        \nMaximum size of a message to buffer in memory when appending to an IMAP folder.\n\n        \nNone\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.connectionpoolsize\n\n        \nMaximum number of available connections in the connection pool.\n\n        \n1\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.connectionpooltimeout\n\n        \nTimeout value in milliseconds for connection pool connections. \n\n        \n45000ms\n\n        \nAny Integer\n\n    \n\n    \n\n        \nmail.imap.separatestoreconnection\n\n        \nFlag to indicate whether to use a dedicated store connection for store commands.\n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.auth.login.disable\n\n        \nIf true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.auth.plain.disable\n\n        \nIf true, prevents use of the AUTHENTICATE PLAIN command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.auth.ntlm.disable\n\n        \nIf true, prevents use of the AUTHENTICATE NTLM command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.proxyauth.user\n\n        \nIf the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property.\n\n        \nNone\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.localaddress\n\n        \nLocal address (host name) to bind to when creating the IMAP socket.\n\n        \nDefaults to the address picked by the Socket class.\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.localport\n\n        \nLocal port number to bind to when creating the IMAP socket.\n\n        \nDefaults to the port number picked by the Socket class.\n\n        \nValid String value\n\n    \n\n    \n\n        \nmail.imap.sasl.enable\n\n        \nIf set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.sasl.mechanisms\n\n        \nA space or comma separated list of SASL mechanism names to try to use.\n\n        \nNone\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.sasl.authorizationid\n\n        \nThe authorization ID to use in the SASL authentication.\n\n        \nIf not set, the authentication ID (user name) is used.\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.sasl.realm\n\n        \nThe realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5.\n\n        \nNone\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.auth.ntlm.domain\n\n        \nThe NTLM authentication domain.\n\n        \nNone\n\n        \nValid string value\n\n    \n\n    \n\n        \nThe NTLM authentication domain.\n\n        \nNTLM protocol-specific flags.\n\n        \nNone\n\n        \nValid integer value\n\n    \n\n    \n\n        \nmail.imap.socketFactory\n\n        \nIf set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets.\n\n        \nNone\n\n        \nValid SocketFactory\n\n    \n\n    \n\n        \nmail.imap.socketFactory.class\n\n        \nIf set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets.\n\n        \nNone\n\n        \nValid string\n\n    \n\n    \n\n        \nmail.imap.socketFactory.fallback\n\n        \nIf set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. \n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.socketFactory.port\n\n        \nSpecifies the port to connect to when using the specified socket factory. Default port is used when not set.\n\n        \n143\n\n        \nValid Integer\n\n    \n\n    \n\n        \nmail.imap.ssl.checkserveridentity\n\n        \nIf set to true, check the server identity as specified by RFC 2595.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.ssl.trust\n\n        \nIf set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '\n', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents.\n\n        \n\n        \nValid String\n\n    \n\n    \n\n        \nmail.imap.ssl.socketFactory\n\n        \nIf set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets.\n\n        \nNone\n\n        \nSSL Socket Factory\n\n    \n\n    \n\n        \nmail.imap.ssl.socketFactory.class\n\n        \nIf set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.imap.ssl.socketFactory.port\n\n        \nSpecifies the port to connect to when using the specified socket factory.\n\n        \nthe default port will be used-993\n\n        \nvalid port number\n\n    \n\n    \n\n        \nmail.imap.ssl.protocols\n\n        \nSpecifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method.\n\n        \nNone\n\n        \nValid string\n\n    \n\n    \n\n        \nmail.imap.starttls.enable\n\n        \nIf true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.socks.host\n\n        \nSpecifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.imap.socks.port\n\n        \nSpecifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080.\n\n        \n1080\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.imap.minidletime\n\n        \nThis property sets the delay in milliseconds.\n\n        \n10 milliseconds\n\n        \ntime in seconds (Integer)\n\n    \n\n    \n\n        \nmail.imap.enableimapevents\n\n        \nEnable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.folder.class\n\n        \nClass name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store)\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.connectiontimeout\n\n        \nSocket connection timeout value in milliseconds.\n\n        \nInfinite timeout\n\n        \nInteger value\n\n    \n\n    \n\n        \nmail.pop3.timeout\n\n        \nSocket I/O timeout value in milliseconds. \n\n        \nInfinite timeout\n\n        \nInteger value\n\n    \n\n    \n\n        \nmail.pop3.message.class\n\n        \nClass name of a subclass of com.sun.mail.pop3.POP3Message\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.localaddress\n\n        \nLocal address (host name) to bind to when creating the POP3 socket.\n\n        \nDefaults to the address picked by the Socket class.\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.localport\n\n        \nLocal port number to bind to when creating the POP3 socket.\n\n        \nDefaults to the port number picked by the Socket class.\n\n        \nValid port number\n\n    \n\n    \n\n        \nmail.pop3.apop.enable\n\n        \nIf set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.socketFactory\n\n        \nIf set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets.\n\n        \nNone\n\n        \nSocket Factory\n\n    \n\n    \n\n        \nmail.pop3.socketFactory.class\n\n        \nIf set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.socketFactory.fallback\n\n        \nIf set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.socketFactory.port\n\n        \nSpecifies the port to connect to when using the specified socket factory.\n\n        \nDefault port\n\n        \nValid port number\n\n    \n\n    \n\n        \nmail.pop3.ssl.checkserveridentity\n\n        \nIf set to true, check the server identity as specified by RFC 2595. \n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.ssl.trust\n\n        \nIf set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to '\n', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents.\n\n        \n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.ssl.socketFactory\n\n        \nIf set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets.\n\n        \nNone\n\n        \nSSL Socket Factory\n\n    \n\n    \n\n        \nmail.pop3.ssl.checkserveridentity\n\n        \nIf set to true, check the server identity as specified by RFC 2595. \n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.ssl.trust\n\n        \n If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted. \n\n        \ntrust depends on the certificate the server presents.\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.ssl.socketFactory\n\n        \nIf set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets.\n\n        \nNone\n\n        \nSSL Socket Factory\n\n    \n\n    \n\n        \nmail.pop3.ssl.socketFactory.class\n\n        \nIf set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets. \n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.ssl.socketFactory.p\n\n        \nSpecifies the port to connect to when using the specified socket factory.\n\n        \n995\n\n        \nValid Integer\n\n    \n\n    \n\n        \nmail.pop3.ssl.protocols\n\n        \nSpecifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.starttls.enable\n\n        \nIf true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.starttls.required\n\n        \nIf true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.socks.host\n\n        \nSpecifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.socks.port\n\n        \nSpecifies the port number for the SOCKS5 proxy server.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.disabletop\n\n        \nIf set to true, the POP3 TOP command will not be used to fetch message headers. \n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.forgettopheaders\n\n        \nIf set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.filecache.enable\n\n        \nIf set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.filecache.dir\n\n        \nIf the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.cachewriteto\n\n        \nControls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.keepmessagecontent\n\n        \nIf this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method). \n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\n@source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string);\n\n\n\n\nAbove example illustrates how to receive events in \nxml\n format using email source. In this example only mandatory parameters are defined in the  in the stream definition. For other parameters default values are taken. since search term is not defined, it poll and take all new messages in the inbox folder\n\n\n\nEXAMPLE 2\n\n\n@source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string);\n\n\n\n\nAbove example illustrates how to receive events in \nxml\n format using email source. The email source polls the mail account in every 500 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term (email messages which come from\nfrom.account@.\nhost name\n, contains \ncc.account\n in cc receipts list, and \nStream Processor\n words in the mail subject) In the example, action after processes is defined as the \nDELETE\n, so that after processing the event, corresponding mail is deleted from the mail folder.", 
            "title": "1.0.14"
        }, 
        {
            "location": "/api/1.0.14/#api-docs-v1014", 
            "text": "", 
            "title": "API Docs - v1.0.14"
        }, 
        {
            "location": "/api/1.0.14/#sink", 
            "text": "", 
            "title": "Sink"
        }, 
        {
            "location": "/api/1.0.14/#email-sink", 
            "text": "The email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken for the optional parameters. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters). Further, some email account required to enable 'access to less secure apps' option (for gmail account you can enable it via https://myaccount.google.com/lesssecureapps).  Syntax  @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , @map(...)))  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         username \n         Username of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com). \n         \n         STRING \n         No \n         No \n     \n     \n         address \n         Address of the email account which is used to send emails. \n         \n         STRING \n         No \n         No \n     \n     \n         password \n         Password of the email account. \n         \n         STRING \n         No \n         No \n     \n     \n         host \n         Host name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account. \n         smtp.gmail.com \n         STRING \n         Yes \n         No \n     \n     \n         port \n         The port which is used to create the connection. \n         '465' the default value is only valid is ssl enable \n         INT \n         Yes \n         No \n     \n     \n         ssl.enable \n         Whether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection. \n         true \n         BOOL \n         Yes \n         No \n     \n     \n         auth \n         Whether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command. \n         true \n         BOOL \n         Yes \n         No \n     \n     \n         content.type \n         Content type can be either 'text/plain' or 'text/html'. \n         text/plain \n         STRING \n         Yes \n         No \n     \n     \n         subject \n         Subject of the mail which has to be send. \n         \n         STRING \n         No \n         Yes \n     \n     \n         to \n         Address of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list. \n         \n         STRING \n         No \n         Yes \n     \n     \n         cc \n         Address of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list. \n         None \n         STRING \n         Yes \n         No \n     \n     \n         bcc \n         Address of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list. \n         None \n         STRING \n         Yes \n         No \n       System Parameters  \n     \n         Name \n         Description \n         Default Value \n         Possible Parameters \n     \n     \n         mail.smtp.ssl.trust \n         If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to \" \", all hosts are trusted. If set to a whitespace separated list of hosts, those hosts are trusted. Otherwise, trust depends on the certificate the server presents. \n         \n         String \n     \n     \n         mail.smtp.connectiontimeout \n         Socket connection timeout value in milliseconds.  \n         infinite timeout \n         Any Integer \n     \n     \n         mail.smtp.timeout \n         Socket I/O timeout value in milliseconds.  \n         infinite timeout \n         Any Integer \n     \n     \n         mail.smtp.from \n         Email address to use for SMTP MAIL command. This sets the envelope return address. \n         Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). \n         Valid email address \n     \n     \n         mail.smtp.localport \n         Local port number to bind to when creating the SMTP socket. \n         Defaults to the port number picked by the Socket class. \n         Any Integer \n     \n     \n         mail.smtp.ehlo \n         If false, do not attempt to sign on with the EHLO command. \n         true \n         true or false \n     \n     \n         mail.smtp.auth.login.disable \n         If true, prevents use of the AUTH LOGIN command. \n         false \n         true or false \n     \n     \n         mail.smtp.auth.plain.disable \n         If true, prevents use of the AUTH PLAIN command. \n         false \n         true or false \n     \n     \n         mail.smtp.auth.digest-md5.disable \n         If true, prevents use of the AUTH DIGEST-MD5 command. \n         false \n         true or false \n     \n     \n         mail.smtp.auth.ntlm.disable \n         If true, prevents use of the AUTH NTLM command \n         false \n         true or false \n     \n     \n         mail.smtp.auth.ntlm.domain \n         The NTLM authentication domain. \n         None \n         Valid NTLM authentication domain name \n     \n     \n         mail.smtp.auth.ntlm.flags \n         NTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details. \n         None \n         Valid NTLM protocol-specific flags. \n     \n     \n         mail.smtp.dsn.notify \n         The NOTIFY option to the RCPT command. \n         None \n         Either NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas). \n     \n     \n         mail.smtp.dsn.ret \n         The RET option to the MAIL command. \n         None \n         Either FULL or HDRS. \n     \n     \n         mail.smtp.sendpartial \n         If set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address. \n         false \n         true or false \n     \n     \n         mail.smtp.sasl.enable \n         If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. \n         false \n         true or false \n     \n     \n         mail.smtp.sasl.mechanisms \n         A space or comma separated list of SASL mechanism names to try to use. \n         None \n         \n     \n     \n         mail.smtp.sasl.authorizationid \n         The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. \n         username \n         Valid ID \n     \n     \n         mail.smtp.sasl.realm \n         The realm to use with DIGEST-MD5 authentication. \n         None \n         \n     \n     \n         mail.smtp.quitwait \n         If set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command. \n         false \n         true or false \n     \n     \n         mail.smtp.reportsuccess \n         If set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful. \n         false \n         true or false \n     \n     \n         mail.smtp.socketFactory \n         If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets. \n         None \n         Socket Factory \n     \n     \n         mail.smtp.socketFactory.class \n         If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets. \n         None \n         \n     \n     \n         mail.smtp.socketFactory.fallback \n         If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. \n         true \n         true or false \n     \n     \n         mail.smtp.socketFactory.port \n         Specifies the port to connect to when using the specified socket factory \n         25 \n         Valid port number \n     \n     \n         mail.smtp.ssl.protocols \n         Specifies the SSL protocols that will be enabled for SSL connections. \n         None \n         The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. \n     \n     \n         mail.smtp.starttls.enable \n         If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. \n         false \n         true or false \n     \n     \n         mail.smtp.starttls.required \n         If true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail. \n         false \n         true or false \n     \n     \n         mail.smtp.socks.host \n         Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. \n         None \n         \n     \n     \n         mail.smtp.socks.port \n         Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. \n         1080 \n         valid port number \n     \n     \n         mail.smtp.auth.ntlm.disable \n         If true, prevents use of the AUTH NTLM command \n         false \n         true or false \n     \n     \n         mail.smtp.mailextension \n         Extension string to append to the MAIL command. \n         None \n         \n     \n     \n         mail.smtp.userset \n         If set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue. \n         false \n         true or false \n       Examples  EXAMPLE 1  @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string);  Above example illustrates how to publish events using the email sinkusing mandatory parameters. As in the example, it publishes events come from the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection.  EXAMPLE 2  @sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string);  Above example illustrates how to configure the query parameters and system parameters in the 'deployment.ymal' file of WSO2 Stream Processor. Corresponding parameters need to be configure under name:'email' and namespace:'sink' as follows siddhi: extensions: -  extension: name:'email' namespace:'sink' properties: username:  sender's email username address:  sender's email address password:  sender's email password As in the example, it publishes events comefrom the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection.  EXAMPLE 3  @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream fooStream (name string, age int, country string);  Above example illustrates how to publish events using the email sink. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given  to , cc  and  bcc  recipients using a secure connection.  name  in the  subject  attribute will be the value of the  name  parameter in the corresponding output event", 
            "title": "email (Sink)"
        }, 
        {
            "location": "/api/1.0.14/#source", 
            "text": "", 
            "title": "Source"
        }, 
        {
            "location": "/api/1.0.14/#email-source", 
            "text": "Email source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store ,  https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters).  Syntax  @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...)))  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         username \n         user name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account. \n         \n         STRING \n         No \n         No \n     \n     \n         password \n         password of the email account \n         \n         STRING \n         No \n         No \n     \n     \n         store \n         Store type that used to receive emails. it can be either imap or pop3. \n         imap \n         STRING \n         Yes \n         No \n     \n     \n         host \n         Host name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable. \n         If store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'. \n         STRING \n         Yes \n         No \n     \n     \n         port \n         The port which is used to create the connection. \n         '993' the default value is valid only if store is imap and ssl enable \n         INT \n         Yes \n         No \n     \n     \n         folder \n         Name of the folder to fetch email. \n         INBOX \n         STRING \n         Yes \n         No \n     \n     \n         search.term \n         Option which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol. \n         None \n         STRING \n         Yes \n         No \n     \n     \n         polling.interval \n         Interval that email source should poll the account to check for new mails arrivals in seconds. \n         600 \n         LONG \n         Yes \n         No \n     \n     \n         action.after.processed \n         Action that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE \n         NONE \n         STRING \n         Yes \n         No \n     \n     \n         folder.to.move \n         The name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move. \n         \n         STRING \n         No \n         No \n     \n     \n         content.type \n         Content type of the email. It can be either 'text/plain' or 'text/html.' \n         text/plain \n         STRING \n         Yes \n         No \n     \n     \n         ssl.enable \n         If it is 'true' then use a secure port to establish the connection. The possible values are 'true or false. \n         true \n         BOOL \n         Yes \n         No \n       System Parameters  \n     \n         Name \n         Description \n         Default Value \n         Possible Parameters \n     \n     \n         mail.imap.partialfetch \n         Controls whether the IMAP partial-fetch capability should be used \n         true \n         true or false \n     \n     \n         mail.imap.fetchsize \n         Partial fetch size in bytes. \n         16K \n         value in bytes \n     \n     \n         mail.imap.peek \n         If set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage. \n         false \n         true or false \n     \n     \n         mail.imap.connectiontimeout \n         Socket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket. \n         infinity timeout \n         Any Integer value \n     \n     \n         mail.imap.timeout \n         Socket read timeout value in milliseconds. This timeout is implemented by java.net.Socket. \n         infinity timeout \n         Any Integer value \n     \n     \n         mail.imap.writetimeout \n         Socket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection. \n         infinity timeout \n         Any Integer value \n     \n     \n         mail.imap.statuscachetimeout \n         Timeout value in milliseconds for cache of STATUS command response. \n         1000ms \n         Time out in miliseconds \n     \n     \n         mail.imap.appendbuffersize \n         Maximum size of a message to buffer in memory when appending to an IMAP folder. \n         None \n         Any Integer value \n     \n     \n         mail.imap.connectionpoolsize \n         Maximum number of available connections in the connection pool. \n         1 \n         Any Integer value \n     \n     \n         mail.imap.connectionpooltimeout \n         Timeout value in milliseconds for connection pool connections.  \n         45000ms \n         Any Integer \n     \n     \n         mail.imap.separatestoreconnection \n         Flag to indicate whether to use a dedicated store connection for store commands. \n         true \n         true or false \n     \n     \n         mail.imap.auth.login.disable \n         If true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command. \n         false \n         true or false \n     \n     \n         mail.imap.auth.plain.disable \n         If true, prevents use of the AUTHENTICATE PLAIN command. \n         false \n         true or false \n     \n     \n         mail.imap.auth.ntlm.disable \n         If true, prevents use of the AUTHENTICATE NTLM command. \n         false \n         true or false \n     \n     \n         mail.imap.proxyauth.user \n         If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property. \n         None \n         Valid string value \n     \n     \n         mail.imap.localaddress \n         Local address (host name) to bind to when creating the IMAP socket. \n         Defaults to the address picked by the Socket class. \n         Valid string value \n     \n     \n         mail.imap.localport \n         Local port number to bind to when creating the IMAP socket. \n         Defaults to the port number picked by the Socket class. \n         Valid String value \n     \n     \n         mail.imap.sasl.enable \n         If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. \n         false \n         true or false \n     \n     \n         mail.imap.sasl.mechanisms \n         A space or comma separated list of SASL mechanism names to try to use. \n         None \n         Valid string value \n     \n     \n         mail.imap.sasl.authorizationid \n         The authorization ID to use in the SASL authentication. \n         If not set, the authentication ID (user name) is used. \n         Valid string value \n     \n     \n         mail.imap.sasl.realm \n         The realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5. \n         None \n         Valid string value \n     \n     \n         mail.imap.auth.ntlm.domain \n         The NTLM authentication domain. \n         None \n         Valid string value \n     \n     \n         The NTLM authentication domain. \n         NTLM protocol-specific flags. \n         None \n         Valid integer value \n     \n     \n         mail.imap.socketFactory \n         If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets. \n         None \n         Valid SocketFactory \n     \n     \n         mail.imap.socketFactory.class \n         If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets. \n         None \n         Valid string \n     \n     \n         mail.imap.socketFactory.fallback \n         If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class.  \n         true \n         true or false \n     \n     \n         mail.imap.socketFactory.port \n         Specifies the port to connect to when using the specified socket factory. Default port is used when not set. \n         143 \n         Valid Integer \n     \n     \n         mail.imap.ssl.checkserveridentity \n         If set to true, check the server identity as specified by RFC 2595. \n         false \n         true or false \n     \n     \n         mail.imap.ssl.trust \n         If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. \n         \n         Valid String \n     \n     \n         mail.imap.ssl.socketFactory \n         If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets. \n         None \n         SSL Socket Factory \n     \n     \n         mail.imap.ssl.socketFactory.class \n         If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets. \n         None \n         Valid String \n     \n     \n         mail.imap.ssl.socketFactory.port \n         Specifies the port to connect to when using the specified socket factory. \n         the default port will be used-993 \n         valid port number \n     \n     \n         mail.imap.ssl.protocols \n         Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. \n         None \n         Valid string \n     \n     \n         mail.imap.starttls.enable \n         If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. \n         false \n         true or false \n     \n     \n         mail.imap.socks.host \n         Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. \n         None \n         Valid String \n     \n     \n         mail.imap.socks.port \n         Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. \n         1080 \n         Valid String \n     \n     \n         mail.imap.minidletime \n         This property sets the delay in milliseconds. \n         10 milliseconds \n         time in seconds (Integer) \n     \n     \n         mail.imap.enableimapevents \n         Enable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string. \n         false \n         true or false \n     \n     \n         mail.imap.folder.class \n         Class name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store) \n         None \n         Valid String \n     \n     \n         mail.pop3.connectiontimeout \n         Socket connection timeout value in milliseconds. \n         Infinite timeout \n         Integer value \n     \n     \n         mail.pop3.timeout \n         Socket I/O timeout value in milliseconds.  \n         Infinite timeout \n         Integer value \n     \n     \n         mail.pop3.message.class \n         Class name of a subclass of com.sun.mail.pop3.POP3Message \n         None \n         Valid String \n     \n     \n         mail.pop3.localaddress \n         Local address (host name) to bind to when creating the POP3 socket. \n         Defaults to the address picked by the Socket class. \n         Valid String \n     \n     \n         mail.pop3.localport \n         Local port number to bind to when creating the POP3 socket. \n         Defaults to the port number picked by the Socket class. \n         Valid port number \n     \n     \n         mail.pop3.apop.enable \n         If set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password. \n         false \n         true or false \n     \n     \n         mail.pop3.socketFactory \n         If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets. \n         None \n         Socket Factory \n     \n     \n         mail.pop3.socketFactory.class \n         If set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets. \n         None \n         Valid String \n     \n     \n         mail.pop3.socketFactory.fallback \n         If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. \n         false \n         true or false \n     \n     \n         mail.pop3.socketFactory.port \n         Specifies the port to connect to when using the specified socket factory. \n         Default port \n         Valid port number \n     \n     \n         mail.pop3.ssl.checkserveridentity \n         If set to true, check the server identity as specified by RFC 2595.  \n         false \n         true or false \n     \n     \n         mail.pop3.ssl.trust \n         If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. \n         \n         Valid String \n     \n     \n         mail.pop3.ssl.socketFactory \n         If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. \n         None \n         SSL Socket Factory \n     \n     \n         mail.pop3.ssl.checkserveridentity \n         If set to true, check the server identity as specified by RFC 2595.  \n         false \n         true or false \n     \n     \n         mail.pop3.ssl.trust \n          If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.  \n         trust depends on the certificate the server presents. \n         Valid String \n     \n     \n         mail.pop3.ssl.socketFactory \n         If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. \n         None \n         SSL Socket Factory \n     \n     \n         mail.pop3.ssl.socketFactory.class \n         If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets.  \n         None \n         Valid String \n     \n     \n         mail.pop3.ssl.socketFactory.p \n         Specifies the port to connect to when using the specified socket factory. \n         995 \n         Valid Integer \n     \n     \n         mail.pop3.ssl.protocols \n         Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. \n         None \n         Valid String \n     \n     \n         mail.pop3.starttls.enable \n         If true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands \n         false \n         true or false \n     \n     \n         mail.pop3.starttls.required \n         If true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail. \n         false \n         true or false \n     \n     \n         mail.pop3.socks.host \n         Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. \n         None \n         Valid String \n     \n     \n         mail.pop3.socks.port \n         Specifies the port number for the SOCKS5 proxy server. \n         None \n         Valid String \n     \n     \n         mail.pop3.disabletop \n         If set to true, the POP3 TOP command will not be used to fetch message headers.  \n         false \n         true or false \n     \n     \n         mail.pop3.forgettopheaders \n         If set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command. \n         false \n         true or false \n     \n     \n         mail.pop3.filecache.enable \n         If set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. \n         false \n         true or false \n     \n     \n         mail.pop3.filecache.dir \n         If the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files. \n         None \n         Valid String \n     \n     \n         mail.pop3.cachewriteto \n         Controls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached. \n         false \n         true or false \n     \n     \n         mail.pop3.keepmessagecontent \n         If this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method).  \n         false \n         true or false \n       Examples  EXAMPLE 1  @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string);  Above example illustrates how to receive events in  xml  format using email source. In this example only mandatory parameters are defined in the  in the stream definition. For other parameters default values are taken. since search term is not defined, it poll and take all new messages in the inbox folder  EXAMPLE 2  @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string);  Above example illustrates how to receive events in  xml  format using email source. The email source polls the mail account in every 500 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term (email messages which come from from.account@. host name , contains  cc.account  in cc receipts list, and  Stream Processor  words in the mail subject) In the example, action after processes is defined as the  DELETE , so that after processing the event, corresponding mail is deleted from the mail folder.", 
            "title": "email (Source)"
        }, 
        {
            "location": "/api/1.0.13/", 
            "text": "API Docs - v1.0.13\n\n\nSink\n\n\nemail \n(Sink)\n\n\nThe email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken for the optional parameters. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters). Further, some email account required to enable 'access to less secure apps' option (for gmail account you can enable it via https://myaccount.google.com/lesssecureapps).\n\n\n\nSyntax\n\n\n@sink(type=\nemail\n, username=\nSTRING\n, address=\nSTRING\n, password=\nSTRING\n, host=\nSTRING\n, port=\nINT\n, ssl.enable=\nBOOL\n, auth=\nBOOL\n, content.type=\nSTRING\n, subject=\nSTRING\n, to=\nSTRING\n, cc=\nSTRING\n, bcc=\nSTRING\n, @map(...)))\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \nusername\n\n        \nUsername of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com).\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \naddress\n\n        \nAddress of the email account which is used to send emails.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \npassword\n\n        \nPassword of the email account.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \nhost\n\n        \nHost name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account.\n\n        \nsmtp.gmail.com\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nport\n\n        \nThe port which is used to create the connection.\n\n        \n'465' the default value is only valid is ssl enable\n\n        \nINT\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nssl.enable\n\n        \nWhether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection.\n\n        \ntrue\n\n        \nBOOL\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nauth\n\n        \nWhether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command.\n\n        \ntrue\n\n        \nBOOL\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \ncontent.type\n\n        \nContent type can be either 'text/plain' or 'text/html'.\n\n        \ntext/plain\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nsubject\n\n        \nSubject of the mail which has to be send.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nYes\n\n    \n\n    \n\n        \nto\n\n        \nAddress of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nYes\n\n    \n\n    \n\n        \ncc\n\n        \nAddress of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list.\n\n        \nNone\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nbcc\n\n        \nAddress of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list.\n\n        \nNone\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n\n\n\nSystem Parameters\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Parameters\n\n    \n\n    \n\n        \nmail.smtp.ssl.trust\n\n        \nIf set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to \"\n\", all hosts are trusted. If set to a whitespace separated list of hosts, those hosts are trusted. Otherwise, trust depends on the certificate the server presents.\n\n        \n\n        \nString\n\n    \n\n    \n\n        \nmail.smtp.connectiontimeout\n\n        \nSocket connection timeout value in milliseconds. \n\n        \ninfinite timeout\n\n        \nAny Integer\n\n    \n\n    \n\n        \nmail.smtp.timeout\n\n        \nSocket I/O timeout value in milliseconds. \n\n        \ninfinite timeout\n\n        \nAny Integer\n\n    \n\n    \n\n        \nmail.smtp.from\n\n        \nEmail address to use for SMTP MAIL command. This sets the envelope return address.\n\n        \nDefaults to msg.getFrom() or InternetAddress.getLocalAddress().\n\n        \nValid email address\n\n    \n\n    \n\n        \nmail.smtp.localport\n\n        \nLocal port number to bind to when creating the SMTP socket.\n\n        \nDefaults to the port number picked by the Socket class.\n\n        \nAny Integer\n\n    \n\n    \n\n        \nmail.smtp.ehlo\n\n        \nIf false, do not attempt to sign on with the EHLO command.\n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.login.disable\n\n        \nIf true, prevents use of the AUTH LOGIN command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.plain.disable\n\n        \nIf true, prevents use of the AUTH PLAIN command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.digest-md5.disable\n\n        \nIf true, prevents use of the AUTH DIGEST-MD5 command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.ntlm.disable\n\n        \nIf true, prevents use of the AUTH NTLM command\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.ntlm.domain\n\n        \nThe NTLM authentication domain.\n\n        \nNone\n\n        \nValid NTLM authentication domain name\n\n    \n\n    \n\n        \nmail.smtp.auth.ntlm.flags\n\n        \nNTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details.\n\n        \nNone\n\n        \nValid NTLM protocol-specific flags.\n\n    \n\n    \n\n        \nmail.smtp.dsn.notify\n\n        \nThe NOTIFY option to the RCPT command.\n\n        \nNone\n\n        \nEither NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas).\n\n    \n\n    \n\n        \nmail.smtp.dsn.ret\n\n        \nThe RET option to the MAIL command.\n\n        \nNone\n\n        \nEither FULL or HDRS.\n\n    \n\n    \n\n        \nmail.smtp.sendpartial\n\n        \nIf set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.sasl.enable\n\n        \nIf set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.sasl.mechanisms\n\n        \nA space or comma separated list of SASL mechanism names to try to use.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.sasl.authorizationid\n\n        \nThe authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used.\n\n        \nusername\n\n        \nValid ID\n\n    \n\n    \n\n        \nmail.smtp.sasl.realm\n\n        \nThe realm to use with DIGEST-MD5 authentication.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.quitwait\n\n        \nIf set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.reportsuccess\n\n        \nIf set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.socketFactory\n\n        \nIf set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets.\n\n        \nNone\n\n        \nSocket Factory\n\n    \n\n    \n\n        \nmail.smtp.socketFactory.class\n\n        \nIf set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.socketFactory.fallback\n\n        \nIf set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class.\n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.socketFactory.port\n\n        \nSpecifies the port to connect to when using the specified socket factory\n\n        \n25\n\n        \nValid port number\n\n    \n\n    \n\n        \nmail.smtp.ssl.protocols\n\n        \nSpecifies the SSL protocols that will be enabled for SSL connections.\n\n        \nNone\n\n        \nThe property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method.\n\n    \n\n    \n\n        \nmail.smtp.starttls.enable\n\n        \nIf true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.starttls.required\n\n        \nIf true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.socks.host\n\n        \nSpecifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.socks.port\n\n        \nSpecifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080.\n\n        \n1080\n\n        \nvalid port number\n\n    \n\n    \n\n        \nmail.smtp.auth.ntlm.disable\n\n        \nIf true, prevents use of the AUTH NTLM command\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.mailextension\n\n        \nExtension string to append to the MAIL command.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.userset\n\n        \nIf set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\n@sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string);\n\n\n\n\nAbove example illustrates how to publish events using the email sinkusing mandatory parameters. As in the example, it publishes events come from the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection.\n\n\n\nEXAMPLE 2\n\n\n@sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string);\n\n\n\n\nAbove example illustrates how to configure the query parameters and system parameters in the 'deployment.ymal' file of WSO2 Stream Processor.\nCorresponding parameters need to be configure under name:'email' and namespace:'sink' as follows\nsiddhi:\nextensions:\n-  extension:\nname:'email'\nnamespace:'sink'\nproperties:\nusername: \nsender's email username\naddress: \nsender's email address\npassword: \nsender's email password\nAs in the example, it publishes events comefrom the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection.\n\n\n\nEXAMPLE 3\n\n\n@sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream fooStream (name string, age int, country string);\n\n\n\n\nAbove example illustrates how to publish events using the email sink. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given \nto\n,\ncc\n and \nbcc\n recipients using a secure connection. \nname\n in the \nsubject\n attribute will be the value of the \nname\n parameter in the corresponding output event\n\n\n\nSource\n\n\nemail \n(Source)\n\n\nEmail source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store ,  https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters).\n\n\n\nSyntax\n\n\n@source(type=\nemail\n, username=\nSTRING\n, password=\nSTRING\n, store=\nSTRING\n, host=\nSTRING\n, port=\nINT\n, folder=\nSTRING\n, search.term=\nSTRING\n, polling.interval=\nLONG\n, action.after.processed=\nSTRING\n, folder.to.move=\nSTRING\n, content.type=\nSTRING\n, ssl.enable=\nBOOL\n, @map(...)))\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \nusername\n\n        \nuser name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \npassword\n\n        \npassword of the email account\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \nstore\n\n        \nStore type that used to receive emails. it can be either imap or pop3.\n\n        \nimap\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nhost\n\n        \nHost name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable.\n\n        \nIf store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'.\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nport\n\n        \nThe port which is used to create the connection.\n\n        \n'993' the default value is valid only if store is imap and ssl enable\n\n        \nINT\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nfolder\n\n        \nName of the folder to fetch email.\n\n        \nINBOX\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nsearch.term\n\n        \nOption which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol.\n\n        \nNone\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \npolling.interval\n\n        \nInterval that email source should poll the account to check for new mails arrivals in seconds.\n\n        \n600\n\n        \nLONG\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \naction.after.processed\n\n        \nAction that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE\n\n        \nNONE\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nfolder.to.move\n\n        \nThe name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \ncontent.type\n\n        \nContent type of the email. It can be either 'text/plain' or 'text/html.'\n\n        \ntext/plain\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nssl.enable\n\n        \nIf it is 'true' then use a secure port to establish the connection. The possible values are 'true or false.\n\n        \ntrue\n\n        \nBOOL\n\n        \nYes\n\n        \nNo\n\n    \n\n\n\n\nSystem Parameters\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Parameters\n\n    \n\n    \n\n        \nmail.imap.partialfetch\n\n        \nControls whether the IMAP partial-fetch capability should be used\n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.fetchsize\n\n        \nPartial fetch size in bytes.\n\n        \n16K\n\n        \nvalue in bytes\n\n    \n\n    \n\n        \nmail.imap.peek\n\n        \nIf set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.connectiontimeout\n\n        \nSocket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket.\n\n        \ninfinity timeout\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.timeout\n\n        \nSocket read timeout value in milliseconds. This timeout is implemented by java.net.Socket.\n\n        \ninfinity timeout\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.writetimeout\n\n        \nSocket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection.\n\n        \ninfinity timeout\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.statuscachetimeout\n\n        \nTimeout value in milliseconds for cache of STATUS command response.\n\n        \n1000ms\n\n        \nTime out in miliseconds\n\n    \n\n    \n\n        \nmail.imap.appendbuffersize\n\n        \nMaximum size of a message to buffer in memory when appending to an IMAP folder.\n\n        \nNone\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.connectionpoolsize\n\n        \nMaximum number of available connections in the connection pool.\n\n        \n1\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.connectionpooltimeout\n\n        \nTimeout value in milliseconds for connection pool connections. \n\n        \n45000ms\n\n        \nAny Integer\n\n    \n\n    \n\n        \nmail.imap.separatestoreconnection\n\n        \nFlag to indicate whether to use a dedicated store connection for store commands.\n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.auth.login.disable\n\n        \nIf true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.auth.plain.disable\n\n        \nIf true, prevents use of the AUTHENTICATE PLAIN command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.auth.ntlm.disable\n\n        \nIf true, prevents use of the AUTHENTICATE NTLM command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.proxyauth.user\n\n        \nIf the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property.\n\n        \nNone\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.localaddress\n\n        \nLocal address (host name) to bind to when creating the IMAP socket.\n\n        \nDefaults to the address picked by the Socket class.\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.localport\n\n        \nLocal port number to bind to when creating the IMAP socket.\n\n        \nDefaults to the port number picked by the Socket class.\n\n        \nValid String value\n\n    \n\n    \n\n        \nmail.imap.sasl.enable\n\n        \nIf set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.sasl.mechanisms\n\n        \nA space or comma separated list of SASL mechanism names to try to use.\n\n        \nNone\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.sasl.authorizationid\n\n        \nThe authorization ID to use in the SASL authentication.\n\n        \nIf not set, the authentication ID (user name) is used.\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.sasl.realm\n\n        \nThe realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5.\n\n        \nNone\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.auth.ntlm.domain\n\n        \nThe NTLM authentication domain.\n\n        \nNone\n\n        \nValid string value\n\n    \n\n    \n\n        \nThe NTLM authentication domain.\n\n        \nNTLM protocol-specific flags.\n\n        \nNone\n\n        \nValid integer value\n\n    \n\n    \n\n        \nmail.imap.socketFactory\n\n        \nIf set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets.\n\n        \nNone\n\n        \nValid SocketFactory\n\n    \n\n    \n\n        \nmail.imap.socketFactory.class\n\n        \nIf set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets.\n\n        \nNone\n\n        \nValid string\n\n    \n\n    \n\n        \nmail.imap.socketFactory.fallback\n\n        \nIf set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. \n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.socketFactory.port\n\n        \nSpecifies the port to connect to when using the specified socket factory. Default port is used when not set.\n\n        \n143\n\n        \nValid Integer\n\n    \n\n    \n\n        \nmail.imap.ssl.checkserveridentity\n\n        \nIf set to true, check the server identity as specified by RFC 2595.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.ssl.trust\n\n        \nIf set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '\n', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents.\n\n        \n\n        \nValid String\n\n    \n\n    \n\n        \nmail.imap.ssl.socketFactory\n\n        \nIf set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets.\n\n        \nNone\n\n        \nSSL Socket Factory\n\n    \n\n    \n\n        \nmail.imap.ssl.socketFactory.class\n\n        \nIf set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.imap.ssl.socketFactory.port\n\n        \nSpecifies the port to connect to when using the specified socket factory.\n\n        \nthe default port will be used-993\n\n        \nvalid port number\n\n    \n\n    \n\n        \nmail.imap.ssl.protocols\n\n        \nSpecifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method.\n\n        \nNone\n\n        \nValid string\n\n    \n\n    \n\n        \nmail.imap.starttls.enable\n\n        \nIf true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.socks.host\n\n        \nSpecifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.imap.socks.port\n\n        \nSpecifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080.\n\n        \n1080\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.imap.minidletime\n\n        \nThis property sets the delay in milliseconds.\n\n        \n10 milliseconds\n\n        \ntime in seconds (Integer)\n\n    \n\n    \n\n        \nmail.imap.enableimapevents\n\n        \nEnable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.folder.class\n\n        \nClass name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store)\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.connectiontimeout\n\n        \nSocket connection timeout value in milliseconds.\n\n        \nInfinite timeout\n\n        \nInteger value\n\n    \n\n    \n\n        \nmail.pop3.timeout\n\n        \nSocket I/O timeout value in milliseconds. \n\n        \nInfinite timeout\n\n        \nInteger value\n\n    \n\n    \n\n        \nmail.pop3.message.class\n\n        \nClass name of a subclass of com.sun.mail.pop3.POP3Message\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.localaddress\n\n        \nLocal address (host name) to bind to when creating the POP3 socket.\n\n        \nDefaults to the address picked by the Socket class.\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.localport\n\n        \nLocal port number to bind to when creating the POP3 socket.\n\n        \nDefaults to the port number picked by the Socket class.\n\n        \nValid port number\n\n    \n\n    \n\n        \nmail.pop3.apop.enable\n\n        \nIf set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.socketFactory\n\n        \nIf set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets.\n\n        \nNone\n\n        \nSocket Factory\n\n    \n\n    \n\n        \nmail.pop3.socketFactory.class\n\n        \nIf set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.socketFactory.fallback\n\n        \nIf set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.socketFactory.port\n\n        \nSpecifies the port to connect to when using the specified socket factory.\n\n        \nDefault port\n\n        \nValid port number\n\n    \n\n    \n\n        \nmail.pop3.ssl.checkserveridentity\n\n        \nIf set to true, check the server identity as specified by RFC 2595. \n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.ssl.trust\n\n        \nIf set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to '\n', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents.\n\n        \n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.ssl.socketFactory\n\n        \nIf set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets.\n\n        \nNone\n\n        \nSSL Socket Factory\n\n    \n\n    \n\n        \nmail.pop3.ssl.checkserveridentity\n\n        \nIf set to true, check the server identity as specified by RFC 2595. \n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.ssl.trust\n\n        \n If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted. \n\n        \ntrust depends on the certificate the server presents.\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.ssl.socketFactory\n\n        \nIf set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets.\n\n        \nNone\n\n        \nSSL Socket Factory\n\n    \n\n    \n\n        \nmail.pop3.ssl.socketFactory.class\n\n        \nIf set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets. \n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.ssl.socketFactory.p\n\n        \nSpecifies the port to connect to when using the specified socket factory.\n\n        \n995\n\n        \nValid Integer\n\n    \n\n    \n\n        \nmail.pop3.ssl.protocols\n\n        \nSpecifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.starttls.enable\n\n        \nIf true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.starttls.required\n\n        \nIf true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.socks.host\n\n        \nSpecifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.socks.port\n\n        \nSpecifies the port number for the SOCKS5 proxy server.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.disabletop\n\n        \nIf set to true, the POP3 TOP command will not be used to fetch message headers. \n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.forgettopheaders\n\n        \nIf set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.filecache.enable\n\n        \nIf set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.filecache.dir\n\n        \nIf the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.cachewriteto\n\n        \nControls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.keepmessagecontent\n\n        \nIf this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method). \n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\n@source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string);\n\n\n\n\nAbove example illustrates how to receive events in \nxml\n format using email source. In this example only mandatory parameters are defined in the  in the stream definition. For other parameters default values are taken. since search term is not defined, it poll and take all new messages in the inbox folder\n\n\n\nEXAMPLE 2\n\n\n@source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string);\n\n\n\n\nAbove example illustrates how to receive events in \nxml\n format using email source. The email source polls the mail account in every 500 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term (email messages which come from\nfrom.account@.\nhost name\n, contains \ncc.account\n in cc receipts list, and \nStream Processor\n words in the mail subject) In the example, action after processes is defined as the \nDELETE\n, so that after processing the event, corresponding mail is deleted from the mail folder.", 
            "title": "1.0.13"
        }, 
        {
            "location": "/api/1.0.13/#api-docs-v1013", 
            "text": "", 
            "title": "API Docs - v1.0.13"
        }, 
        {
            "location": "/api/1.0.13/#sink", 
            "text": "", 
            "title": "Sink"
        }, 
        {
            "location": "/api/1.0.13/#email-sink", 
            "text": "The email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken for the optional parameters. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters). Further, some email account required to enable 'access to less secure apps' option (for gmail account you can enable it via https://myaccount.google.com/lesssecureapps).  Syntax  @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , @map(...)))  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         username \n         Username of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com). \n         \n         STRING \n         No \n         No \n     \n     \n         address \n         Address of the email account which is used to send emails. \n         \n         STRING \n         No \n         No \n     \n     \n         password \n         Password of the email account. \n         \n         STRING \n         No \n         No \n     \n     \n         host \n         Host name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account. \n         smtp.gmail.com \n         STRING \n         Yes \n         No \n     \n     \n         port \n         The port which is used to create the connection. \n         '465' the default value is only valid is ssl enable \n         INT \n         Yes \n         No \n     \n     \n         ssl.enable \n         Whether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection. \n         true \n         BOOL \n         Yes \n         No \n     \n     \n         auth \n         Whether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command. \n         true \n         BOOL \n         Yes \n         No \n     \n     \n         content.type \n         Content type can be either 'text/plain' or 'text/html'. \n         text/plain \n         STRING \n         Yes \n         No \n     \n     \n         subject \n         Subject of the mail which has to be send. \n         \n         STRING \n         No \n         Yes \n     \n     \n         to \n         Address of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list. \n         \n         STRING \n         No \n         Yes \n     \n     \n         cc \n         Address of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list. \n         None \n         STRING \n         Yes \n         No \n     \n     \n         bcc \n         Address of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list. \n         None \n         STRING \n         Yes \n         No \n       System Parameters  \n     \n         Name \n         Description \n         Default Value \n         Possible Parameters \n     \n     \n         mail.smtp.ssl.trust \n         If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to \" \", all hosts are trusted. If set to a whitespace separated list of hosts, those hosts are trusted. Otherwise, trust depends on the certificate the server presents. \n         \n         String \n     \n     \n         mail.smtp.connectiontimeout \n         Socket connection timeout value in milliseconds.  \n         infinite timeout \n         Any Integer \n     \n     \n         mail.smtp.timeout \n         Socket I/O timeout value in milliseconds.  \n         infinite timeout \n         Any Integer \n     \n     \n         mail.smtp.from \n         Email address to use for SMTP MAIL command. This sets the envelope return address. \n         Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). \n         Valid email address \n     \n     \n         mail.smtp.localport \n         Local port number to bind to when creating the SMTP socket. \n         Defaults to the port number picked by the Socket class. \n         Any Integer \n     \n     \n         mail.smtp.ehlo \n         If false, do not attempt to sign on with the EHLO command. \n         true \n         true or false \n     \n     \n         mail.smtp.auth.login.disable \n         If true, prevents use of the AUTH LOGIN command. \n         false \n         true or false \n     \n     \n         mail.smtp.auth.plain.disable \n         If true, prevents use of the AUTH PLAIN command. \n         false \n         true or false \n     \n     \n         mail.smtp.auth.digest-md5.disable \n         If true, prevents use of the AUTH DIGEST-MD5 command. \n         false \n         true or false \n     \n     \n         mail.smtp.auth.ntlm.disable \n         If true, prevents use of the AUTH NTLM command \n         false \n         true or false \n     \n     \n         mail.smtp.auth.ntlm.domain \n         The NTLM authentication domain. \n         None \n         Valid NTLM authentication domain name \n     \n     \n         mail.smtp.auth.ntlm.flags \n         NTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details. \n         None \n         Valid NTLM protocol-specific flags. \n     \n     \n         mail.smtp.dsn.notify \n         The NOTIFY option to the RCPT command. \n         None \n         Either NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas). \n     \n     \n         mail.smtp.dsn.ret \n         The RET option to the MAIL command. \n         None \n         Either FULL or HDRS. \n     \n     \n         mail.smtp.sendpartial \n         If set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address. \n         false \n         true or false \n     \n     \n         mail.smtp.sasl.enable \n         If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. \n         false \n         true or false \n     \n     \n         mail.smtp.sasl.mechanisms \n         A space or comma separated list of SASL mechanism names to try to use. \n         None \n         \n     \n     \n         mail.smtp.sasl.authorizationid \n         The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. \n         username \n         Valid ID \n     \n     \n         mail.smtp.sasl.realm \n         The realm to use with DIGEST-MD5 authentication. \n         None \n         \n     \n     \n         mail.smtp.quitwait \n         If set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command. \n         false \n         true or false \n     \n     \n         mail.smtp.reportsuccess \n         If set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful. \n         false \n         true or false \n     \n     \n         mail.smtp.socketFactory \n         If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets. \n         None \n         Socket Factory \n     \n     \n         mail.smtp.socketFactory.class \n         If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets. \n         None \n         \n     \n     \n         mail.smtp.socketFactory.fallback \n         If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. \n         true \n         true or false \n     \n     \n         mail.smtp.socketFactory.port \n         Specifies the port to connect to when using the specified socket factory \n         25 \n         Valid port number \n     \n     \n         mail.smtp.ssl.protocols \n         Specifies the SSL protocols that will be enabled for SSL connections. \n         None \n         The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. \n     \n     \n         mail.smtp.starttls.enable \n         If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. \n         false \n         true or false \n     \n     \n         mail.smtp.starttls.required \n         If true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail. \n         false \n         true or false \n     \n     \n         mail.smtp.socks.host \n         Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. \n         None \n         \n     \n     \n         mail.smtp.socks.port \n         Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. \n         1080 \n         valid port number \n     \n     \n         mail.smtp.auth.ntlm.disable \n         If true, prevents use of the AUTH NTLM command \n         false \n         true or false \n     \n     \n         mail.smtp.mailextension \n         Extension string to append to the MAIL command. \n         None \n         \n     \n     \n         mail.smtp.userset \n         If set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue. \n         false \n         true or false \n       Examples  EXAMPLE 1  @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string);  Above example illustrates how to publish events using the email sinkusing mandatory parameters. As in the example, it publishes events come from the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection.  EXAMPLE 2  @sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string);  Above example illustrates how to configure the query parameters and system parameters in the 'deployment.ymal' file of WSO2 Stream Processor. Corresponding parameters need to be configure under name:'email' and namespace:'sink' as follows siddhi: extensions: -  extension: name:'email' namespace:'sink' properties: username:  sender's email username address:  sender's email address password:  sender's email password As in the example, it publishes events comefrom the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection.  EXAMPLE 3  @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream fooStream (name string, age int, country string);  Above example illustrates how to publish events using the email sink. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given  to , cc  and  bcc  recipients using a secure connection.  name  in the  subject  attribute will be the value of the  name  parameter in the corresponding output event", 
            "title": "email (Sink)"
        }, 
        {
            "location": "/api/1.0.13/#source", 
            "text": "", 
            "title": "Source"
        }, 
        {
            "location": "/api/1.0.13/#email-source", 
            "text": "Email source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store ,  https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters).  Syntax  @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...)))  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         username \n         user name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account. \n         \n         STRING \n         No \n         No \n     \n     \n         password \n         password of the email account \n         \n         STRING \n         No \n         No \n     \n     \n         store \n         Store type that used to receive emails. it can be either imap or pop3. \n         imap \n         STRING \n         Yes \n         No \n     \n     \n         host \n         Host name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable. \n         If store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'. \n         STRING \n         Yes \n         No \n     \n     \n         port \n         The port which is used to create the connection. \n         '993' the default value is valid only if store is imap and ssl enable \n         INT \n         Yes \n         No \n     \n     \n         folder \n         Name of the folder to fetch email. \n         INBOX \n         STRING \n         Yes \n         No \n     \n     \n         search.term \n         Option which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol. \n         None \n         STRING \n         Yes \n         No \n     \n     \n         polling.interval \n         Interval that email source should poll the account to check for new mails arrivals in seconds. \n         600 \n         LONG \n         Yes \n         No \n     \n     \n         action.after.processed \n         Action that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE \n         NONE \n         STRING \n         Yes \n         No \n     \n     \n         folder.to.move \n         The name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move. \n         \n         STRING \n         No \n         No \n     \n     \n         content.type \n         Content type of the email. It can be either 'text/plain' or 'text/html.' \n         text/plain \n         STRING \n         Yes \n         No \n     \n     \n         ssl.enable \n         If it is 'true' then use a secure port to establish the connection. The possible values are 'true or false. \n         true \n         BOOL \n         Yes \n         No \n       System Parameters  \n     \n         Name \n         Description \n         Default Value \n         Possible Parameters \n     \n     \n         mail.imap.partialfetch \n         Controls whether the IMAP partial-fetch capability should be used \n         true \n         true or false \n     \n     \n         mail.imap.fetchsize \n         Partial fetch size in bytes. \n         16K \n         value in bytes \n     \n     \n         mail.imap.peek \n         If set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage. \n         false \n         true or false \n     \n     \n         mail.imap.connectiontimeout \n         Socket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket. \n         infinity timeout \n         Any Integer value \n     \n     \n         mail.imap.timeout \n         Socket read timeout value in milliseconds. This timeout is implemented by java.net.Socket. \n         infinity timeout \n         Any Integer value \n     \n     \n         mail.imap.writetimeout \n         Socket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection. \n         infinity timeout \n         Any Integer value \n     \n     \n         mail.imap.statuscachetimeout \n         Timeout value in milliseconds for cache of STATUS command response. \n         1000ms \n         Time out in miliseconds \n     \n     \n         mail.imap.appendbuffersize \n         Maximum size of a message to buffer in memory when appending to an IMAP folder. \n         None \n         Any Integer value \n     \n     \n         mail.imap.connectionpoolsize \n         Maximum number of available connections in the connection pool. \n         1 \n         Any Integer value \n     \n     \n         mail.imap.connectionpooltimeout \n         Timeout value in milliseconds for connection pool connections.  \n         45000ms \n         Any Integer \n     \n     \n         mail.imap.separatestoreconnection \n         Flag to indicate whether to use a dedicated store connection for store commands. \n         true \n         true or false \n     \n     \n         mail.imap.auth.login.disable \n         If true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command. \n         false \n         true or false \n     \n     \n         mail.imap.auth.plain.disable \n         If true, prevents use of the AUTHENTICATE PLAIN command. \n         false \n         true or false \n     \n     \n         mail.imap.auth.ntlm.disable \n         If true, prevents use of the AUTHENTICATE NTLM command. \n         false \n         true or false \n     \n     \n         mail.imap.proxyauth.user \n         If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property. \n         None \n         Valid string value \n     \n     \n         mail.imap.localaddress \n         Local address (host name) to bind to when creating the IMAP socket. \n         Defaults to the address picked by the Socket class. \n         Valid string value \n     \n     \n         mail.imap.localport \n         Local port number to bind to when creating the IMAP socket. \n         Defaults to the port number picked by the Socket class. \n         Valid String value \n     \n     \n         mail.imap.sasl.enable \n         If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. \n         false \n         true or false \n     \n     \n         mail.imap.sasl.mechanisms \n         A space or comma separated list of SASL mechanism names to try to use. \n         None \n         Valid string value \n     \n     \n         mail.imap.sasl.authorizationid \n         The authorization ID to use in the SASL authentication. \n         If not set, the authentication ID (user name) is used. \n         Valid string value \n     \n     \n         mail.imap.sasl.realm \n         The realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5. \n         None \n         Valid string value \n     \n     \n         mail.imap.auth.ntlm.domain \n         The NTLM authentication domain. \n         None \n         Valid string value \n     \n     \n         The NTLM authentication domain. \n         NTLM protocol-specific flags. \n         None \n         Valid integer value \n     \n     \n         mail.imap.socketFactory \n         If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets. \n         None \n         Valid SocketFactory \n     \n     \n         mail.imap.socketFactory.class \n         If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets. \n         None \n         Valid string \n     \n     \n         mail.imap.socketFactory.fallback \n         If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class.  \n         true \n         true or false \n     \n     \n         mail.imap.socketFactory.port \n         Specifies the port to connect to when using the specified socket factory. Default port is used when not set. \n         143 \n         Valid Integer \n     \n     \n         mail.imap.ssl.checkserveridentity \n         If set to true, check the server identity as specified by RFC 2595. \n         false \n         true or false \n     \n     \n         mail.imap.ssl.trust \n         If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. \n         \n         Valid String \n     \n     \n         mail.imap.ssl.socketFactory \n         If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets. \n         None \n         SSL Socket Factory \n     \n     \n         mail.imap.ssl.socketFactory.class \n         If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets. \n         None \n         Valid String \n     \n     \n         mail.imap.ssl.socketFactory.port \n         Specifies the port to connect to when using the specified socket factory. \n         the default port will be used-993 \n         valid port number \n     \n     \n         mail.imap.ssl.protocols \n         Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. \n         None \n         Valid string \n     \n     \n         mail.imap.starttls.enable \n         If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. \n         false \n         true or false \n     \n     \n         mail.imap.socks.host \n         Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. \n         None \n         Valid String \n     \n     \n         mail.imap.socks.port \n         Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. \n         1080 \n         Valid String \n     \n     \n         mail.imap.minidletime \n         This property sets the delay in milliseconds. \n         10 milliseconds \n         time in seconds (Integer) \n     \n     \n         mail.imap.enableimapevents \n         Enable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string. \n         false \n         true or false \n     \n     \n         mail.imap.folder.class \n         Class name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store) \n         None \n         Valid String \n     \n     \n         mail.pop3.connectiontimeout \n         Socket connection timeout value in milliseconds. \n         Infinite timeout \n         Integer value \n     \n     \n         mail.pop3.timeout \n         Socket I/O timeout value in milliseconds.  \n         Infinite timeout \n         Integer value \n     \n     \n         mail.pop3.message.class \n         Class name of a subclass of com.sun.mail.pop3.POP3Message \n         None \n         Valid String \n     \n     \n         mail.pop3.localaddress \n         Local address (host name) to bind to when creating the POP3 socket. \n         Defaults to the address picked by the Socket class. \n         Valid String \n     \n     \n         mail.pop3.localport \n         Local port number to bind to when creating the POP3 socket. \n         Defaults to the port number picked by the Socket class. \n         Valid port number \n     \n     \n         mail.pop3.apop.enable \n         If set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password. \n         false \n         true or false \n     \n     \n         mail.pop3.socketFactory \n         If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets. \n         None \n         Socket Factory \n     \n     \n         mail.pop3.socketFactory.class \n         If set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets. \n         None \n         Valid String \n     \n     \n         mail.pop3.socketFactory.fallback \n         If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. \n         false \n         true or false \n     \n     \n         mail.pop3.socketFactory.port \n         Specifies the port to connect to when using the specified socket factory. \n         Default port \n         Valid port number \n     \n     \n         mail.pop3.ssl.checkserveridentity \n         If set to true, check the server identity as specified by RFC 2595.  \n         false \n         true or false \n     \n     \n         mail.pop3.ssl.trust \n         If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. \n         \n         Valid String \n     \n     \n         mail.pop3.ssl.socketFactory \n         If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. \n         None \n         SSL Socket Factory \n     \n     \n         mail.pop3.ssl.checkserveridentity \n         If set to true, check the server identity as specified by RFC 2595.  \n         false \n         true or false \n     \n     \n         mail.pop3.ssl.trust \n          If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.  \n         trust depends on the certificate the server presents. \n         Valid String \n     \n     \n         mail.pop3.ssl.socketFactory \n         If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. \n         None \n         SSL Socket Factory \n     \n     \n         mail.pop3.ssl.socketFactory.class \n         If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets.  \n         None \n         Valid String \n     \n     \n         mail.pop3.ssl.socketFactory.p \n         Specifies the port to connect to when using the specified socket factory. \n         995 \n         Valid Integer \n     \n     \n         mail.pop3.ssl.protocols \n         Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. \n         None \n         Valid String \n     \n     \n         mail.pop3.starttls.enable \n         If true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands \n         false \n         true or false \n     \n     \n         mail.pop3.starttls.required \n         If true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail. \n         false \n         true or false \n     \n     \n         mail.pop3.socks.host \n         Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. \n         None \n         Valid String \n     \n     \n         mail.pop3.socks.port \n         Specifies the port number for the SOCKS5 proxy server. \n         None \n         Valid String \n     \n     \n         mail.pop3.disabletop \n         If set to true, the POP3 TOP command will not be used to fetch message headers.  \n         false \n         true or false \n     \n     \n         mail.pop3.forgettopheaders \n         If set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command. \n         false \n         true or false \n     \n     \n         mail.pop3.filecache.enable \n         If set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. \n         false \n         true or false \n     \n     \n         mail.pop3.filecache.dir \n         If the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files. \n         None \n         Valid String \n     \n     \n         mail.pop3.cachewriteto \n         Controls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached. \n         false \n         true or false \n     \n     \n         mail.pop3.keepmessagecontent \n         If this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method).  \n         false \n         true or false \n       Examples  EXAMPLE 1  @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string);  Above example illustrates how to receive events in  xml  format using email source. In this example only mandatory parameters are defined in the  in the stream definition. For other parameters default values are taken. since search term is not defined, it poll and take all new messages in the inbox folder  EXAMPLE 2  @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string);  Above example illustrates how to receive events in  xml  format using email source. The email source polls the mail account in every 500 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term (email messages which come from from.account@. host name , contains  cc.account  in cc receipts list, and  Stream Processor  words in the mail subject) In the example, action after processes is defined as the  DELETE , so that after processing the event, corresponding mail is deleted from the mail folder.", 
            "title": "email (Source)"
        }, 
        {
            "location": "/api/1.0.12/", 
            "text": "API Docs - v1.0.12\n\n\nSink\n\n\nemail \n(Sink)\n\n\nThe email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken for the optional parameters. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters). Further, some email account required to enable 'access to less secure apps' option (for gmail account you can enable it via https://myaccount.google.com/lesssecureapps).\n\n\n\nSyntax\n\n\n@sink(type=\nemail\n, username=\nSTRING\n, address=\nSTRING\n, password=\nSTRING\n, host=\nSTRING\n, port=\nINT\n, ssl.enable=\nBOOL\n, auth=\nBOOL\n, content.type=\nSTRING\n, subject=\nSTRING\n, to=\nSTRING\n, cc=\nSTRING\n, bcc=\nSTRING\n, @map(...)))\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \nusername\n\n        \nUsername of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com).\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \naddress\n\n        \nAddress of the email account which is used to send emails.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \npassword\n\n        \nPassword of the email account.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \nhost\n\n        \nHost name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account.\n\n        \nsmtp.gmail.com\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nport\n\n        \nThe port which is used to create the connection.\n\n        \n'465' the default value is only valid is ssl enable\n\n        \nINT\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nssl.enable\n\n        \nWhether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection.\n\n        \ntrue\n\n        \nBOOL\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nauth\n\n        \nWhether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command.\n\n        \ntrue\n\n        \nBOOL\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \ncontent.type\n\n        \nContent type can be either 'text/plain' or 'text/html'.\n\n        \ntext/plain\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nsubject\n\n        \nSubject of the mail which has to be send.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nYes\n\n    \n\n    \n\n        \nto\n\n        \nAddress of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nYes\n\n    \n\n    \n\n        \ncc\n\n        \nAddress of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list.\n\n        \nNone\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nbcc\n\n        \nAddress of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list.\n\n        \nNone\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n\n\n\nSystem Parameters\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Parameters\n\n    \n\n    \n\n        \nmail.smtp.ssl.trust\n\n        \nIf set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to \"\n\", all hosts are trusted. If set to a whitespace separated list of hosts, those hosts are trusted. Otherwise, trust depends on the certificate the server presents.\n\n        \n\n        \nString\n\n    \n\n    \n\n        \nmail.smtp.connectiontimeout\n\n        \nSocket connection timeout value in milliseconds. \n\n        \ninfinite timeout\n\n        \nAny Integer\n\n    \n\n    \n\n        \nmail.smtp.timeout\n\n        \nSocket I/O timeout value in milliseconds. \n\n        \ninfinite timeout\n\n        \nAny Integer\n\n    \n\n    \n\n        \nmail.smtp.from\n\n        \nEmail address to use for SMTP MAIL command. This sets the envelope return address.\n\n        \nDefaults to msg.getFrom() or InternetAddress.getLocalAddress().\n\n        \nValid email address\n\n    \n\n    \n\n        \nmail.smtp.localport\n\n        \nLocal port number to bind to when creating the SMTP socket.\n\n        \nDefaults to the port number picked by the Socket class.\n\n        \nAny Integer\n\n    \n\n    \n\n        \nmail.smtp.ehlo\n\n        \nIf false, do not attempt to sign on with the EHLO command.\n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.login.disable\n\n        \nIf true, prevents use of the AUTH LOGIN command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.plain.disable\n\n        \nIf true, prevents use of the AUTH PLAIN command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.digest-md5.disable\n\n        \nIf true, prevents use of the AUTH DIGEST-MD5 command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.ntlm.disable\n\n        \nIf true, prevents use of the AUTH NTLM command\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.ntlm.domain\n\n        \nThe NTLM authentication domain.\n\n        \nNone\n\n        \nValid NTLM authentication domain name\n\n    \n\n    \n\n        \nmail.smtp.auth.ntlm.flags\n\n        \nNTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details.\n\n        \nNone\n\n        \nValid NTLM protocol-specific flags.\n\n    \n\n    \n\n        \nmail.smtp.dsn.notify\n\n        \nThe NOTIFY option to the RCPT command.\n\n        \nNone\n\n        \nEither NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas).\n\n    \n\n    \n\n        \nmail.smtp.dsn.ret\n\n        \nThe RET option to the MAIL command.\n\n        \nNone\n\n        \nEither FULL or HDRS.\n\n    \n\n    \n\n        \nmail.smtp.sendpartial\n\n        \nIf set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.sasl.enable\n\n        \nIf set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.sasl.mechanisms\n\n        \nA space or comma separated list of SASL mechanism names to try to use.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.sasl.authorizationid\n\n        \nThe authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used.\n\n        \nusername\n\n        \nValid ID\n\n    \n\n    \n\n        \nmail.smtp.sasl.realm\n\n        \nThe realm to use with DIGEST-MD5 authentication.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.quitwait\n\n        \nIf set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.reportsuccess\n\n        \nIf set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.socketFactory\n\n        \nIf set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets.\n\n        \nNone\n\n        \nSocket Factory\n\n    \n\n    \n\n        \nmail.smtp.socketFactory.class\n\n        \nIf set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.socketFactory.fallback\n\n        \nIf set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class.\n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.socketFactory.port\n\n        \nSpecifies the port to connect to when using the specified socket factory\n\n        \n25\n\n        \nValid port number\n\n    \n\n    \n\n        \nmail.smtp.ssl.protocols\n\n        \nSpecifies the SSL protocols that will be enabled for SSL connections.\n\n        \nNone\n\n        \nThe property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method.\n\n    \n\n    \n\n        \nmail.smtp.starttls.enable\n\n        \nIf true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.starttls.required\n\n        \nIf true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.socks.host\n\n        \nSpecifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.socks.port\n\n        \nSpecifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080.\n\n        \n1080\n\n        \nvalid port number\n\n    \n\n    \n\n        \nmail.smtp.auth.ntlm.disable\n\n        \nIf true, prevents use of the AUTH NTLM command\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.mailextension\n\n        \nExtension string to append to the MAIL command.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.userset\n\n        \nIf set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\n@sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string);\n\n\n\n\nFollowing example illustrates how to publish events using the email sinkusing mandatory parameters. As in the example, it publishes events come from the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection.\n\n\n\nEXAMPLE 2\n\n\n@sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string);\n\n\n\n\nFollowing example illustrates how to configure the query parameters and system parameters in the deployment ymal file.\nCorresponding parameters need to be configure under name:'email' and namespace:'sink' as follows\nsiddhi:\nextensions:\n-\nextension:\nname:'email'\nnamespace:'sink'\nproperties:\nusername:sender.account\naddress:sender.account@gmail.com\naddress:sender.account@gmail.com\nAs in the example, it publishes events comefrom the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection.\n\n\n\nEXAMPLE 3\n\n\n@sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream fooStream (name string, age int, country string);\n\n\n\n\nFollowing example illustrates how to publish events using the email sink. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given \nto\n,\ncc\n and \nbcc\n recipients using a secure connection. \nname\n in the \nsubject\n attribute will be the value of the \nname\n parameter in the corresponding output event\n\n\n\nSource\n\n\nemail \n(Source)\n\n\nEmail source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store ,  https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters).\n\n\n\nSyntax\n\n\n@source(type=\nemail\n, username=\nSTRING\n, password=\nSTRING\n, store=\nSTRING\n, host=\nSTRING\n, port=\nINT\n, folder=\nSTRING\n, search.term=\nSTRING\n, polling.interval=\nLONG\n, action.after.processed=\nSTRING\n, folder.to.move=\nSTRING\n, content.type=\nSTRING\n, ssl.enable=\nBOOL\n, @map(...)))\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \nusername\n\n        \nuser name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \npassword\n\n        \npassword of the email account\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \nstore\n\n        \nStore type that used to receive emails. it can be either imap or pop3.\n\n        \nimap\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nhost\n\n        \nHost name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable.\n\n        \nIf store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'.\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nport\n\n        \nThe port which is used to create the connection.\n\n        \n'993' the default value is valid only if store is imap and ssl enable\n\n        \nINT\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nfolder\n\n        \nName of the folder to fetch email.\n\n        \nINBOX\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nsearch.term\n\n        \nOption which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol.\n\n        \nNone\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \npolling.interval\n\n        \nInterval that email source should poll the account to check for new mails arrivals in seconds.\n\n        \n600\n\n        \nLONG\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \naction.after.processed\n\n        \nAction that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE\n\n        \nNONE\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nfolder.to.move\n\n        \nThe name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \ncontent.type\n\n        \nContent type of the email. It can be either 'text/plain' or 'text/html.'\n\n        \ntext/plain\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nssl.enable\n\n        \nIf it is 'true' then use a secure port to establish the connection. The possible values are 'true or false.\n\n        \ntrue\n\n        \nBOOL\n\n        \nYes\n\n        \nNo\n\n    \n\n\n\n\nSystem Parameters\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Parameters\n\n    \n\n    \n\n        \nmail.imap.partialfetch\n\n        \nControls whether the IMAP partial-fetch capability should be used\n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.fetchsize\n\n        \nPartial fetch size in bytes.\n\n        \n16K\n\n        \nvalue in bytes\n\n    \n\n    \n\n        \nmail.imap.peek\n\n        \nIf set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.connectiontimeout\n\n        \nSocket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket.\n\n        \ninfinity timeout\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.timeout\n\n        \nSocket read timeout value in milliseconds. This timeout is implemented by java.net.Socket.\n\n        \ninfinity timeout\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.writetimeout\n\n        \nSocket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection.\n\n        \ninfinity timeout\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.statuscachetimeout\n\n        \nTimeout value in milliseconds for cache of STATUS command response.\n\n        \n1000ms\n\n        \nTime out in miliseconds\n\n    \n\n    \n\n        \nmail.imap.appendbuffersize\n\n        \nMaximum size of a message to buffer in memory when appending to an IMAP folder.\n\n        \nNone\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.connectionpoolsize\n\n        \nMaximum number of available connections in the connection pool.\n\n        \n1\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.connectionpooltimeout\n\n        \nTimeout value in milliseconds for connection pool connections. \n\n        \n45000ms\n\n        \nAny Integer\n\n    \n\n    \n\n        \nmail.imap.separatestoreconnection\n\n        \nFlag to indicate whether to use a dedicated store connection for store commands.\n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.auth.login.disable\n\n        \nIf true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.auth.plain.disable\n\n        \nIf true, prevents use of the AUTHENTICATE PLAIN command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.auth.ntlm.disable\n\n        \nIf true, prevents use of the AUTHENTICATE NTLM command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.proxyauth.user\n\n        \nIf the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property.\n\n        \nNone\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.localaddress\n\n        \nLocal address (host name) to bind to when creating the IMAP socket.\n\n        \nDefaults to the address picked by the Socket class.\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.localport\n\n        \nLocal port number to bind to when creating the IMAP socket.\n\n        \nDefaults to the port number picked by the Socket class.\n\n        \nValid String value\n\n    \n\n    \n\n        \nmail.imap.sasl.enable\n\n        \nIf set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.sasl.mechanisms\n\n        \nA space or comma separated list of SASL mechanism names to try to use.\n\n        \nNone\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.sasl.authorizationid\n\n        \nThe authorization ID to use in the SASL authentication.\n\n        \nIf not set, the authentication ID (user name) is used.\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.sasl.realm\n\n        \nThe realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5.\n\n        \nNone\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.auth.ntlm.domain\n\n        \nThe NTLM authentication domain.\n\n        \nNone\n\n        \nValid string value\n\n    \n\n    \n\n        \nThe NTLM authentication domain.\n\n        \nNTLM protocol-specific flags.\n\n        \nNone\n\n        \nValid integer value\n\n    \n\n    \n\n        \nmail.imap.socketFactory\n\n        \nIf set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets.\n\n        \nNone\n\n        \nValid SocketFactory\n\n    \n\n    \n\n        \nmail.imap.socketFactory.class\n\n        \nIf set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets.\n\n        \nNone\n\n        \nValid string\n\n    \n\n    \n\n        \nmail.imap.socketFactory.fallback\n\n        \nIf set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. \n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.socketFactory.port\n\n        \nSpecifies the port to connect to when using the specified socket factory. Default port is used when not set.\n\n        \n143\n\n        \nValid Integer\n\n    \n\n    \n\n        \nmail.imap.ssl.checkserveridentity\n\n        \nIf set to true, check the server identity as specified by RFC 2595.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.ssl.trust\n\n        \nIf set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '\n', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents.\n\n        \n\n        \nValid String\n\n    \n\n    \n\n        \nmail.imap.ssl.socketFactory\n\n        \nIf set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets.\n\n        \nNone\n\n        \nSSL Socket Factory\n\n    \n\n    \n\n        \nmail.imap.ssl.socketFactory.class\n\n        \nIf set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.imap.ssl.socketFactory.port\n\n        \nSpecifies the port to connect to when using the specified socket factory.\n\n        \nthe default port will be used-993\n\n        \nvalid port number\n\n    \n\n    \n\n        \nmail.imap.ssl.protocols\n\n        \nSpecifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method.\n\n        \nNone\n\n        \nValid string\n\n    \n\n    \n\n        \nmail.imap.starttls.enable\n\n        \nIf true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.socks.host\n\n        \nSpecifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.imap.socks.port\n\n        \nSpecifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080.\n\n        \n1080\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.imap.minidletime\n\n        \nThis property sets the delay in milliseconds.\n\n        \n10 milliseconds\n\n        \ntime in seconds (Integer)\n\n    \n\n    \n\n        \nmail.imap.enableimapevents\n\n        \nEnable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.folder.class\n\n        \nClass name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store)\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.connectiontimeout\n\n        \nSocket connection timeout value in milliseconds.\n\n        \nInfinite timeout\n\n        \nInteger value\n\n    \n\n    \n\n        \nmail.pop3.timeout\n\n        \nSocket I/O timeout value in milliseconds. \n\n        \nInfinite timeout\n\n        \nInteger value\n\n    \n\n    \n\n        \nmail.pop3.message.class\n\n        \nClass name of a subclass of com.sun.mail.pop3.POP3Message\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.localaddress\n\n        \nLocal address (host name) to bind to when creating the POP3 socket.\n\n        \nDefaults to the address picked by the Socket class.\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.localport\n\n        \nLocal port number to bind to when creating the POP3 socket.\n\n        \nDefaults to the port number picked by the Socket class.\n\n        \nValid port number\n\n    \n\n    \n\n        \nmail.pop3.apop.enable\n\n        \nIf set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.socketFactory\n\n        \nIf set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets.\n\n        \nNone\n\n        \nSocket Factory\n\n    \n\n    \n\n        \nmail.pop3.socketFactory.class\n\n        \nIf set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.socketFactory.fallback\n\n        \nIf set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.socketFactory.port\n\n        \nSpecifies the port to connect to when using the specified socket factory.\n\n        \nDefault port\n\n        \nValid port number\n\n    \n\n    \n\n        \nmail.pop3.ssl.checkserveridentity\n\n        \nIf set to true, check the server identity as specified by RFC 2595. \n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.ssl.trust\n\n        \nIf set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to '\n', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents.\n\n        \n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.ssl.socketFactory\n\n        \nIf set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets.\n\n        \nNone\n\n        \nSSL Socket Factory\n\n    \n\n    \n\n        \nmail.pop3.ssl.checkserveridentity\n\n        \nIf set to true, check the server identity as specified by RFC 2595. \n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.ssl.trust\n\n        \n If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted. \n\n        \ntrust depends on the certificate the server presents.\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.ssl.socketFactory\n\n        \nIf set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets.\n\n        \nNone\n\n        \nSSL Socket Factory\n\n    \n\n    \n\n        \nmail.pop3.ssl.socketFactory.class\n\n        \nIf set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets. \n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.ssl.socketFactory.p\n\n        \nSpecifies the port to connect to when using the specified socket factory.\n\n        \n995\n\n        \nValid Integer\n\n    \n\n    \n\n        \nmail.pop3.ssl.protocols\n\n        \nSpecifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.starttls.enable\n\n        \nIf true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.starttls.required\n\n        \nIf true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.socks.host\n\n        \nSpecifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.socks.port\n\n        \nSpecifies the port number for the SOCKS5 proxy server.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.disabletop\n\n        \nIf set to true, the POP3 TOP command will not be used to fetch message headers. \n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.forgettopheaders\n\n        \nIf set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.filecache.enable\n\n        \nIf set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.filecache.dir\n\n        \nIf the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.cachewriteto\n\n        \nControls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.keepmessagecontent\n\n        \nIf this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method). \n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\n@source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string);\n\n\n\n\nFollowing example illustrates how to receive events in \nxml\n format using email source. In this example only mandatory parameters are defined in the  in the stream definition. For other parameters default values are taken. since search term is not defined, it poll and take all new messages in the inbox folder\n\n\n\nEXAMPLE 2\n\n\n@source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string);\n\n\n\n\nFollowing example illustrates how to receive events in \nxml\n format using email source. The email source polls the mail account in every 500 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term (email messages which come from\nfrom.account@.\nhost name\n, contains \ncc.account\n in cc receipts list, and \nStream Processor\n words in the mail subject) In the example, action after processes is defined as the \nDELETE\n, so that after processing the event, corresponding mail is deleted from the mail folder.", 
            "title": "1.0.12"
        }, 
        {
            "location": "/api/1.0.12/#api-docs-v1012", 
            "text": "", 
            "title": "API Docs - v1.0.12"
        }, 
        {
            "location": "/api/1.0.12/#sink", 
            "text": "", 
            "title": "Sink"
        }, 
        {
            "location": "/api/1.0.12/#email-sink", 
            "text": "The email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken for the optional parameters. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters). Further, some email account required to enable 'access to less secure apps' option (for gmail account you can enable it via https://myaccount.google.com/lesssecureapps).  Syntax  @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , @map(...)))  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         username \n         Username of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com). \n         \n         STRING \n         No \n         No \n     \n     \n         address \n         Address of the email account which is used to send emails. \n         \n         STRING \n         No \n         No \n     \n     \n         password \n         Password of the email account. \n         \n         STRING \n         No \n         No \n     \n     \n         host \n         Host name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account. \n         smtp.gmail.com \n         STRING \n         Yes \n         No \n     \n     \n         port \n         The port which is used to create the connection. \n         '465' the default value is only valid is ssl enable \n         INT \n         Yes \n         No \n     \n     \n         ssl.enable \n         Whether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection. \n         true \n         BOOL \n         Yes \n         No \n     \n     \n         auth \n         Whether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command. \n         true \n         BOOL \n         Yes \n         No \n     \n     \n         content.type \n         Content type can be either 'text/plain' or 'text/html'. \n         text/plain \n         STRING \n         Yes \n         No \n     \n     \n         subject \n         Subject of the mail which has to be send. \n         \n         STRING \n         No \n         Yes \n     \n     \n         to \n         Address of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list. \n         \n         STRING \n         No \n         Yes \n     \n     \n         cc \n         Address of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list. \n         None \n         STRING \n         Yes \n         No \n     \n     \n         bcc \n         Address of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list. \n         None \n         STRING \n         Yes \n         No \n       System Parameters  \n     \n         Name \n         Description \n         Default Value \n         Possible Parameters \n     \n     \n         mail.smtp.ssl.trust \n         If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to \" \", all hosts are trusted. If set to a whitespace separated list of hosts, those hosts are trusted. Otherwise, trust depends on the certificate the server presents. \n         \n         String \n     \n     \n         mail.smtp.connectiontimeout \n         Socket connection timeout value in milliseconds.  \n         infinite timeout \n         Any Integer \n     \n     \n         mail.smtp.timeout \n         Socket I/O timeout value in milliseconds.  \n         infinite timeout \n         Any Integer \n     \n     \n         mail.smtp.from \n         Email address to use for SMTP MAIL command. This sets the envelope return address. \n         Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). \n         Valid email address \n     \n     \n         mail.smtp.localport \n         Local port number to bind to when creating the SMTP socket. \n         Defaults to the port number picked by the Socket class. \n         Any Integer \n     \n     \n         mail.smtp.ehlo \n         If false, do not attempt to sign on with the EHLO command. \n         true \n         true or false \n     \n     \n         mail.smtp.auth.login.disable \n         If true, prevents use of the AUTH LOGIN command. \n         false \n         true or false \n     \n     \n         mail.smtp.auth.plain.disable \n         If true, prevents use of the AUTH PLAIN command. \n         false \n         true or false \n     \n     \n         mail.smtp.auth.digest-md5.disable \n         If true, prevents use of the AUTH DIGEST-MD5 command. \n         false \n         true or false \n     \n     \n         mail.smtp.auth.ntlm.disable \n         If true, prevents use of the AUTH NTLM command \n         false \n         true or false \n     \n     \n         mail.smtp.auth.ntlm.domain \n         The NTLM authentication domain. \n         None \n         Valid NTLM authentication domain name \n     \n     \n         mail.smtp.auth.ntlm.flags \n         NTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details. \n         None \n         Valid NTLM protocol-specific flags. \n     \n     \n         mail.smtp.dsn.notify \n         The NOTIFY option to the RCPT command. \n         None \n         Either NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas). \n     \n     \n         mail.smtp.dsn.ret \n         The RET option to the MAIL command. \n         None \n         Either FULL or HDRS. \n     \n     \n         mail.smtp.sendpartial \n         If set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address. \n         false \n         true or false \n     \n     \n         mail.smtp.sasl.enable \n         If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. \n         false \n         true or false \n     \n     \n         mail.smtp.sasl.mechanisms \n         A space or comma separated list of SASL mechanism names to try to use. \n         None \n         \n     \n     \n         mail.smtp.sasl.authorizationid \n         The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. \n         username \n         Valid ID \n     \n     \n         mail.smtp.sasl.realm \n         The realm to use with DIGEST-MD5 authentication. \n         None \n         \n     \n     \n         mail.smtp.quitwait \n         If set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command. \n         false \n         true or false \n     \n     \n         mail.smtp.reportsuccess \n         If set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful. \n         false \n         true or false \n     \n     \n         mail.smtp.socketFactory \n         If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets. \n         None \n         Socket Factory \n     \n     \n         mail.smtp.socketFactory.class \n         If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets. \n         None \n         \n     \n     \n         mail.smtp.socketFactory.fallback \n         If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. \n         true \n         true or false \n     \n     \n         mail.smtp.socketFactory.port \n         Specifies the port to connect to when using the specified socket factory \n         25 \n         Valid port number \n     \n     \n         mail.smtp.ssl.protocols \n         Specifies the SSL protocols that will be enabled for SSL connections. \n         None \n         The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. \n     \n     \n         mail.smtp.starttls.enable \n         If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. \n         false \n         true or false \n     \n     \n         mail.smtp.starttls.required \n         If true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail. \n         false \n         true or false \n     \n     \n         mail.smtp.socks.host \n         Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. \n         None \n         \n     \n     \n         mail.smtp.socks.port \n         Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. \n         1080 \n         valid port number \n     \n     \n         mail.smtp.auth.ntlm.disable \n         If true, prevents use of the AUTH NTLM command \n         false \n         true or false \n     \n     \n         mail.smtp.mailextension \n         Extension string to append to the MAIL command. \n         None \n         \n     \n     \n         mail.smtp.userset \n         If set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue. \n         false \n         true or false \n       Examples  EXAMPLE 1  @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string);  Following example illustrates how to publish events using the email sinkusing mandatory parameters. As in the example, it publishes events come from the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection.  EXAMPLE 2  @sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string);  Following example illustrates how to configure the query parameters and system parameters in the deployment ymal file. Corresponding parameters need to be configure under name:'email' and namespace:'sink' as follows siddhi: extensions: - extension: name:'email' namespace:'sink' properties: username:sender.account address:sender.account@gmail.com address:sender.account@gmail.com As in the example, it publishes events comefrom the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection.  EXAMPLE 3  @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream fooStream (name string, age int, country string);  Following example illustrates how to publish events using the email sink. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given  to , cc  and  bcc  recipients using a secure connection.  name  in the  subject  attribute will be the value of the  name  parameter in the corresponding output event", 
            "title": "email (Sink)"
        }, 
        {
            "location": "/api/1.0.12/#source", 
            "text": "", 
            "title": "Source"
        }, 
        {
            "location": "/api/1.0.12/#email-source", 
            "text": "Email source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store ,  https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters).  Syntax  @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...)))  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         username \n         user name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account. \n         \n         STRING \n         No \n         No \n     \n     \n         password \n         password of the email account \n         \n         STRING \n         No \n         No \n     \n     \n         store \n         Store type that used to receive emails. it can be either imap or pop3. \n         imap \n         STRING \n         Yes \n         No \n     \n     \n         host \n         Host name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable. \n         If store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'. \n         STRING \n         Yes \n         No \n     \n     \n         port \n         The port which is used to create the connection. \n         '993' the default value is valid only if store is imap and ssl enable \n         INT \n         Yes \n         No \n     \n     \n         folder \n         Name of the folder to fetch email. \n         INBOX \n         STRING \n         Yes \n         No \n     \n     \n         search.term \n         Option which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol. \n         None \n         STRING \n         Yes \n         No \n     \n     \n         polling.interval \n         Interval that email source should poll the account to check for new mails arrivals in seconds. \n         600 \n         LONG \n         Yes \n         No \n     \n     \n         action.after.processed \n         Action that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE \n         NONE \n         STRING \n         Yes \n         No \n     \n     \n         folder.to.move \n         The name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move. \n         \n         STRING \n         No \n         No \n     \n     \n         content.type \n         Content type of the email. It can be either 'text/plain' or 'text/html.' \n         text/plain \n         STRING \n         Yes \n         No \n     \n     \n         ssl.enable \n         If it is 'true' then use a secure port to establish the connection. The possible values are 'true or false. \n         true \n         BOOL \n         Yes \n         No \n       System Parameters  \n     \n         Name \n         Description \n         Default Value \n         Possible Parameters \n     \n     \n         mail.imap.partialfetch \n         Controls whether the IMAP partial-fetch capability should be used \n         true \n         true or false \n     \n     \n         mail.imap.fetchsize \n         Partial fetch size in bytes. \n         16K \n         value in bytes \n     \n     \n         mail.imap.peek \n         If set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage. \n         false \n         true or false \n     \n     \n         mail.imap.connectiontimeout \n         Socket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket. \n         infinity timeout \n         Any Integer value \n     \n     \n         mail.imap.timeout \n         Socket read timeout value in milliseconds. This timeout is implemented by java.net.Socket. \n         infinity timeout \n         Any Integer value \n     \n     \n         mail.imap.writetimeout \n         Socket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection. \n         infinity timeout \n         Any Integer value \n     \n     \n         mail.imap.statuscachetimeout \n         Timeout value in milliseconds for cache of STATUS command response. \n         1000ms \n         Time out in miliseconds \n     \n     \n         mail.imap.appendbuffersize \n         Maximum size of a message to buffer in memory when appending to an IMAP folder. \n         None \n         Any Integer value \n     \n     \n         mail.imap.connectionpoolsize \n         Maximum number of available connections in the connection pool. \n         1 \n         Any Integer value \n     \n     \n         mail.imap.connectionpooltimeout \n         Timeout value in milliseconds for connection pool connections.  \n         45000ms \n         Any Integer \n     \n     \n         mail.imap.separatestoreconnection \n         Flag to indicate whether to use a dedicated store connection for store commands. \n         true \n         true or false \n     \n     \n         mail.imap.auth.login.disable \n         If true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command. \n         false \n         true or false \n     \n     \n         mail.imap.auth.plain.disable \n         If true, prevents use of the AUTHENTICATE PLAIN command. \n         false \n         true or false \n     \n     \n         mail.imap.auth.ntlm.disable \n         If true, prevents use of the AUTHENTICATE NTLM command. \n         false \n         true or false \n     \n     \n         mail.imap.proxyauth.user \n         If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property. \n         None \n         Valid string value \n     \n     \n         mail.imap.localaddress \n         Local address (host name) to bind to when creating the IMAP socket. \n         Defaults to the address picked by the Socket class. \n         Valid string value \n     \n     \n         mail.imap.localport \n         Local port number to bind to when creating the IMAP socket. \n         Defaults to the port number picked by the Socket class. \n         Valid String value \n     \n     \n         mail.imap.sasl.enable \n         If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. \n         false \n         true or false \n     \n     \n         mail.imap.sasl.mechanisms \n         A space or comma separated list of SASL mechanism names to try to use. \n         None \n         Valid string value \n     \n     \n         mail.imap.sasl.authorizationid \n         The authorization ID to use in the SASL authentication. \n         If not set, the authentication ID (user name) is used. \n         Valid string value \n     \n     \n         mail.imap.sasl.realm \n         The realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5. \n         None \n         Valid string value \n     \n     \n         mail.imap.auth.ntlm.domain \n         The NTLM authentication domain. \n         None \n         Valid string value \n     \n     \n         The NTLM authentication domain. \n         NTLM protocol-specific flags. \n         None \n         Valid integer value \n     \n     \n         mail.imap.socketFactory \n         If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets. \n         None \n         Valid SocketFactory \n     \n     \n         mail.imap.socketFactory.class \n         If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets. \n         None \n         Valid string \n     \n     \n         mail.imap.socketFactory.fallback \n         If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class.  \n         true \n         true or false \n     \n     \n         mail.imap.socketFactory.port \n         Specifies the port to connect to when using the specified socket factory. Default port is used when not set. \n         143 \n         Valid Integer \n     \n     \n         mail.imap.ssl.checkserveridentity \n         If set to true, check the server identity as specified by RFC 2595. \n         false \n         true or false \n     \n     \n         mail.imap.ssl.trust \n         If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. \n         \n         Valid String \n     \n     \n         mail.imap.ssl.socketFactory \n         If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets. \n         None \n         SSL Socket Factory \n     \n     \n         mail.imap.ssl.socketFactory.class \n         If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets. \n         None \n         Valid String \n     \n     \n         mail.imap.ssl.socketFactory.port \n         Specifies the port to connect to when using the specified socket factory. \n         the default port will be used-993 \n         valid port number \n     \n     \n         mail.imap.ssl.protocols \n         Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. \n         None \n         Valid string \n     \n     \n         mail.imap.starttls.enable \n         If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. \n         false \n         true or false \n     \n     \n         mail.imap.socks.host \n         Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. \n         None \n         Valid String \n     \n     \n         mail.imap.socks.port \n         Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. \n         1080 \n         Valid String \n     \n     \n         mail.imap.minidletime \n         This property sets the delay in milliseconds. \n         10 milliseconds \n         time in seconds (Integer) \n     \n     \n         mail.imap.enableimapevents \n         Enable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string. \n         false \n         true or false \n     \n     \n         mail.imap.folder.class \n         Class name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store) \n         None \n         Valid String \n     \n     \n         mail.pop3.connectiontimeout \n         Socket connection timeout value in milliseconds. \n         Infinite timeout \n         Integer value \n     \n     \n         mail.pop3.timeout \n         Socket I/O timeout value in milliseconds.  \n         Infinite timeout \n         Integer value \n     \n     \n         mail.pop3.message.class \n         Class name of a subclass of com.sun.mail.pop3.POP3Message \n         None \n         Valid String \n     \n     \n         mail.pop3.localaddress \n         Local address (host name) to bind to when creating the POP3 socket. \n         Defaults to the address picked by the Socket class. \n         Valid String \n     \n     \n         mail.pop3.localport \n         Local port number to bind to when creating the POP3 socket. \n         Defaults to the port number picked by the Socket class. \n         Valid port number \n     \n     \n         mail.pop3.apop.enable \n         If set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password. \n         false \n         true or false \n     \n     \n         mail.pop3.socketFactory \n         If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets. \n         None \n         Socket Factory \n     \n     \n         mail.pop3.socketFactory.class \n         If set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets. \n         None \n         Valid String \n     \n     \n         mail.pop3.socketFactory.fallback \n         If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. \n         false \n         true or false \n     \n     \n         mail.pop3.socketFactory.port \n         Specifies the port to connect to when using the specified socket factory. \n         Default port \n         Valid port number \n     \n     \n         mail.pop3.ssl.checkserveridentity \n         If set to true, check the server identity as specified by RFC 2595.  \n         false \n         true or false \n     \n     \n         mail.pop3.ssl.trust \n         If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. \n         \n         Valid String \n     \n     \n         mail.pop3.ssl.socketFactory \n         If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. \n         None \n         SSL Socket Factory \n     \n     \n         mail.pop3.ssl.checkserveridentity \n         If set to true, check the server identity as specified by RFC 2595.  \n         false \n         true or false \n     \n     \n         mail.pop3.ssl.trust \n          If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.  \n         trust depends on the certificate the server presents. \n         Valid String \n     \n     \n         mail.pop3.ssl.socketFactory \n         If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. \n         None \n         SSL Socket Factory \n     \n     \n         mail.pop3.ssl.socketFactory.class \n         If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets.  \n         None \n         Valid String \n     \n     \n         mail.pop3.ssl.socketFactory.p \n         Specifies the port to connect to when using the specified socket factory. \n         995 \n         Valid Integer \n     \n     \n         mail.pop3.ssl.protocols \n         Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. \n         None \n         Valid String \n     \n     \n         mail.pop3.starttls.enable \n         If true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands \n         false \n         true or false \n     \n     \n         mail.pop3.starttls.required \n         If true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail. \n         false \n         true or false \n     \n     \n         mail.pop3.socks.host \n         Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. \n         None \n         Valid String \n     \n     \n         mail.pop3.socks.port \n         Specifies the port number for the SOCKS5 proxy server. \n         None \n         Valid String \n     \n     \n         mail.pop3.disabletop \n         If set to true, the POP3 TOP command will not be used to fetch message headers.  \n         false \n         true or false \n     \n     \n         mail.pop3.forgettopheaders \n         If set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command. \n         false \n         true or false \n     \n     \n         mail.pop3.filecache.enable \n         If set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. \n         false \n         true or false \n     \n     \n         mail.pop3.filecache.dir \n         If the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files. \n         None \n         Valid String \n     \n     \n         mail.pop3.cachewriteto \n         Controls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached. \n         false \n         true or false \n     \n     \n         mail.pop3.keepmessagecontent \n         If this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method).  \n         false \n         true or false \n       Examples  EXAMPLE 1  @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string);  Following example illustrates how to receive events in  xml  format using email source. In this example only mandatory parameters are defined in the  in the stream definition. For other parameters default values are taken. since search term is not defined, it poll and take all new messages in the inbox folder  EXAMPLE 2  @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string);  Following example illustrates how to receive events in  xml  format using email source. The email source polls the mail account in every 500 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term (email messages which come from from.account@. host name , contains  cc.account  in cc receipts list, and  Stream Processor  words in the mail subject) In the example, action after processes is defined as the  DELETE , so that after processing the event, corresponding mail is deleted from the mail folder.", 
            "title": "email (Source)"
        }, 
        {
            "location": "/api/1.0.11/", 
            "text": "API Docs - v1.0.11\n\n\nSink\n\n\nemail \n(Sink)\n\n\nThe email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken for the optional parameters. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters). Further, some email account required to enable 'access to less secure apps' option (for gmail account you can enable it via https://myaccount.google.com/lesssecureapps).\n\n\n\nSyntax\n\n\n@sink(type=\nemail\n, username=\nSTRING\n, address=\nSTRING\n, password=\nSTRING\n, host=\nSTRING\n, port=\nINT\n, ssl.enable=\nBOOL\n, auth=\nBOOL\n, content.type=\nSTRING\n, subject=\nSTRING\n, to=\nSTRING\n, cc=\nSTRING\n, bcc=\nSTRING\n, @map(...)))\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \nusername\n\n        \nUsername of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com).\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \naddress\n\n        \nAddress of the email account which is used to send emails.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \npassword\n\n        \nPassword of the email account.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \nhost\n\n        \nHost name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account.\n\n        \nsmtp.gmail.com\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nport\n\n        \nThe port which is used to create the connection.\n\n        \n'465' the default value is only valid is ssl enable\n\n        \nINT\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nssl.enable\n\n        \nWhether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection.\n\n        \ntrue\n\n        \nBOOL\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nauth\n\n        \nWhether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command.\n\n        \ntrue\n\n        \nBOOL\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \ncontent.type\n\n        \nContent type can be either 'text/plain' or 'text/html'.\n\n        \ntext/plain\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nsubject\n\n        \nSubject of the mail which has to be send.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nYes\n\n    \n\n    \n\n        \nto\n\n        \nAddress of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nYes\n\n    \n\n    \n\n        \ncc\n\n        \nAddress of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list.\n\n        \nNone\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nbcc\n\n        \nAddress of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list.\n\n        \nNone\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n\n\n\nSystem Parameters\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Parameters\n\n    \n\n    \n\n        \nmail.smtp.ssl.trust\n\n        \nIf set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to \"\n\", all hosts are trusted. If set to a whitespace separated list of hosts, those hosts are trusted. Otherwise, trust depends on the certificate the server presents.\n\n        \n\n        \nString\n\n    \n\n    \n\n        \nmail.smtp.connectiontimeout\n\n        \nSocket connection timeout value in milliseconds. \n\n        \ninfinite timeout\n\n        \nAny Integer\n\n    \n\n    \n\n        \nmail.smtp.timeout\n\n        \nSocket I/O timeout value in milliseconds. \n\n        \ninfinite timeout\n\n        \nAny Integer\n\n    \n\n    \n\n        \nmail.smtp.from\n\n        \nEmail address to use for SMTP MAIL command. This sets the envelope return address.\n\n        \nDefaults to msg.getFrom() or InternetAddress.getLocalAddress().\n\n        \nValid email address\n\n    \n\n    \n\n        \nmail.smtp.localport\n\n        \nLocal port number to bind to when creating the SMTP socket.\n\n        \nDefaults to the port number picked by the Socket class.\n\n        \nAny Integer\n\n    \n\n    \n\n        \nmail.smtp.ehlo\n\n        \nIf false, do not attempt to sign on with the EHLO command.\n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.login.disable\n\n        \nIf true, prevents use of the AUTH LOGIN command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.plain.disable\n\n        \nIf true, prevents use of the AUTH PLAIN command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.digest-md5.disable\n\n        \nIf true, prevents use of the AUTH DIGEST-MD5 command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.ntlm.disable\n\n        \nIf true, prevents use of the AUTH NTLM command\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.ntlm.domain\n\n        \nThe NTLM authentication domain.\n\n        \nNone\n\n        \nValid NTLM authentication domain name\n\n    \n\n    \n\n        \nmail.smtp.auth.ntlm.flags\n\n        \nNTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details.\n\n        \nNone\n\n        \nValid NTLM protocol-specific flags.\n\n    \n\n    \n\n        \nmail.smtp.dsn.notify\n\n        \nThe NOTIFY option to the RCPT command.\n\n        \nNone\n\n        \nEither NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas).\n\n    \n\n    \n\n        \nmail.smtp.dsn.ret\n\n        \nThe RET option to the MAIL command.\n\n        \nNone\n\n        \nEither FULL or HDRS.\n\n    \n\n    \n\n        \nmail.smtp.sendpartial\n\n        \nIf set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.sasl.enable\n\n        \nIf set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.sasl.mechanisms\n\n        \nA space or comma separated list of SASL mechanism names to try to use.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.sasl.authorizationid\n\n        \nThe authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used.\n\n        \nusername\n\n        \nValid ID\n\n    \n\n    \n\n        \nmail.smtp.sasl.realm\n\n        \nThe realm to use with DIGEST-MD5 authentication.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.quitwait\n\n        \nIf set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.reportsuccess\n\n        \nIf set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.socketFactory\n\n        \nIf set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets.\n\n        \nNone\n\n        \nSocket Factory\n\n    \n\n    \n\n        \nmail.smtp.socketFactory.class\n\n        \nIf set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.socketFactory.fallback\n\n        \nIf set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class.\n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.socketFactory.port\n\n        \nSpecifies the port to connect to when using the specified socket factory\n\n        \n25\n\n        \nValid port number\n\n    \n\n    \n\n        \nmail.smtp.ssl.protocols\n\n        \nSpecifies the SSL protocols that will be enabled for SSL connections.\n\n        \nNone\n\n        \nThe property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method.\n\n    \n\n    \n\n        \nmail.smtp.starttls.enable\n\n        \nIf true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.starttls.required\n\n        \nIf true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.socks.host\n\n        \nSpecifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.socks.port\n\n        \nSpecifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080.\n\n        \n1080\n\n        \nvalid port number\n\n    \n\n    \n\n        \nmail.smtp.auth.ntlm.disable\n\n        \nIf true, prevents use of the AUTH NTLM command\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.mailextension\n\n        \nExtension string to append to the MAIL command.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.userset\n\n        \nIf set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\n@sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string);\n\n\n\n\nFollowing example illustrates how to publish events using the email sinkusing mandatory parameters. As in the example, it publishes events come from the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection.\n\n\n\nEXAMPLE 2\n\n\n@sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string);\n\n\n\n\nFollowing example illustrates how to configure the query parameters and system parameters in the deployment ymal file.\nCorresponding parameters need to be configure under name:'email' and namespace:'sink' as follows\nsiddhi:\nextensions:\n-\nextension:\nname:'email'\nnamespace:'sink'\nproperties:\nusername:sender.account\naddress:sender.account@gmail.com\naddress:sender.account@gmail.com\nAs in the example, it publishes events comefrom the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection.\n\n\n\nEXAMPLE 3\n\n\n@sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream fooStream (name string, age int, country string);\n\n\n\n\nFollowing example illustrates how to publish events using the email sink. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given \nto\n,\ncc\n and \nbcc\n recipients using a secure connection. \nname\n in the \nsubject\n attribute will be the value of the \nname\n parameter in the corresponding output event\n\n\n\nSource\n\n\nemail \n(Source)\n\n\nEmail source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store ,  https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters).\n\n\n\nSyntax\n\n\n@source(type=\nemail\n, username=\nSTRING\n, password=\nSTRING\n, store=\nSTRING\n, host=\nSTRING\n, port=\nINT\n, folder=\nSTRING\n, search.term=\nSTRING\n, polling.interval=\nLONG\n, action.after.processed=\nSTRING\n, folder.to.move=\nSTRING\n, content.type=\nSTRING\n, ssl.enable=\nBOOL\n, @map(...)))\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \nusername\n\n        \nuser name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \npassword\n\n        \npassword of the email account\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \nstore\n\n        \nStore type that used to receive emails. it can be either imap or pop3.\n\n        \nimap\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nhost\n\n        \nHost name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable.\n\n        \nIf store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'.\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nport\n\n        \nThe port which is used to create the connection.\n\n        \n'993' the default value is valid only if store is imap and ssl enable\n\n        \nINT\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nfolder\n\n        \nName of the folder to fetch email.\n\n        \nINBOX\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nsearch.term\n\n        \nOption which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol.\n\n        \nNone\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \npolling.interval\n\n        \nInterval that email source should poll the account to check for new mails arrivals in seconds.\n\n        \n600\n\n        \nLONG\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \naction.after.processed\n\n        \nAction that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE\n\n        \nNONE\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nfolder.to.move\n\n        \nThe name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \ncontent.type\n\n        \nContent type of the email. It can be either 'text/plain' or 'text/html.'\n\n        \ntext/plain\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nssl.enable\n\n        \nIf it is 'true' then use a secure port to establish the connection. The possible values are 'true or false.\n\n        \ntrue\n\n        \nBOOL\n\n        \nYes\n\n        \nNo\n\n    \n\n\n\n\nSystem Parameters\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Parameters\n\n    \n\n    \n\n        \nmail.imap.partialfetch\n\n        \nControls whether the IMAP partial-fetch capability should be used\n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.fetchsize\n\n        \nPartial fetch size in bytes.\n\n        \n16K\n\n        \nvalue in bytes\n\n    \n\n    \n\n        \nmail.imap.peek\n\n        \nIf set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.connectiontimeout\n\n        \nSocket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket.\n\n        \ninfinity timeout\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.timeout\n\n        \nSocket read timeout value in milliseconds. This timeout is implemented by java.net.Socket.\n\n        \ninfinity timeout\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.writetimeout\n\n        \nSocket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection.\n\n        \ninfinity timeout\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.statuscachetimeout\n\n        \nTimeout value in milliseconds for cache of STATUS command response.\n\n        \n1000ms\n\n        \nTime out in miliseconds\n\n    \n\n    \n\n        \nmail.imap.appendbuffersize\n\n        \nMaximum size of a message to buffer in memory when appending to an IMAP folder.\n\n        \nNone\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.connectionpoolsize\n\n        \nMaximum number of available connections in the connection pool.\n\n        \n1\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.connectionpooltimeout\n\n        \nTimeout value in milliseconds for connection pool connections. \n\n        \n45000ms\n\n        \nAny Integer\n\n    \n\n    \n\n        \nmail.imap.separatestoreconnection\n\n        \nFlag to indicate whether to use a dedicated store connection for store commands.\n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.auth.login.disable\n\n        \nIf true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.auth.plain.disable\n\n        \nIf true, prevents use of the AUTHENTICATE PLAIN command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.auth.ntlm.disable\n\n        \nIf true, prevents use of the AUTHENTICATE NTLM command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.proxyauth.user\n\n        \nIf the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property.\n\n        \nNone\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.localaddress\n\n        \nLocal address (host name) to bind to when creating the IMAP socket.\n\n        \nDefaults to the address picked by the Socket class.\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.localport\n\n        \nLocal port number to bind to when creating the IMAP socket.\n\n        \nDefaults to the port number picked by the Socket class.\n\n        \nValid String value\n\n    \n\n    \n\n        \nmail.imap.sasl.enable\n\n        \nIf set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.sasl.mechanisms\n\n        \nA space or comma separated list of SASL mechanism names to try to use.\n\n        \nNone\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.sasl.authorizationid\n\n        \nThe authorization ID to use in the SASL authentication.\n\n        \nIf not set, the authentication ID (user name) is used.\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.sasl.realm\n\n        \nThe realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5.\n\n        \nNone\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.auth.ntlm.domain\n\n        \nThe NTLM authentication domain.\n\n        \nNone\n\n        \nValid string value\n\n    \n\n    \n\n        \nThe NTLM authentication domain.\n\n        \nNTLM protocol-specific flags.\n\n        \nNone\n\n        \nValid integer value\n\n    \n\n    \n\n        \nmail.imap.socketFactory\n\n        \nIf set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets.\n\n        \nNone\n\n        \nValid SocketFactory\n\n    \n\n    \n\n        \nmail.imap.socketFactory.class\n\n        \nIf set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets.\n\n        \nNone\n\n        \nValid string\n\n    \n\n    \n\n        \nmail.imap.socketFactory.fallback\n\n        \nIf set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. \n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.socketFactory.port\n\n        \nSpecifies the port to connect to when using the specified socket factory. Default port is used when not set.\n\n        \n143\n\n        \nValid Integer\n\n    \n\n    \n\n        \nmail.imap.ssl.checkserveridentity\n\n        \nIf set to true, check the server identity as specified by RFC 2595.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.ssl.trust\n\n        \nIf set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '\n', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents.\n\n        \n\n        \nValid String\n\n    \n\n    \n\n        \nmail.imap.ssl.socketFactory\n\n        \nIf set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets.\n\n        \nNone\n\n        \nSSL Socket Factory\n\n    \n\n    \n\n        \nmail.imap.ssl.socketFactory.class\n\n        \nIf set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.imap.ssl.socketFactory.port\n\n        \nSpecifies the port to connect to when using the specified socket factory.\n\n        \nthe default port will be used-993\n\n        \nvalid port number\n\n    \n\n    \n\n        \nmail.imap.ssl.protocols\n\n        \nSpecifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method.\n\n        \nNone\n\n        \nValid string\n\n    \n\n    \n\n        \nmail.imap.starttls.enable\n\n        \nIf true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.socks.host\n\n        \nSpecifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.imap.socks.port\n\n        \nSpecifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080.\n\n        \n1080\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.imap.minidletime\n\n        \nThis property sets the delay in milliseconds.\n\n        \n10 milliseconds\n\n        \ntime in seconds (Integer)\n\n    \n\n    \n\n        \nmail.imap.enableimapevents\n\n        \nEnable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.folder.class\n\n        \nClass name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store)\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.connectiontimeout\n\n        \nSocket connection timeout value in milliseconds.\n\n        \nInfinite timeout\n\n        \nInteger value\n\n    \n\n    \n\n        \nmail.pop3.timeout\n\n        \nSocket I/O timeout value in milliseconds. \n\n        \nInfinite timeout\n\n        \nInteger value\n\n    \n\n    \n\n        \nmail.pop3.message.class\n\n        \nClass name of a subclass of com.sun.mail.pop3.POP3Message\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.localaddress\n\n        \nLocal address (host name) to bind to when creating the POP3 socket.\n\n        \nDefaults to the address picked by the Socket class.\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.localport\n\n        \nLocal port number to bind to when creating the POP3 socket.\n\n        \nDefaults to the port number picked by the Socket class.\n\n        \nValid port number\n\n    \n\n    \n\n        \nmail.pop3.apop.enable\n\n        \nIf set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.socketFactory\n\n        \nIf set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets.\n\n        \nNone\n\n        \nSocket Factory\n\n    \n\n    \n\n        \nmail.pop3.socketFactory.class\n\n        \nIf set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.socketFactory.fallback\n\n        \nIf set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.socketFactory.port\n\n        \nSpecifies the port to connect to when using the specified socket factory.\n\n        \nDefault port\n\n        \nValid port number\n\n    \n\n    \n\n        \nmail.pop3.ssl.checkserveridentity\n\n        \nIf set to true, check the server identity as specified by RFC 2595. \n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.ssl.trust\n\n        \nIf set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to '\n', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents.\n\n        \n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.ssl.socketFactory\n\n        \nIf set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets.\n\n        \nNone\n\n        \nSSL Socket Factory\n\n    \n\n    \n\n        \nmail.pop3.ssl.checkserveridentity\n\n        \nIf set to true, check the server identity as specified by RFC 2595. \n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.ssl.trust\n\n        \n If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted. \n\n        \ntrust depends on the certificate the server presents.\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.ssl.socketFactory\n\n        \nIf set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets.\n\n        \nNone\n\n        \nSSL Socket Factory\n\n    \n\n    \n\n        \nmail.pop3.ssl.socketFactory.class\n\n        \nIf set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets. \n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.ssl.socketFactory.p\n\n        \nSpecifies the port to connect to when using the specified socket factory.\n\n        \n995\n\n        \nValid Integer\n\n    \n\n    \n\n        \nmail.pop3.ssl.protocols\n\n        \nSpecifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.starttls.enable\n\n        \nIf true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.starttls.required\n\n        \nIf true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.socks.host\n\n        \nSpecifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.socks.port\n\n        \nSpecifies the port number for the SOCKS5 proxy server.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.disabletop\n\n        \nIf set to true, the POP3 TOP command will not be used to fetch message headers. \n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.forgettopheaders\n\n        \nIf set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.filecache.enable\n\n        \nIf set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.filecache.dir\n\n        \nIf the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.cachewriteto\n\n        \nControls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.keepmessagecontent\n\n        \nIf this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method). \n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\n@source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string);\n\n\n\n\nFollowing example illustrates how to receive events in \nxml\n format using email source. In this example only mandatory parameters are defined in the  in the stream definition. For other parameters default values are taken. since search term is not defined, it poll and take all new messages in the inbox folder\n\n\n\nEXAMPLE 2\n\n\n@source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string);\n\n\n\n\nFollowing example illustrates how to receive events in \nxml\n format using email source. The email source polls the mail account in every 500 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term (email messages which come from\nfrom.account@.\nhost name\n, contains \ncc.account\n in cc receipts list, and \nStream Processor\n words in the mail subject) In the example, action after processes is defined as the \nDELETE\n, so that after processing the event, corresponding mail is deleted from the mail folder.", 
            "title": "1.0.11"
        }, 
        {
            "location": "/api/1.0.11/#api-docs-v1011", 
            "text": "", 
            "title": "API Docs - v1.0.11"
        }, 
        {
            "location": "/api/1.0.11/#sink", 
            "text": "", 
            "title": "Sink"
        }, 
        {
            "location": "/api/1.0.11/#email-sink", 
            "text": "The email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken for the optional parameters. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters). Further, some email account required to enable 'access to less secure apps' option (for gmail account you can enable it via https://myaccount.google.com/lesssecureapps).  Syntax  @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , @map(...)))  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         username \n         Username of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com). \n         \n         STRING \n         No \n         No \n     \n     \n         address \n         Address of the email account which is used to send emails. \n         \n         STRING \n         No \n         No \n     \n     \n         password \n         Password of the email account. \n         \n         STRING \n         No \n         No \n     \n     \n         host \n         Host name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account. \n         smtp.gmail.com \n         STRING \n         Yes \n         No \n     \n     \n         port \n         The port which is used to create the connection. \n         '465' the default value is only valid is ssl enable \n         INT \n         Yes \n         No \n     \n     \n         ssl.enable \n         Whether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection. \n         true \n         BOOL \n         Yes \n         No \n     \n     \n         auth \n         Whether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command. \n         true \n         BOOL \n         Yes \n         No \n     \n     \n         content.type \n         Content type can be either 'text/plain' or 'text/html'. \n         text/plain \n         STRING \n         Yes \n         No \n     \n     \n         subject \n         Subject of the mail which has to be send. \n         \n         STRING \n         No \n         Yes \n     \n     \n         to \n         Address of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list. \n         \n         STRING \n         No \n         Yes \n     \n     \n         cc \n         Address of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list. \n         None \n         STRING \n         Yes \n         No \n     \n     \n         bcc \n         Address of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list. \n         None \n         STRING \n         Yes \n         No \n       System Parameters  \n     \n         Name \n         Description \n         Default Value \n         Possible Parameters \n     \n     \n         mail.smtp.ssl.trust \n         If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to \" \", all hosts are trusted. If set to a whitespace separated list of hosts, those hosts are trusted. Otherwise, trust depends on the certificate the server presents. \n         \n         String \n     \n     \n         mail.smtp.connectiontimeout \n         Socket connection timeout value in milliseconds.  \n         infinite timeout \n         Any Integer \n     \n     \n         mail.smtp.timeout \n         Socket I/O timeout value in milliseconds.  \n         infinite timeout \n         Any Integer \n     \n     \n         mail.smtp.from \n         Email address to use for SMTP MAIL command. This sets the envelope return address. \n         Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). \n         Valid email address \n     \n     \n         mail.smtp.localport \n         Local port number to bind to when creating the SMTP socket. \n         Defaults to the port number picked by the Socket class. \n         Any Integer \n     \n     \n         mail.smtp.ehlo \n         If false, do not attempt to sign on with the EHLO command. \n         true \n         true or false \n     \n     \n         mail.smtp.auth.login.disable \n         If true, prevents use of the AUTH LOGIN command. \n         false \n         true or false \n     \n     \n         mail.smtp.auth.plain.disable \n         If true, prevents use of the AUTH PLAIN command. \n         false \n         true or false \n     \n     \n         mail.smtp.auth.digest-md5.disable \n         If true, prevents use of the AUTH DIGEST-MD5 command. \n         false \n         true or false \n     \n     \n         mail.smtp.auth.ntlm.disable \n         If true, prevents use of the AUTH NTLM command \n         false \n         true or false \n     \n     \n         mail.smtp.auth.ntlm.domain \n         The NTLM authentication domain. \n         None \n         Valid NTLM authentication domain name \n     \n     \n         mail.smtp.auth.ntlm.flags \n         NTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details. \n         None \n         Valid NTLM protocol-specific flags. \n     \n     \n         mail.smtp.dsn.notify \n         The NOTIFY option to the RCPT command. \n         None \n         Either NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas). \n     \n     \n         mail.smtp.dsn.ret \n         The RET option to the MAIL command. \n         None \n         Either FULL or HDRS. \n     \n     \n         mail.smtp.sendpartial \n         If set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address. \n         false \n         true or false \n     \n     \n         mail.smtp.sasl.enable \n         If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. \n         false \n         true or false \n     \n     \n         mail.smtp.sasl.mechanisms \n         A space or comma separated list of SASL mechanism names to try to use. \n         None \n         \n     \n     \n         mail.smtp.sasl.authorizationid \n         The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. \n         username \n         Valid ID \n     \n     \n         mail.smtp.sasl.realm \n         The realm to use with DIGEST-MD5 authentication. \n         None \n         \n     \n     \n         mail.smtp.quitwait \n         If set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command. \n         false \n         true or false \n     \n     \n         mail.smtp.reportsuccess \n         If set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful. \n         false \n         true or false \n     \n     \n         mail.smtp.socketFactory \n         If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets. \n         None \n         Socket Factory \n     \n     \n         mail.smtp.socketFactory.class \n         If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets. \n         None \n         \n     \n     \n         mail.smtp.socketFactory.fallback \n         If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. \n         true \n         true or false \n     \n     \n         mail.smtp.socketFactory.port \n         Specifies the port to connect to when using the specified socket factory \n         25 \n         Valid port number \n     \n     \n         mail.smtp.ssl.protocols \n         Specifies the SSL protocols that will be enabled for SSL connections. \n         None \n         The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. \n     \n     \n         mail.smtp.starttls.enable \n         If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. \n         false \n         true or false \n     \n     \n         mail.smtp.starttls.required \n         If true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail. \n         false \n         true or false \n     \n     \n         mail.smtp.socks.host \n         Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. \n         None \n         \n     \n     \n         mail.smtp.socks.port \n         Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. \n         1080 \n         valid port number \n     \n     \n         mail.smtp.auth.ntlm.disable \n         If true, prevents use of the AUTH NTLM command \n         false \n         true or false \n     \n     \n         mail.smtp.mailextension \n         Extension string to append to the MAIL command. \n         None \n         \n     \n     \n         mail.smtp.userset \n         If set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue. \n         false \n         true or false \n       Examples  EXAMPLE 1  @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string);  Following example illustrates how to publish events using the email sinkusing mandatory parameters. As in the example, it publishes events come from the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection.  EXAMPLE 2  @sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string);  Following example illustrates how to configure the query parameters and system parameters in the deployment ymal file. Corresponding parameters need to be configure under name:'email' and namespace:'sink' as follows siddhi: extensions: - extension: name:'email' namespace:'sink' properties: username:sender.account address:sender.account@gmail.com address:sender.account@gmail.com As in the example, it publishes events comefrom the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection.  EXAMPLE 3  @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream fooStream (name string, age int, country string);  Following example illustrates how to publish events using the email sink. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given  to , cc  and  bcc  recipients using a secure connection.  name  in the  subject  attribute will be the value of the  name  parameter in the corresponding output event", 
            "title": "email (Sink)"
        }, 
        {
            "location": "/api/1.0.11/#source", 
            "text": "", 
            "title": "Source"
        }, 
        {
            "location": "/api/1.0.11/#email-source", 
            "text": "Email source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store ,  https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters).  Syntax  @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...)))  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         username \n         user name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account. \n         \n         STRING \n         No \n         No \n     \n     \n         password \n         password of the email account \n         \n         STRING \n         No \n         No \n     \n     \n         store \n         Store type that used to receive emails. it can be either imap or pop3. \n         imap \n         STRING \n         Yes \n         No \n     \n     \n         host \n         Host name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable. \n         If store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'. \n         STRING \n         Yes \n         No \n     \n     \n         port \n         The port which is used to create the connection. \n         '993' the default value is valid only if store is imap and ssl enable \n         INT \n         Yes \n         No \n     \n     \n         folder \n         Name of the folder to fetch email. \n         INBOX \n         STRING \n         Yes \n         No \n     \n     \n         search.term \n         Option which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol. \n         None \n         STRING \n         Yes \n         No \n     \n     \n         polling.interval \n         Interval that email source should poll the account to check for new mails arrivals in seconds. \n         600 \n         LONG \n         Yes \n         No \n     \n     \n         action.after.processed \n         Action that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE \n         NONE \n         STRING \n         Yes \n         No \n     \n     \n         folder.to.move \n         The name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move. \n         \n         STRING \n         No \n         No \n     \n     \n         content.type \n         Content type of the email. It can be either 'text/plain' or 'text/html.' \n         text/plain \n         STRING \n         Yes \n         No \n     \n     \n         ssl.enable \n         If it is 'true' then use a secure port to establish the connection. The possible values are 'true or false. \n         true \n         BOOL \n         Yes \n         No \n       System Parameters  \n     \n         Name \n         Description \n         Default Value \n         Possible Parameters \n     \n     \n         mail.imap.partialfetch \n         Controls whether the IMAP partial-fetch capability should be used \n         true \n         true or false \n     \n     \n         mail.imap.fetchsize \n         Partial fetch size in bytes. \n         16K \n         value in bytes \n     \n     \n         mail.imap.peek \n         If set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage. \n         false \n         true or false \n     \n     \n         mail.imap.connectiontimeout \n         Socket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket. \n         infinity timeout \n         Any Integer value \n     \n     \n         mail.imap.timeout \n         Socket read timeout value in milliseconds. This timeout is implemented by java.net.Socket. \n         infinity timeout \n         Any Integer value \n     \n     \n         mail.imap.writetimeout \n         Socket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection. \n         infinity timeout \n         Any Integer value \n     \n     \n         mail.imap.statuscachetimeout \n         Timeout value in milliseconds for cache of STATUS command response. \n         1000ms \n         Time out in miliseconds \n     \n     \n         mail.imap.appendbuffersize \n         Maximum size of a message to buffer in memory when appending to an IMAP folder. \n         None \n         Any Integer value \n     \n     \n         mail.imap.connectionpoolsize \n         Maximum number of available connections in the connection pool. \n         1 \n         Any Integer value \n     \n     \n         mail.imap.connectionpooltimeout \n         Timeout value in milliseconds for connection pool connections.  \n         45000ms \n         Any Integer \n     \n     \n         mail.imap.separatestoreconnection \n         Flag to indicate whether to use a dedicated store connection for store commands. \n         true \n         true or false \n     \n     \n         mail.imap.auth.login.disable \n         If true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command. \n         false \n         true or false \n     \n     \n         mail.imap.auth.plain.disable \n         If true, prevents use of the AUTHENTICATE PLAIN command. \n         false \n         true or false \n     \n     \n         mail.imap.auth.ntlm.disable \n         If true, prevents use of the AUTHENTICATE NTLM command. \n         false \n         true or false \n     \n     \n         mail.imap.proxyauth.user \n         If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property. \n         None \n         Valid string value \n     \n     \n         mail.imap.localaddress \n         Local address (host name) to bind to when creating the IMAP socket. \n         Defaults to the address picked by the Socket class. \n         Valid string value \n     \n     \n         mail.imap.localport \n         Local port number to bind to when creating the IMAP socket. \n         Defaults to the port number picked by the Socket class. \n         Valid String value \n     \n     \n         mail.imap.sasl.enable \n         If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. \n         false \n         true or false \n     \n     \n         mail.imap.sasl.mechanisms \n         A space or comma separated list of SASL mechanism names to try to use. \n         None \n         Valid string value \n     \n     \n         mail.imap.sasl.authorizationid \n         The authorization ID to use in the SASL authentication. \n         If not set, the authentication ID (user name) is used. \n         Valid string value \n     \n     \n         mail.imap.sasl.realm \n         The realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5. \n         None \n         Valid string value \n     \n     \n         mail.imap.auth.ntlm.domain \n         The NTLM authentication domain. \n         None \n         Valid string value \n     \n     \n         The NTLM authentication domain. \n         NTLM protocol-specific flags. \n         None \n         Valid integer value \n     \n     \n         mail.imap.socketFactory \n         If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets. \n         None \n         Valid SocketFactory \n     \n     \n         mail.imap.socketFactory.class \n         If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets. \n         None \n         Valid string \n     \n     \n         mail.imap.socketFactory.fallback \n         If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class.  \n         true \n         true or false \n     \n     \n         mail.imap.socketFactory.port \n         Specifies the port to connect to when using the specified socket factory. Default port is used when not set. \n         143 \n         Valid Integer \n     \n     \n         mail.imap.ssl.checkserveridentity \n         If set to true, check the server identity as specified by RFC 2595. \n         false \n         true or false \n     \n     \n         mail.imap.ssl.trust \n         If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. \n         \n         Valid String \n     \n     \n         mail.imap.ssl.socketFactory \n         If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets. \n         None \n         SSL Socket Factory \n     \n     \n         mail.imap.ssl.socketFactory.class \n         If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets. \n         None \n         Valid String \n     \n     \n         mail.imap.ssl.socketFactory.port \n         Specifies the port to connect to when using the specified socket factory. \n         the default port will be used-993 \n         valid port number \n     \n     \n         mail.imap.ssl.protocols \n         Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. \n         None \n         Valid string \n     \n     \n         mail.imap.starttls.enable \n         If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. \n         false \n         true or false \n     \n     \n         mail.imap.socks.host \n         Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. \n         None \n         Valid String \n     \n     \n         mail.imap.socks.port \n         Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. \n         1080 \n         Valid String \n     \n     \n         mail.imap.minidletime \n         This property sets the delay in milliseconds. \n         10 milliseconds \n         time in seconds (Integer) \n     \n     \n         mail.imap.enableimapevents \n         Enable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string. \n         false \n         true or false \n     \n     \n         mail.imap.folder.class \n         Class name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store) \n         None \n         Valid String \n     \n     \n         mail.pop3.connectiontimeout \n         Socket connection timeout value in milliseconds. \n         Infinite timeout \n         Integer value \n     \n     \n         mail.pop3.timeout \n         Socket I/O timeout value in milliseconds.  \n         Infinite timeout \n         Integer value \n     \n     \n         mail.pop3.message.class \n         Class name of a subclass of com.sun.mail.pop3.POP3Message \n         None \n         Valid String \n     \n     \n         mail.pop3.localaddress \n         Local address (host name) to bind to when creating the POP3 socket. \n         Defaults to the address picked by the Socket class. \n         Valid String \n     \n     \n         mail.pop3.localport \n         Local port number to bind to when creating the POP3 socket. \n         Defaults to the port number picked by the Socket class. \n         Valid port number \n     \n     \n         mail.pop3.apop.enable \n         If set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password. \n         false \n         true or false \n     \n     \n         mail.pop3.socketFactory \n         If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets. \n         None \n         Socket Factory \n     \n     \n         mail.pop3.socketFactory.class \n         If set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets. \n         None \n         Valid String \n     \n     \n         mail.pop3.socketFactory.fallback \n         If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. \n         false \n         true or false \n     \n     \n         mail.pop3.socketFactory.port \n         Specifies the port to connect to when using the specified socket factory. \n         Default port \n         Valid port number \n     \n     \n         mail.pop3.ssl.checkserveridentity \n         If set to true, check the server identity as specified by RFC 2595.  \n         false \n         true or false \n     \n     \n         mail.pop3.ssl.trust \n         If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. \n         \n         Valid String \n     \n     \n         mail.pop3.ssl.socketFactory \n         If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. \n         None \n         SSL Socket Factory \n     \n     \n         mail.pop3.ssl.checkserveridentity \n         If set to true, check the server identity as specified by RFC 2595.  \n         false \n         true or false \n     \n     \n         mail.pop3.ssl.trust \n          If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.  \n         trust depends on the certificate the server presents. \n         Valid String \n     \n     \n         mail.pop3.ssl.socketFactory \n         If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. \n         None \n         SSL Socket Factory \n     \n     \n         mail.pop3.ssl.socketFactory.class \n         If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets.  \n         None \n         Valid String \n     \n     \n         mail.pop3.ssl.socketFactory.p \n         Specifies the port to connect to when using the specified socket factory. \n         995 \n         Valid Integer \n     \n     \n         mail.pop3.ssl.protocols \n         Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. \n         None \n         Valid String \n     \n     \n         mail.pop3.starttls.enable \n         If true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands \n         false \n         true or false \n     \n     \n         mail.pop3.starttls.required \n         If true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail. \n         false \n         true or false \n     \n     \n         mail.pop3.socks.host \n         Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. \n         None \n         Valid String \n     \n     \n         mail.pop3.socks.port \n         Specifies the port number for the SOCKS5 proxy server. \n         None \n         Valid String \n     \n     \n         mail.pop3.disabletop \n         If set to true, the POP3 TOP command will not be used to fetch message headers.  \n         false \n         true or false \n     \n     \n         mail.pop3.forgettopheaders \n         If set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command. \n         false \n         true or false \n     \n     \n         mail.pop3.filecache.enable \n         If set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. \n         false \n         true or false \n     \n     \n         mail.pop3.filecache.dir \n         If the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files. \n         None \n         Valid String \n     \n     \n         mail.pop3.cachewriteto \n         Controls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached. \n         false \n         true or false \n     \n     \n         mail.pop3.keepmessagecontent \n         If this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method).  \n         false \n         true or false \n       Examples  EXAMPLE 1  @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string);  Following example illustrates how to receive events in  xml  format using email source. In this example only mandatory parameters are defined in the  in the stream definition. For other parameters default values are taken. since search term is not defined, it poll and take all new messages in the inbox folder  EXAMPLE 2  @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string);  Following example illustrates how to receive events in  xml  format using email source. The email source polls the mail account in every 500 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term (email messages which come from from.account@. host name , contains  cc.account  in cc receipts list, and  Stream Processor  words in the mail subject) In the example, action after processes is defined as the  DELETE , so that after processing the event, corresponding mail is deleted from the mail folder.", 
            "title": "email (Source)"
        }, 
        {
            "location": "/api/1.0.10/", 
            "text": "API Docs - v1.0.10\n\n\nSink\n\n\nemail \n(Sink)\n\n\nThe email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken for the optional parameters. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters). Further, some email account required to enable 'access to less secure apps' option (for gmail account you can enable it via https://myaccount.google.com/lesssecureapps).\n\n\n\nSyntax\n\n\n@sink(type=\nemail\n, username=\nSTRING\n, address=\nSTRING\n, password=\nSTRING\n, host=\nSTRING\n, port=\nINT\n, ssl.enable=\nBOOL\n, auth=\nBOOL\n, content.type=\nSTRING\n, subject=\nSTRING\n, to=\nSTRING\n, cc=\nSTRING\n, bcc=\nSTRING\n, @map(...)))\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \nusername\n\n        \nUsername of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com).\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \naddress\n\n        \nAddress of the email account which is used to send emails.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \npassword\n\n        \nPassword of the email account.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \nhost\n\n        \nHost name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account.\n\n        \nsmtp.gmail.com\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nport\n\n        \nThe port which is used to create the connection.\n\n        \n'465' the default value is only valid is ssl enable\n\n        \nINT\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nssl.enable\n\n        \nWhether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection.\n\n        \ntrue\n\n        \nBOOL\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nauth\n\n        \nWhether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command.\n\n        \ntrue\n\n        \nBOOL\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \ncontent.type\n\n        \nContent type can be either 'text/plain' or 'text/html'.\n\n        \ntext/plain\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nsubject\n\n        \nSubject of the mail which has to be send.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nYes\n\n    \n\n    \n\n        \nto\n\n        \nAddress of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nYes\n\n    \n\n    \n\n        \ncc\n\n        \nAddress of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list.\n\n        \nNone\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nbcc\n\n        \nAddress of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list.\n\n        \nNone\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n\n\n\nSystem Parameters\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Parameters\n\n    \n\n    \n\n        \nmail.smtp.ssl.trust\n\n        \nIf set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to \"\n\", all hosts are trusted. If set to a whitespace separated list of hosts, those hosts are trusted. Otherwise, trust depends on the certificate the server presents.\n\n        \n\n        \nString\n\n    \n\n    \n\n        \nmail.smtp.connectiontimeout\n\n        \nSocket connection timeout value in milliseconds. \n\n        \ninfinite timeout\n\n        \nAny Integer\n\n    \n\n    \n\n        \nmail.smtp.timeout\n\n        \nSocket I/O timeout value in milliseconds. \n\n        \ninfinite timeout\n\n        \nAny Integer\n\n    \n\n    \n\n        \nmail.smtp.from\n\n        \nEmail address to use for SMTP MAIL command. This sets the envelope return address.\n\n        \nDefaults to msg.getFrom() or InternetAddress.getLocalAddress().\n\n        \nValid email address\n\n    \n\n    \n\n        \nmail.smtp.localport\n\n        \nLocal port number to bind to when creating the SMTP socket.\n\n        \nDefaults to the port number picked by the Socket class.\n\n        \nAny Integer\n\n    \n\n    \n\n        \nmail.smtp.ehlo\n\n        \nIf false, do not attempt to sign on with the EHLO command.\n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.login.disable\n\n        \nIf true, prevents use of the AUTH LOGIN command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.plain.disable\n\n        \nIf true, prevents use of the AUTH PLAIN command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.digest-md5.disable\n\n        \nIf true, prevents use of the AUTH DIGEST-MD5 command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.ntlm.disable\n\n        \nIf true, prevents use of the AUTH NTLM command\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.ntlm.domain\n\n        \nThe NTLM authentication domain.\n\n        \nNone\n\n        \nValid NTLM authentication domain name\n\n    \n\n    \n\n        \nmail.smtp.auth.ntlm.flags\n\n        \nNTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details.\n\n        \nNone\n\n        \nValid NTLM protocol-specific flags.\n\n    \n\n    \n\n        \nmail.smtp.dsn.notify\n\n        \nThe NOTIFY option to the RCPT command.\n\n        \nNone\n\n        \nEither NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas).\n\n    \n\n    \n\n        \nmail.smtp.dsn.ret\n\n        \nThe RET option to the MAIL command.\n\n        \nNone\n\n        \nEither FULL or HDRS.\n\n    \n\n    \n\n        \nmail.smtp.sendpartial\n\n        \nIf set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.sasl.enable\n\n        \nIf set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.sasl.mechanisms\n\n        \nA space or comma separated list of SASL mechanism names to try to use.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.sasl.authorizationid\n\n        \nThe authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used.\n\n        \nusername\n\n        \nValid ID\n\n    \n\n    \n\n        \nmail.smtp.sasl.realm\n\n        \nThe realm to use with DIGEST-MD5 authentication.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.quitwait\n\n        \nIf set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.reportsuccess\n\n        \nIf set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.socketFactory\n\n        \nIf set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets.\n\n        \nNone\n\n        \nSocket Factory\n\n    \n\n    \n\n        \nmail.smtp.socketFactory.class\n\n        \nIf set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.socketFactory.fallback\n\n        \nIf set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class.\n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.socketFactory.port\n\n        \nSpecifies the port to connect to when using the specified socket factory\n\n        \n25\n\n        \nValid port number\n\n    \n\n    \n\n        \nmail.smtp.ssl.protocols\n\n        \nSpecifies the SSL protocols that will be enabled for SSL connections.\n\n        \nNone\n\n        \nThe property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method.\n\n    \n\n    \n\n        \nmail.smtp.starttls.enable\n\n        \nIf true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.starttls.required\n\n        \nIf true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.socks.host\n\n        \nSpecifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.socks.port\n\n        \nSpecifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080.\n\n        \n1080\n\n        \nvalid port number\n\n    \n\n    \n\n        \nmail.smtp.auth.ntlm.disable\n\n        \nIf true, prevents use of the AUTH NTLM command\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.mailextension\n\n        \nExtension string to append to the MAIL command.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.userset\n\n        \nIf set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\n@sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string);\n\n\n\n\nFollowing example illustrates how to publish events using the email sinkusing mandatory parameters. As in the example, it publishes events come from the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection.\n\n\n\nEXAMPLE 2\n\n\n@sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string);\n\n\n\n\nFollowing example illustrates how to configure the query parameters and system parameters in the deployment ymal file.\nCorresponding parameters need to be configure under name:'email' and namespace:'sink' as follows\nsiddhi:\nextensions:\n-\nextension:\nname:'email'\nnamespace:'sink'\nproperties:\nusername:sender.account\naddress:sender.account@gmail.com\naddress:sender.account@gmail.com\nAs in the example, it publishes events comefrom the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection.\n\n\n\nEXAMPLE 3\n\n\n@sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream fooStream (name string, age int, country string);\n\n\n\n\nFollowing example illustrates how to publish events using the email sink. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given \nto\n,\ncc\n and \nbcc\n recipients using a secure connection. \nname\n in the \nsubject\n attribute will be the value of the \nname\n parameter in the corresponding output event\n\n\n\nSource\n\n\nemail \n(Source)\n\n\nEmail source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store ,  https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters).\n\n\n\nSyntax\n\n\n@source(type=\nemail\n, username=\nSTRING\n, password=\nSTRING\n, store=\nSTRING\n, host=\nSTRING\n, port=\nINT\n, folder=\nSTRING\n, search.term=\nSTRING\n, polling.interval=\nLONG\n, action.after.processed=\nSTRING\n, folder.to.move=\nSTRING\n, content.type=\nSTRING\n, ssl.enable=\nBOOL\n, @map(...)))\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \nusername\n\n        \nuser name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \npassword\n\n        \npassword of the email account\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \nstore\n\n        \nStore type that used to receive emails. it can be either imap or pop3.\n\n        \nimap\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nhost\n\n        \nHost name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable.\n\n        \nIf store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'.\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nport\n\n        \nThe port which is used to create the connection.\n\n        \n'993' the default value is valid only if store is imap and ssl enable\n\n        \nINT\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nfolder\n\n        \nName of the folder to fetch email.\n\n        \nINBOX\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nsearch.term\n\n        \nOption which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol.\n\n        \nNone\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \npolling.interval\n\n        \nInterval that email source should poll the account to check for new mails arrivals in seconds.\n\n        \n600\n\n        \nLONG\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \naction.after.processed\n\n        \nAction that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE\n\n        \nNONE\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nfolder.to.move\n\n        \nThe name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \ncontent.type\n\n        \nContent type of the email. It can be either 'text/plain' or 'text/html.'\n\n        \ntext/plain\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nssl.enable\n\n        \nIf it is 'true' then use a secure port to establish the connection. The possible values are 'true or false.\n\n        \ntrue\n\n        \nBOOL\n\n        \nYes\n\n        \nNo\n\n    \n\n\n\n\nSystem Parameters\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Parameters\n\n    \n\n    \n\n        \nmail.imap.partialfetch\n\n        \nControls whether the IMAP partial-fetch capability should be used\n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.fetchsize\n\n        \nPartial fetch size in bytes.\n\n        \n16K\n\n        \nvalue in bytes\n\n    \n\n    \n\n        \nmail.imap.peek\n\n        \nIf set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.connectiontimeout\n\n        \nSocket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket.\n\n        \ninfinity timeout\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.timeout\n\n        \nSocket read timeout value in milliseconds. This timeout is implemented by java.net.Socket.\n\n        \ninfinity timeout\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.writetimeout\n\n        \nSocket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection.\n\n        \ninfinity timeout\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.statuscachetimeout\n\n        \nTimeout value in milliseconds for cache of STATUS command response.\n\n        \n1000ms\n\n        \nTime out in miliseconds\n\n    \n\n    \n\n        \nmail.imap.appendbuffersize\n\n        \nMaximum size of a message to buffer in memory when appending to an IMAP folder.\n\n        \nNone\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.connectionpoolsize\n\n        \nMaximum number of available connections in the connection pool.\n\n        \n1\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.connectionpooltimeout\n\n        \nTimeout value in milliseconds for connection pool connections. \n\n        \n45000ms\n\n        \nAny Integer\n\n    \n\n    \n\n        \nmail.imap.separatestoreconnection\n\n        \nFlag to indicate whether to use a dedicated store connection for store commands.\n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.auth.login.disable\n\n        \nIf true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.auth.plain.disable\n\n        \nIf true, prevents use of the AUTHENTICATE PLAIN command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.auth.ntlm.disable\n\n        \nIf true, prevents use of the AUTHENTICATE NTLM command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.proxyauth.user\n\n        \nIf the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property.\n\n        \nNone\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.localaddress\n\n        \nLocal address (host name) to bind to when creating the IMAP socket.\n\n        \nDefaults to the address picked by the Socket class.\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.localport\n\n        \nLocal port number to bind to when creating the IMAP socket.\n\n        \nDefaults to the port number picked by the Socket class.\n\n        \nValid String value\n\n    \n\n    \n\n        \nmail.imap.sasl.enable\n\n        \nIf set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.sasl.mechanisms\n\n        \nA space or comma separated list of SASL mechanism names to try to use.\n\n        \nNone\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.sasl.authorizationid\n\n        \nThe authorization ID to use in the SASL authentication.\n\n        \nIf not set, the authentication ID (user name) is used.\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.sasl.realm\n\n        \nThe realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5.\n\n        \nNone\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.auth.ntlm.domain\n\n        \nThe NTLM authentication domain.\n\n        \nNone\n\n        \nValid string value\n\n    \n\n    \n\n        \nThe NTLM authentication domain.\n\n        \nNTLM protocol-specific flags.\n\n        \nNone\n\n        \nValid integer value\n\n    \n\n    \n\n        \nmail.imap.socketFactory\n\n        \nIf set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets.\n\n        \nNone\n\n        \nValid SocketFactory\n\n    \n\n    \n\n        \nmail.imap.socketFactory.class\n\n        \nIf set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets.\n\n        \nNone\n\n        \nValid string\n\n    \n\n    \n\n        \nmail.imap.socketFactory.fallback\n\n        \nIf set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. \n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.socketFactory.port\n\n        \nSpecifies the port to connect to when using the specified socket factory. Default port is used when not set.\n\n        \n143\n\n        \nValid Integer\n\n    \n\n    \n\n        \nmail.imap.ssl.checkserveridentity\n\n        \nIf set to true, check the server identity as specified by RFC 2595.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.ssl.trust\n\n        \nIf set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '\n', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents.\n\n        \n\n        \nValid String\n\n    \n\n    \n\n        \nmail.imap.ssl.socketFactory\n\n        \nIf set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets.\n\n        \nNone\n\n        \nSSL Socket Factory\n\n    \n\n    \n\n        \nmail.imap.ssl.socketFactory.class\n\n        \nIf set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.imap.ssl.socketFactory.port\n\n        \nSpecifies the port to connect to when using the specified socket factory.\n\n        \nthe default port will be used-993\n\n        \nvalid port number\n\n    \n\n    \n\n        \nmail.imap.ssl.protocols\n\n        \nSpecifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method.\n\n        \nNone\n\n        \nValid string\n\n    \n\n    \n\n        \nmail.imap.starttls.enable\n\n        \nIf true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.socks.host\n\n        \nSpecifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.imap.socks.port\n\n        \nSpecifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080.\n\n        \n1080\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.imap.minidletime\n\n        \nThis property sets the delay in milliseconds.\n\n        \n10 milliseconds\n\n        \ntime in seconds (Integer)\n\n    \n\n    \n\n        \nmail.imap.enableimapevents\n\n        \nEnable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.folder.class\n\n        \nClass name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store)\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.connectiontimeout\n\n        \nSocket connection timeout value in milliseconds.\n\n        \nInfinite timeout\n\n        \nInteger value\n\n    \n\n    \n\n        \nmail.pop3.timeout\n\n        \nSocket I/O timeout value in milliseconds. \n\n        \nInfinite timeout\n\n        \nInteger value\n\n    \n\n    \n\n        \nmail.pop3.message.class\n\n        \nClass name of a subclass of com.sun.mail.pop3.POP3Message\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.localaddress\n\n        \nLocal address (host name) to bind to when creating the POP3 socket.\n\n        \nDefaults to the address picked by the Socket class.\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.localport\n\n        \nLocal port number to bind to when creating the POP3 socket.\n\n        \nDefaults to the port number picked by the Socket class.\n\n        \nValid port number\n\n    \n\n    \n\n        \nmail.pop3.apop.enable\n\n        \nIf set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.socketFactory\n\n        \nIf set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets.\n\n        \nNone\n\n        \nSocket Factory\n\n    \n\n    \n\n        \nmail.pop3.socketFactory.class\n\n        \nIf set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.socketFactory.fallback\n\n        \nIf set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.socketFactory.port\n\n        \nSpecifies the port to connect to when using the specified socket factory.\n\n        \nDefault port\n\n        \nValid port number\n\n    \n\n    \n\n        \nmail.pop3.ssl.checkserveridentity\n\n        \nIf set to true, check the server identity as specified by RFC 2595. \n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.ssl.trust\n\n        \nIf set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to '\n', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents.\n\n        \n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.ssl.socketFactory\n\n        \nIf set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets.\n\n        \nNone\n\n        \nSSL Socket Factory\n\n    \n\n    \n\n        \nmail.pop3.ssl.checkserveridentity\n\n        \nIf set to true, check the server identity as specified by RFC 2595. \n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.ssl.trust\n\n        \n If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted. \n\n        \ntrust depends on the certificate the server presents.\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.ssl.socketFactory\n\n        \nIf set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets.\n\n        \nNone\n\n        \nSSL Socket Factory\n\n    \n\n    \n\n        \nmail.pop3.ssl.socketFactory.class\n\n        \nIf set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets. \n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.ssl.socketFactory.p\n\n        \nSpecifies the port to connect to when using the specified socket factory.\n\n        \n995\n\n        \nValid Integer\n\n    \n\n    \n\n        \nmail.pop3.ssl.protocols\n\n        \nSpecifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.starttls.enable\n\n        \nIf true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.starttls.required\n\n        \nIf true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.socks.host\n\n        \nSpecifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.socks.port\n\n        \nSpecifies the port number for the SOCKS5 proxy server.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.disabletop\n\n        \nIf set to true, the POP3 TOP command will not be used to fetch message headers. \n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.forgettopheaders\n\n        \nIf set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.filecache.enable\n\n        \nIf set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.filecache.dir\n\n        \nIf the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.cachewriteto\n\n        \nControls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.keepmessagecontent\n\n        \nIf this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method). \n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\n@source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string);\n\n\n\n\nFollowing example illustrates how to receive events in \nxml\n format using email source. In this example only mandatory parameters are defined in the  in the stream definition. For other parameters default values are taken. since search term is not defined, it poll and take all new messages in the inbox folder\n\n\n\nEXAMPLE 2\n\n\n@source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string);\n\n\n\n\nFollowing example illustrates how to receive events in \nxml\n format using email source. The email source polls the mail account in every 500 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term (email messages which come from\nfrom.account@.\nhost name\n, contains \ncc.account\n in cc receipts list, and \nStream Processor\n words in the mail subject) In the example, action after processes is defined as the \nDELETE\n, so that after processing the event, corresponding mail is deleted from the mail folder.", 
            "title": "1.0.10"
        }, 
        {
            "location": "/api/1.0.10/#api-docs-v1010", 
            "text": "", 
            "title": "API Docs - v1.0.10"
        }, 
        {
            "location": "/api/1.0.10/#sink", 
            "text": "", 
            "title": "Sink"
        }, 
        {
            "location": "/api/1.0.10/#email-sink", 
            "text": "The email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken for the optional parameters. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters). Further, some email account required to enable 'access to less secure apps' option (for gmail account you can enable it via https://myaccount.google.com/lesssecureapps).  Syntax  @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , @map(...)))  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         username \n         Username of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com). \n         \n         STRING \n         No \n         No \n     \n     \n         address \n         Address of the email account which is used to send emails. \n         \n         STRING \n         No \n         No \n     \n     \n         password \n         Password of the email account. \n         \n         STRING \n         No \n         No \n     \n     \n         host \n         Host name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account. \n         smtp.gmail.com \n         STRING \n         Yes \n         No \n     \n     \n         port \n         The port which is used to create the connection. \n         '465' the default value is only valid is ssl enable \n         INT \n         Yes \n         No \n     \n     \n         ssl.enable \n         Whether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection. \n         true \n         BOOL \n         Yes \n         No \n     \n     \n         auth \n         Whether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command. \n         true \n         BOOL \n         Yes \n         No \n     \n     \n         content.type \n         Content type can be either 'text/plain' or 'text/html'. \n         text/plain \n         STRING \n         Yes \n         No \n     \n     \n         subject \n         Subject of the mail which has to be send. \n         \n         STRING \n         No \n         Yes \n     \n     \n         to \n         Address of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list. \n         \n         STRING \n         No \n         Yes \n     \n     \n         cc \n         Address of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list. \n         None \n         STRING \n         Yes \n         No \n     \n     \n         bcc \n         Address of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list. \n         None \n         STRING \n         Yes \n         No \n       System Parameters  \n     \n         Name \n         Description \n         Default Value \n         Possible Parameters \n     \n     \n         mail.smtp.ssl.trust \n         If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to \" \", all hosts are trusted. If set to a whitespace separated list of hosts, those hosts are trusted. Otherwise, trust depends on the certificate the server presents. \n         \n         String \n     \n     \n         mail.smtp.connectiontimeout \n         Socket connection timeout value in milliseconds.  \n         infinite timeout \n         Any Integer \n     \n     \n         mail.smtp.timeout \n         Socket I/O timeout value in milliseconds.  \n         infinite timeout \n         Any Integer \n     \n     \n         mail.smtp.from \n         Email address to use for SMTP MAIL command. This sets the envelope return address. \n         Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). \n         Valid email address \n     \n     \n         mail.smtp.localport \n         Local port number to bind to when creating the SMTP socket. \n         Defaults to the port number picked by the Socket class. \n         Any Integer \n     \n     \n         mail.smtp.ehlo \n         If false, do not attempt to sign on with the EHLO command. \n         true \n         true or false \n     \n     \n         mail.smtp.auth.login.disable \n         If true, prevents use of the AUTH LOGIN command. \n         false \n         true or false \n     \n     \n         mail.smtp.auth.plain.disable \n         If true, prevents use of the AUTH PLAIN command. \n         false \n         true or false \n     \n     \n         mail.smtp.auth.digest-md5.disable \n         If true, prevents use of the AUTH DIGEST-MD5 command. \n         false \n         true or false \n     \n     \n         mail.smtp.auth.ntlm.disable \n         If true, prevents use of the AUTH NTLM command \n         false \n         true or false \n     \n     \n         mail.smtp.auth.ntlm.domain \n         The NTLM authentication domain. \n         None \n         Valid NTLM authentication domain name \n     \n     \n         mail.smtp.auth.ntlm.flags \n         NTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details. \n         None \n         Valid NTLM protocol-specific flags. \n     \n     \n         mail.smtp.dsn.notify \n         The NOTIFY option to the RCPT command. \n         None \n         Either NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas). \n     \n     \n         mail.smtp.dsn.ret \n         The RET option to the MAIL command. \n         None \n         Either FULL or HDRS. \n     \n     \n         mail.smtp.sendpartial \n         If set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address. \n         false \n         true or false \n     \n     \n         mail.smtp.sasl.enable \n         If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. \n         false \n         true or false \n     \n     \n         mail.smtp.sasl.mechanisms \n         A space or comma separated list of SASL mechanism names to try to use. \n         None \n         \n     \n     \n         mail.smtp.sasl.authorizationid \n         The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. \n         username \n         Valid ID \n     \n     \n         mail.smtp.sasl.realm \n         The realm to use with DIGEST-MD5 authentication. \n         None \n         \n     \n     \n         mail.smtp.quitwait \n         If set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command. \n         false \n         true or false \n     \n     \n         mail.smtp.reportsuccess \n         If set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful. \n         false \n         true or false \n     \n     \n         mail.smtp.socketFactory \n         If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets. \n         None \n         Socket Factory \n     \n     \n         mail.smtp.socketFactory.class \n         If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets. \n         None \n         \n     \n     \n         mail.smtp.socketFactory.fallback \n         If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. \n         true \n         true or false \n     \n     \n         mail.smtp.socketFactory.port \n         Specifies the port to connect to when using the specified socket factory \n         25 \n         Valid port number \n     \n     \n         mail.smtp.ssl.protocols \n         Specifies the SSL protocols that will be enabled for SSL connections. \n         None \n         The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. \n     \n     \n         mail.smtp.starttls.enable \n         If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. \n         false \n         true or false \n     \n     \n         mail.smtp.starttls.required \n         If true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail. \n         false \n         true or false \n     \n     \n         mail.smtp.socks.host \n         Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. \n         None \n         \n     \n     \n         mail.smtp.socks.port \n         Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. \n         1080 \n         valid port number \n     \n     \n         mail.smtp.auth.ntlm.disable \n         If true, prevents use of the AUTH NTLM command \n         false \n         true or false \n     \n     \n         mail.smtp.mailextension \n         Extension string to append to the MAIL command. \n         None \n         \n     \n     \n         mail.smtp.userset \n         If set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue. \n         false \n         true or false \n       Examples  EXAMPLE 1  @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string);  Following example illustrates how to publish events using the email sinkusing mandatory parameters. As in the example, it publishes events come from the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection.  EXAMPLE 2  @sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string);  Following example illustrates how to configure the query parameters and system parameters in the deployment ymal file. Corresponding parameters need to be configure under name:'email' and namespace:'sink' as follows siddhi: extensions: - extension: name:'email' namespace:'sink' properties: username:sender.account address:sender.account@gmail.com address:sender.account@gmail.com As in the example, it publishes events comefrom the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection.  EXAMPLE 3  @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream fooStream (name string, age int, country string);  Following example illustrates how to publish events using the email sink. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given  to , cc  and  bcc  recipients using a secure connection.  name  in the  subject  attribute will be the value of the  name  parameter in the corresponding output event", 
            "title": "email (Sink)"
        }, 
        {
            "location": "/api/1.0.10/#source", 
            "text": "", 
            "title": "Source"
        }, 
        {
            "location": "/api/1.0.10/#email-source", 
            "text": "Email source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store ,  https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters).  Syntax  @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...)))  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         username \n         user name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account. \n         \n         STRING \n         No \n         No \n     \n     \n         password \n         password of the email account \n         \n         STRING \n         No \n         No \n     \n     \n         store \n         Store type that used to receive emails. it can be either imap or pop3. \n         imap \n         STRING \n         Yes \n         No \n     \n     \n         host \n         Host name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable. \n         If store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'. \n         STRING \n         Yes \n         No \n     \n     \n         port \n         The port which is used to create the connection. \n         '993' the default value is valid only if store is imap and ssl enable \n         INT \n         Yes \n         No \n     \n     \n         folder \n         Name of the folder to fetch email. \n         INBOX \n         STRING \n         Yes \n         No \n     \n     \n         search.term \n         Option which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol. \n         None \n         STRING \n         Yes \n         No \n     \n     \n         polling.interval \n         Interval that email source should poll the account to check for new mails arrivals in seconds. \n         600 \n         LONG \n         Yes \n         No \n     \n     \n         action.after.processed \n         Action that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE \n         NONE \n         STRING \n         Yes \n         No \n     \n     \n         folder.to.move \n         The name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move. \n         \n         STRING \n         No \n         No \n     \n     \n         content.type \n         Content type of the email. It can be either 'text/plain' or 'text/html.' \n         text/plain \n         STRING \n         Yes \n         No \n     \n     \n         ssl.enable \n         If it is 'true' then use a secure port to establish the connection. The possible values are 'true or false. \n         true \n         BOOL \n         Yes \n         No \n       System Parameters  \n     \n         Name \n         Description \n         Default Value \n         Possible Parameters \n     \n     \n         mail.imap.partialfetch \n         Controls whether the IMAP partial-fetch capability should be used \n         true \n         true or false \n     \n     \n         mail.imap.fetchsize \n         Partial fetch size in bytes. \n         16K \n         value in bytes \n     \n     \n         mail.imap.peek \n         If set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage. \n         false \n         true or false \n     \n     \n         mail.imap.connectiontimeout \n         Socket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket. \n         infinity timeout \n         Any Integer value \n     \n     \n         mail.imap.timeout \n         Socket read timeout value in milliseconds. This timeout is implemented by java.net.Socket. \n         infinity timeout \n         Any Integer value \n     \n     \n         mail.imap.writetimeout \n         Socket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection. \n         infinity timeout \n         Any Integer value \n     \n     \n         mail.imap.statuscachetimeout \n         Timeout value in milliseconds for cache of STATUS command response. \n         1000ms \n         Time out in miliseconds \n     \n     \n         mail.imap.appendbuffersize \n         Maximum size of a message to buffer in memory when appending to an IMAP folder. \n         None \n         Any Integer value \n     \n     \n         mail.imap.connectionpoolsize \n         Maximum number of available connections in the connection pool. \n         1 \n         Any Integer value \n     \n     \n         mail.imap.connectionpooltimeout \n         Timeout value in milliseconds for connection pool connections.  \n         45000ms \n         Any Integer \n     \n     \n         mail.imap.separatestoreconnection \n         Flag to indicate whether to use a dedicated store connection for store commands. \n         true \n         true or false \n     \n     \n         mail.imap.auth.login.disable \n         If true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command. \n         false \n         true or false \n     \n     \n         mail.imap.auth.plain.disable \n         If true, prevents use of the AUTHENTICATE PLAIN command. \n         false \n         true or false \n     \n     \n         mail.imap.auth.ntlm.disable \n         If true, prevents use of the AUTHENTICATE NTLM command. \n         false \n         true or false \n     \n     \n         mail.imap.proxyauth.user \n         If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property. \n         None \n         Valid string value \n     \n     \n         mail.imap.localaddress \n         Local address (host name) to bind to when creating the IMAP socket. \n         Defaults to the address picked by the Socket class. \n         Valid string value \n     \n     \n         mail.imap.localport \n         Local port number to bind to when creating the IMAP socket. \n         Defaults to the port number picked by the Socket class. \n         Valid String value \n     \n     \n         mail.imap.sasl.enable \n         If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. \n         false \n         true or false \n     \n     \n         mail.imap.sasl.mechanisms \n         A space or comma separated list of SASL mechanism names to try to use. \n         None \n         Valid string value \n     \n     \n         mail.imap.sasl.authorizationid \n         The authorization ID to use in the SASL authentication. \n         If not set, the authentication ID (user name) is used. \n         Valid string value \n     \n     \n         mail.imap.sasl.realm \n         The realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5. \n         None \n         Valid string value \n     \n     \n         mail.imap.auth.ntlm.domain \n         The NTLM authentication domain. \n         None \n         Valid string value \n     \n     \n         The NTLM authentication domain. \n         NTLM protocol-specific flags. \n         None \n         Valid integer value \n     \n     \n         mail.imap.socketFactory \n         If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets. \n         None \n         Valid SocketFactory \n     \n     \n         mail.imap.socketFactory.class \n         If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets. \n         None \n         Valid string \n     \n     \n         mail.imap.socketFactory.fallback \n         If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class.  \n         true \n         true or false \n     \n     \n         mail.imap.socketFactory.port \n         Specifies the port to connect to when using the specified socket factory. Default port is used when not set. \n         143 \n         Valid Integer \n     \n     \n         mail.imap.ssl.checkserveridentity \n         If set to true, check the server identity as specified by RFC 2595. \n         false \n         true or false \n     \n     \n         mail.imap.ssl.trust \n         If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. \n         \n         Valid String \n     \n     \n         mail.imap.ssl.socketFactory \n         If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets. \n         None \n         SSL Socket Factory \n     \n     \n         mail.imap.ssl.socketFactory.class \n         If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets. \n         None \n         Valid String \n     \n     \n         mail.imap.ssl.socketFactory.port \n         Specifies the port to connect to when using the specified socket factory. \n         the default port will be used-993 \n         valid port number \n     \n     \n         mail.imap.ssl.protocols \n         Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. \n         None \n         Valid string \n     \n     \n         mail.imap.starttls.enable \n         If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. \n         false \n         true or false \n     \n     \n         mail.imap.socks.host \n         Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. \n         None \n         Valid String \n     \n     \n         mail.imap.socks.port \n         Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. \n         1080 \n         Valid String \n     \n     \n         mail.imap.minidletime \n         This property sets the delay in milliseconds. \n         10 milliseconds \n         time in seconds (Integer) \n     \n     \n         mail.imap.enableimapevents \n         Enable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string. \n         false \n         true or false \n     \n     \n         mail.imap.folder.class \n         Class name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store) \n         None \n         Valid String \n     \n     \n         mail.pop3.connectiontimeout \n         Socket connection timeout value in milliseconds. \n         Infinite timeout \n         Integer value \n     \n     \n         mail.pop3.timeout \n         Socket I/O timeout value in milliseconds.  \n         Infinite timeout \n         Integer value \n     \n     \n         mail.pop3.message.class \n         Class name of a subclass of com.sun.mail.pop3.POP3Message \n         None \n         Valid String \n     \n     \n         mail.pop3.localaddress \n         Local address (host name) to bind to when creating the POP3 socket. \n         Defaults to the address picked by the Socket class. \n         Valid String \n     \n     \n         mail.pop3.localport \n         Local port number to bind to when creating the POP3 socket. \n         Defaults to the port number picked by the Socket class. \n         Valid port number \n     \n     \n         mail.pop3.apop.enable \n         If set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password. \n         false \n         true or false \n     \n     \n         mail.pop3.socketFactory \n         If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets. \n         None \n         Socket Factory \n     \n     \n         mail.pop3.socketFactory.class \n         If set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets. \n         None \n         Valid String \n     \n     \n         mail.pop3.socketFactory.fallback \n         If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. \n         false \n         true or false \n     \n     \n         mail.pop3.socketFactory.port \n         Specifies the port to connect to when using the specified socket factory. \n         Default port \n         Valid port number \n     \n     \n         mail.pop3.ssl.checkserveridentity \n         If set to true, check the server identity as specified by RFC 2595.  \n         false \n         true or false \n     \n     \n         mail.pop3.ssl.trust \n         If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. \n         \n         Valid String \n     \n     \n         mail.pop3.ssl.socketFactory \n         If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. \n         None \n         SSL Socket Factory \n     \n     \n         mail.pop3.ssl.checkserveridentity \n         If set to true, check the server identity as specified by RFC 2595.  \n         false \n         true or false \n     \n     \n         mail.pop3.ssl.trust \n          If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.  \n         trust depends on the certificate the server presents. \n         Valid String \n     \n     \n         mail.pop3.ssl.socketFactory \n         If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. \n         None \n         SSL Socket Factory \n     \n     \n         mail.pop3.ssl.socketFactory.class \n         If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets.  \n         None \n         Valid String \n     \n     \n         mail.pop3.ssl.socketFactory.p \n         Specifies the port to connect to when using the specified socket factory. \n         995 \n         Valid Integer \n     \n     \n         mail.pop3.ssl.protocols \n         Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. \n         None \n         Valid String \n     \n     \n         mail.pop3.starttls.enable \n         If true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands \n         false \n         true or false \n     \n     \n         mail.pop3.starttls.required \n         If true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail. \n         false \n         true or false \n     \n     \n         mail.pop3.socks.host \n         Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. \n         None \n         Valid String \n     \n     \n         mail.pop3.socks.port \n         Specifies the port number for the SOCKS5 proxy server. \n         None \n         Valid String \n     \n     \n         mail.pop3.disabletop \n         If set to true, the POP3 TOP command will not be used to fetch message headers.  \n         false \n         true or false \n     \n     \n         mail.pop3.forgettopheaders \n         If set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command. \n         false \n         true or false \n     \n     \n         mail.pop3.filecache.enable \n         If set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. \n         false \n         true or false \n     \n     \n         mail.pop3.filecache.dir \n         If the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files. \n         None \n         Valid String \n     \n     \n         mail.pop3.cachewriteto \n         Controls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached. \n         false \n         true or false \n     \n     \n         mail.pop3.keepmessagecontent \n         If this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method).  \n         false \n         true or false \n       Examples  EXAMPLE 1  @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string);  Following example illustrates how to receive events in  xml  format using email source. In this example only mandatory parameters are defined in the  in the stream definition. For other parameters default values are taken. since search term is not defined, it poll and take all new messages in the inbox folder  EXAMPLE 2  @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string);  Following example illustrates how to receive events in  xml  format using email source. The email source polls the mail account in every 500 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term (email messages which come from from.account@. host name , contains  cc.account  in cc receipts list, and  Stream Processor  words in the mail subject) In the example, action after processes is defined as the  DELETE , so that after processing the event, corresponding mail is deleted from the mail folder.", 
            "title": "email (Source)"
        }, 
        {
            "location": "/api/1.0.9/", 
            "text": "API Docs - v1.0.9\n\n\nSink\n\n\nemail \n(Sink)\n\n\nThe email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken for the optional parameters. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters). Further, some email account required to enable 'access to less secure apps' option (for gmail account you can enable it via https://myaccount.google.com/lesssecureapps).\n\n\n\nSyntax\n\n\n@sink(type=\nemail\n, username=\nSTRING\n, address=\nSTRING\n, password=\nSTRING\n, host=\nSTRING\n, port=\nINT\n, ssl.enable=\nBOOL\n, auth=\nBOOL\n, content.type=\nSTRING\n, subject=\nSTRING\n, to=\nSTRING\n, cc=\nSTRING\n, bcc=\nSTRING\n, @map(...)))\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \nusername\n\n        \nUsername of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com).\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \naddress\n\n        \nAddress of the email account which is used to send emails.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \npassword\n\n        \nPassword of the email account.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \nhost\n\n        \nHost name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account.\n\n        \nsmtp.gmail.com\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nport\n\n        \nThe port which is used to create the connection.\n\n        \n'465' the default value is only valid is ssl enable\n\n        \nINT\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nssl.enable\n\n        \nWhether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection.\n\n        \ntrue\n\n        \nBOOL\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nauth\n\n        \nWhether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command.\n\n        \ntrue\n\n        \nBOOL\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \ncontent.type\n\n        \nContent type can be either 'text/plain' or 'text/html'.\n\n        \ntext/plain\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nsubject\n\n        \nSubject of the mail which has to be send.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nYes\n\n    \n\n    \n\n        \nto\n\n        \nAddress of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nYes\n\n    \n\n    \n\n        \ncc\n\n        \nAddress of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list.\n\n        \nNone\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nbcc\n\n        \nAddress of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list.\n\n        \nNone\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n\n\n\nSystem Parameters\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Parameters\n\n    \n\n    \n\n        \nmail.smtp.ssl.trust\n\n        \nIf set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to \"\n\", all hosts are trusted. If set to a whitespace separated list of hosts, those hosts are trusted. Otherwise, trust depends on the certificate the server presents.\n\n        \n\n        \nString\n\n    \n\n    \n\n        \nmail.smtp.connectiontimeout\n\n        \nSocket connection timeout value in milliseconds. \n\n        \ninfinite timeout\n\n        \nAny Integer\n\n    \n\n    \n\n        \nmail.smtp.timeout\n\n        \nSocket I/O timeout value in milliseconds. \n\n        \ninfinite timeout\n\n        \nAny Integer\n\n    \n\n    \n\n        \nmail.smtp.from\n\n        \nEmail address to use for SMTP MAIL command. This sets the envelope return address.\n\n        \nDefaults to msg.getFrom() or InternetAddress.getLocalAddress().\n\n        \nValid email address\n\n    \n\n    \n\n        \nmail.smtp.localport\n\n        \nLocal port number to bind to when creating the SMTP socket.\n\n        \nDefaults to the port number picked by the Socket class.\n\n        \nAny Integer\n\n    \n\n    \n\n        \nmail.smtp.ehlo\n\n        \nIf false, do not attempt to sign on with the EHLO command.\n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.login.disable\n\n        \nIf true, prevents use of the AUTH LOGIN command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.plain.disable\n\n        \nIf true, prevents use of the AUTH PLAIN command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.digest-md5.disable\n\n        \nIf true, prevents use of the AUTH DIGEST-MD5 command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.ntlm.disable\n\n        \nIf true, prevents use of the AUTH NTLM command\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.ntlm.domain\n\n        \nThe NTLM authentication domain.\n\n        \nNone\n\n        \nValid NTLM authentication domain name\n\n    \n\n    \n\n        \nmail.smtp.auth.ntlm.flags\n\n        \nNTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details.\n\n        \nNone\n\n        \nValid NTLM protocol-specific flags.\n\n    \n\n    \n\n        \nmail.smtp.dsn.notify\n\n        \nThe NOTIFY option to the RCPT command.\n\n        \nNone\n\n        \nEither NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas).\n\n    \n\n    \n\n        \nmail.smtp.dsn.ret\n\n        \nThe RET option to the MAIL command.\n\n        \nNone\n\n        \nEither FULL or HDRS.\n\n    \n\n    \n\n        \nmail.smtp.sendpartial\n\n        \nIf set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.sasl.enable\n\n        \nIf set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.sasl.mechanisms\n\n        \nA space or comma separated list of SASL mechanism names to try to use.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.sasl.authorizationid\n\n        \nThe authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used.\n\n        \nusername\n\n        \nValid ID\n\n    \n\n    \n\n        \nmail.smtp.sasl.realm\n\n        \nThe realm to use with DIGEST-MD5 authentication.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.quitwait\n\n        \nIf set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.reportsuccess\n\n        \nIf set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.socketFactory\n\n        \nIf set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets.\n\n        \nNone\n\n        \nSocket Factory\n\n    \n\n    \n\n        \nmail.smtp.socketFactory.class\n\n        \nIf set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.socketFactory.fallback\n\n        \nIf set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class.\n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.socketFactory.port\n\n        \nSpecifies the port to connect to when using the specified socket factory\n\n        \n25\n\n        \nValid port number\n\n    \n\n    \n\n        \nmail.smtp.ssl.protocols\n\n        \nSpecifies the SSL protocols that will be enabled for SSL connections.\n\n        \nNone\n\n        \nThe property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method.\n\n    \n\n    \n\n        \nmail.smtp.starttls.enable\n\n        \nIf true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.starttls.required\n\n        \nIf true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.socks.host\n\n        \nSpecifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.socks.port\n\n        \nSpecifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080.\n\n        \n1080\n\n        \nvalid port number\n\n    \n\n    \n\n        \nmail.smtp.auth.ntlm.disable\n\n        \nIf true, prevents use of the AUTH NTLM command\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.mailextension\n\n        \nExtension string to append to the MAIL command.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.userset\n\n        \nIf set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\n@sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string);\n\n\n\n\nFollowing example illustrates how to publish events using the email sinkusing mandatory parameters. As in the example, it publishes events come from the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection.\n\n\n\nEXAMPLE 2\n\n\n@sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string);\n\n\n\n\nFollowing example illustrates how to configure the query parameters and system parameters in the deployment ymal file.\nCorresponding parameters need to be configure under name:'email' and namespace:'sink' as follows\nsiddhi:\nextensions:\n-\nextension:\nname:'email'\nnamespace:'sink'\nproperties:\nusername:sender.account\naddress:sender.account@gmail.com\naddress:sender.account@gmail.com\nAs in the example, it publishes events comefrom the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection.\n\n\n\nEXAMPLE 3\n\n\n@sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream fooStream (name string, age int, country string);\n\n\n\n\nFollowing example illustrates how to publish events using the email sink. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given \nto\n,\ncc\n and \nbcc\n recipients using a secure connection. \nname\n in the \nsubject\n attribute will be the value of the \nname\n parameter in the corresponding output event\n\n\n\nSource\n\n\nemail \n(Source)\n\n\nEmail source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store ,  https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters).\n\n\n\nSyntax\n\n\n@source(type=\nemail\n, username=\nSTRING\n, password=\nSTRING\n, store=\nSTRING\n, host=\nSTRING\n, port=\nINT\n, folder=\nSTRING\n, search.term=\nSTRING\n, polling.interval=\nLONG\n, action.after.processed=\nSTRING\n, folder.to.move=\nSTRING\n, content.type=\nSTRING\n, ssl.enable=\nBOOL\n, @map(...)))\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \nusername\n\n        \nuser name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \npassword\n\n        \npassword of the email account\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \nstore\n\n        \nStore type that used to receive emails. it can be either imap or pop3.\n\n        \nimap\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nhost\n\n        \nHost name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable.\n\n        \nIf store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'.\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nport\n\n        \nThe port which is used to create the connection.\n\n        \n'993' the default value is valid only if store is imap and ssl enable\n\n        \nINT\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nfolder\n\n        \nName of the folder to fetch email.\n\n        \nINBOX\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nsearch.term\n\n        \nOption which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol.\n\n        \nNone\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \npolling.interval\n\n        \nInterval that email source should poll the account to check for new mails arrivals in seconds.\n\n        \n600\n\n        \nLONG\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \naction.after.processed\n\n        \nAction that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE\n\n        \nNONE\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nfolder.to.move\n\n        \nThe name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \ncontent.type\n\n        \nContent type of the email. It can be either 'text/plain' or 'text/html.'\n\n        \ntext/plain\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nssl.enable\n\n        \nIf it is 'true' then use a secure port to establish the connection. The possible values are 'true or false.\n\n        \ntrue\n\n        \nBOOL\n\n        \nYes\n\n        \nNo\n\n    \n\n\n\n\nSystem Parameters\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Parameters\n\n    \n\n    \n\n        \nmail.imap.partialfetch\n\n        \nControls whether the IMAP partial-fetch capability should be used\n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.fetchsize\n\n        \nPartial fetch size in bytes.\n\n        \n16K\n\n        \nvalue in bytes\n\n    \n\n    \n\n        \nmail.imap.peek\n\n        \nIf set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.connectiontimeout\n\n        \nSocket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket.\n\n        \ninfinity timeout\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.timeout\n\n        \nSocket read timeout value in milliseconds. This timeout is implemented by java.net.Socket.\n\n        \ninfinity timeout\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.writetimeout\n\n        \nSocket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection.\n\n        \ninfinity timeout\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.statuscachetimeout\n\n        \nTimeout value in milliseconds for cache of STATUS command response.\n\n        \n1000ms\n\n        \nTime out in miliseconds\n\n    \n\n    \n\n        \nmail.imap.appendbuffersize\n\n        \nMaximum size of a message to buffer in memory when appending to an IMAP folder.\n\n        \nNone\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.connectionpoolsize\n\n        \nMaximum number of available connections in the connection pool.\n\n        \n1\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.connectionpooltimeout\n\n        \nTimeout value in milliseconds for connection pool connections. \n\n        \n45000ms\n\n        \nAny Integer\n\n    \n\n    \n\n        \nmail.imap.separatestoreconnection\n\n        \nFlag to indicate whether to use a dedicated store connection for store commands.\n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.auth.login.disable\n\n        \nIf true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.auth.plain.disable\n\n        \nIf true, prevents use of the AUTHENTICATE PLAIN command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.auth.ntlm.disable\n\n        \nIf true, prevents use of the AUTHENTICATE NTLM command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.proxyauth.user\n\n        \nIf the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property.\n\n        \nNone\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.localaddress\n\n        \nLocal address (host name) to bind to when creating the IMAP socket.\n\n        \nDefaults to the address picked by the Socket class.\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.localport\n\n        \nLocal port number to bind to when creating the IMAP socket.\n\n        \nDefaults to the port number picked by the Socket class.\n\n        \nValid String value\n\n    \n\n    \n\n        \nmail.imap.sasl.enable\n\n        \nIf set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.sasl.mechanisms\n\n        \nA space or comma separated list of SASL mechanism names to try to use.\n\n        \nNone\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.sasl.authorizationid\n\n        \nThe authorization ID to use in the SASL authentication.\n\n        \nIf not set, the authentication ID (user name) is used.\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.sasl.realm\n\n        \nThe realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5.\n\n        \nNone\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.auth.ntlm.domain\n\n        \nThe NTLM authentication domain.\n\n        \nNone\n\n        \nValid string value\n\n    \n\n    \n\n        \nThe NTLM authentication domain.\n\n        \nNTLM protocol-specific flags.\n\n        \nNone\n\n        \nValid integer value\n\n    \n\n    \n\n        \nmail.imap.socketFactory\n\n        \nIf set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets.\n\n        \nNone\n\n        \nValid SocketFactory\n\n    \n\n    \n\n        \nmail.imap.socketFactory.class\n\n        \nIf set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets.\n\n        \nNone\n\n        \nValid string\n\n    \n\n    \n\n        \nmail.imap.socketFactory.fallback\n\n        \nIf set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. \n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.socketFactory.port\n\n        \nSpecifies the port to connect to when using the specified socket factory. Default port is used when not set.\n\n        \n143\n\n        \nValid Integer\n\n    \n\n    \n\n        \nmail.imap.ssl.checkserveridentity\n\n        \nIf set to true, check the server identity as specified by RFC 2595.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.ssl.trust\n\n        \nIf set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '\n', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents.\n\n        \n\n        \nValid String\n\n    \n\n    \n\n        \nmail.imap.ssl.socketFactory\n\n        \nIf set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets.\n\n        \nNone\n\n        \nSSL Socket Factory\n\n    \n\n    \n\n        \nmail.imap.ssl.socketFactory.class\n\n        \nIf set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.imap.ssl.socketFactory.port\n\n        \nSpecifies the port to connect to when using the specified socket factory.\n\n        \nthe default port will be used-993\n\n        \nvalid port number\n\n    \n\n    \n\n        \nmail.imap.ssl.protocols\n\n        \nSpecifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method.\n\n        \nNone\n\n        \nValid string\n\n    \n\n    \n\n        \nmail.imap.starttls.enable\n\n        \nIf true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.socks.host\n\n        \nSpecifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.imap.socks.port\n\n        \nSpecifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080.\n\n        \n1080\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.imap.minidletime\n\n        \nThis property sets the delay in milliseconds.\n\n        \n10 milliseconds\n\n        \ntime in seconds (Integer)\n\n    \n\n    \n\n        \nmail.imap.enableimapevents\n\n        \nEnable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.folder.class\n\n        \nClass name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store)\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.connectiontimeout\n\n        \nSocket connection timeout value in milliseconds.\n\n        \nInfinite timeout\n\n        \nInteger value\n\n    \n\n    \n\n        \nmail.pop3.timeout\n\n        \nSocket I/O timeout value in milliseconds. \n\n        \nInfinite timeout\n\n        \nInteger value\n\n    \n\n    \n\n        \nmail.pop3.message.class\n\n        \nClass name of a subclass of com.sun.mail.pop3.POP3Message\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.localaddress\n\n        \nLocal address (host name) to bind to when creating the POP3 socket.\n\n        \nDefaults to the address picked by the Socket class.\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.localport\n\n        \nLocal port number to bind to when creating the POP3 socket.\n\n        \nDefaults to the port number picked by the Socket class.\n\n        \nValid port number\n\n    \n\n    \n\n        \nmail.pop3.apop.enable\n\n        \nIf set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.socketFactory\n\n        \nIf set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets.\n\n        \nNone\n\n        \nSocket Factory\n\n    \n\n    \n\n        \nmail.pop3.socketFactory.class\n\n        \nIf set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.socketFactory.fallback\n\n        \nIf set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.socketFactory.port\n\n        \nSpecifies the port to connect to when using the specified socket factory.\n\n        \nDefault port\n\n        \nValid port number\n\n    \n\n    \n\n        \nmail.pop3.ssl.checkserveridentity\n\n        \nIf set to true, check the server identity as specified by RFC 2595. \n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.ssl.trust\n\n        \nIf set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to '\n', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents.\n\n        \n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.ssl.socketFactory\n\n        \nIf set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets.\n\n        \nNone\n\n        \nSSL Socket Factory\n\n    \n\n    \n\n        \nmail.pop3.ssl.checkserveridentity\n\n        \nIf set to true, check the server identity as specified by RFC 2595. \n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.ssl.trust\n\n        \n If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted. \n\n        \ntrust depends on the certificate the server presents.\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.ssl.socketFactory\n\n        \nIf set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets.\n\n        \nNone\n\n        \nSSL Socket Factory\n\n    \n\n    \n\n        \nmail.pop3.ssl.socketFactory.class\n\n        \nIf set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets. \n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.ssl.socketFactory.p\n\n        \nSpecifies the port to connect to when using the specified socket factory.\n\n        \n995\n\n        \nValid Integer\n\n    \n\n    \n\n        \nmail.pop3.ssl.protocols\n\n        \nSpecifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.starttls.enable\n\n        \nIf true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.starttls.required\n\n        \nIf true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.socks.host\n\n        \nSpecifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.socks.port\n\n        \nSpecifies the port number for the SOCKS5 proxy server.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.disabletop\n\n        \nIf set to true, the POP3 TOP command will not be used to fetch message headers. \n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.forgettopheaders\n\n        \nIf set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.filecache.enable\n\n        \nIf set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.filecache.dir\n\n        \nIf the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.cachewriteto\n\n        \nControls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.keepmessagecontent\n\n        \nIf this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method). \n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\n@source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string);\n\n\n\n\nFollowing example illustrates how to receive events in \nxml\n format using email source. In this example only mandatory parameters are defined in the  in the stream definition. For other parameters default values are taken. since search term is not defined, it poll and take all new messages in the inbox folder\n\n\n\nEXAMPLE 2\n\n\n@source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string);\n\n\n\n\nFollowing example illustrates how to receive events in \nxml\n format using email source. The email source polls the mail account in every 500 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term (email messages which come from\nfrom.account@.\nhost name\n, contains \ncc.account\n in cc receipts list, and \nStream Processor\n words in the mail subject) In the example, action after processes is defined as the \nDELETE\n, so that after processing the event, corresponding mail is deleted from the mail folder.", 
            "title": "1.0.9"
        }, 
        {
            "location": "/api/1.0.9/#api-docs-v109", 
            "text": "", 
            "title": "API Docs - v1.0.9"
        }, 
        {
            "location": "/api/1.0.9/#sink", 
            "text": "", 
            "title": "Sink"
        }, 
        {
            "location": "/api/1.0.9/#email-sink", 
            "text": "The email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken for the optional parameters. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters). Further, some email account required to enable 'access to less secure apps' option (for gmail account you can enable it via https://myaccount.google.com/lesssecureapps).  Syntax  @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , @map(...)))  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         username \n         Username of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com). \n         \n         STRING \n         No \n         No \n     \n     \n         address \n         Address of the email account which is used to send emails. \n         \n         STRING \n         No \n         No \n     \n     \n         password \n         Password of the email account. \n         \n         STRING \n         No \n         No \n     \n     \n         host \n         Host name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account. \n         smtp.gmail.com \n         STRING \n         Yes \n         No \n     \n     \n         port \n         The port which is used to create the connection. \n         '465' the default value is only valid is ssl enable \n         INT \n         Yes \n         No \n     \n     \n         ssl.enable \n         Whether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection. \n         true \n         BOOL \n         Yes \n         No \n     \n     \n         auth \n         Whether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command. \n         true \n         BOOL \n         Yes \n         No \n     \n     \n         content.type \n         Content type can be either 'text/plain' or 'text/html'. \n         text/plain \n         STRING \n         Yes \n         No \n     \n     \n         subject \n         Subject of the mail which has to be send. \n         \n         STRING \n         No \n         Yes \n     \n     \n         to \n         Address of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list. \n         \n         STRING \n         No \n         Yes \n     \n     \n         cc \n         Address of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list. \n         None \n         STRING \n         Yes \n         No \n     \n     \n         bcc \n         Address of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list. \n         None \n         STRING \n         Yes \n         No \n       System Parameters  \n     \n         Name \n         Description \n         Default Value \n         Possible Parameters \n     \n     \n         mail.smtp.ssl.trust \n         If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to \" \", all hosts are trusted. If set to a whitespace separated list of hosts, those hosts are trusted. Otherwise, trust depends on the certificate the server presents. \n         \n         String \n     \n     \n         mail.smtp.connectiontimeout \n         Socket connection timeout value in milliseconds.  \n         infinite timeout \n         Any Integer \n     \n     \n         mail.smtp.timeout \n         Socket I/O timeout value in milliseconds.  \n         infinite timeout \n         Any Integer \n     \n     \n         mail.smtp.from \n         Email address to use for SMTP MAIL command. This sets the envelope return address. \n         Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). \n         Valid email address \n     \n     \n         mail.smtp.localport \n         Local port number to bind to when creating the SMTP socket. \n         Defaults to the port number picked by the Socket class. \n         Any Integer \n     \n     \n         mail.smtp.ehlo \n         If false, do not attempt to sign on with the EHLO command. \n         true \n         true or false \n     \n     \n         mail.smtp.auth.login.disable \n         If true, prevents use of the AUTH LOGIN command. \n         false \n         true or false \n     \n     \n         mail.smtp.auth.plain.disable \n         If true, prevents use of the AUTH PLAIN command. \n         false \n         true or false \n     \n     \n         mail.smtp.auth.digest-md5.disable \n         If true, prevents use of the AUTH DIGEST-MD5 command. \n         false \n         true or false \n     \n     \n         mail.smtp.auth.ntlm.disable \n         If true, prevents use of the AUTH NTLM command \n         false \n         true or false \n     \n     \n         mail.smtp.auth.ntlm.domain \n         The NTLM authentication domain. \n         None \n         Valid NTLM authentication domain name \n     \n     \n         mail.smtp.auth.ntlm.flags \n         NTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details. \n         None \n         Valid NTLM protocol-specific flags. \n     \n     \n         mail.smtp.dsn.notify \n         The NOTIFY option to the RCPT command. \n         None \n         Either NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas). \n     \n     \n         mail.smtp.dsn.ret \n         The RET option to the MAIL command. \n         None \n         Either FULL or HDRS. \n     \n     \n         mail.smtp.sendpartial \n         If set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address. \n         false \n         true or false \n     \n     \n         mail.smtp.sasl.enable \n         If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. \n         false \n         true or false \n     \n     \n         mail.smtp.sasl.mechanisms \n         A space or comma separated list of SASL mechanism names to try to use. \n         None \n         \n     \n     \n         mail.smtp.sasl.authorizationid \n         The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. \n         username \n         Valid ID \n     \n     \n         mail.smtp.sasl.realm \n         The realm to use with DIGEST-MD5 authentication. \n         None \n         \n     \n     \n         mail.smtp.quitwait \n         If set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command. \n         false \n         true or false \n     \n     \n         mail.smtp.reportsuccess \n         If set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful. \n         false \n         true or false \n     \n     \n         mail.smtp.socketFactory \n         If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets. \n         None \n         Socket Factory \n     \n     \n         mail.smtp.socketFactory.class \n         If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets. \n         None \n         \n     \n     \n         mail.smtp.socketFactory.fallback \n         If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. \n         true \n         true or false \n     \n     \n         mail.smtp.socketFactory.port \n         Specifies the port to connect to when using the specified socket factory \n         25 \n         Valid port number \n     \n     \n         mail.smtp.ssl.protocols \n         Specifies the SSL protocols that will be enabled for SSL connections. \n         None \n         The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. \n     \n     \n         mail.smtp.starttls.enable \n         If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. \n         false \n         true or false \n     \n     \n         mail.smtp.starttls.required \n         If true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail. \n         false \n         true or false \n     \n     \n         mail.smtp.socks.host \n         Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. \n         None \n         \n     \n     \n         mail.smtp.socks.port \n         Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. \n         1080 \n         valid port number \n     \n     \n         mail.smtp.auth.ntlm.disable \n         If true, prevents use of the AUTH NTLM command \n         false \n         true or false \n     \n     \n         mail.smtp.mailextension \n         Extension string to append to the MAIL command. \n         None \n         \n     \n     \n         mail.smtp.userset \n         If set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue. \n         false \n         true or false \n       Examples  EXAMPLE 1  @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string);  Following example illustrates how to publish events using the email sinkusing mandatory parameters. As in the example, it publishes events come from the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection.  EXAMPLE 2  @sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string);  Following example illustrates how to configure the query parameters and system parameters in the deployment ymal file. Corresponding parameters need to be configure under name:'email' and namespace:'sink' as follows siddhi: extensions: - extension: name:'email' namespace:'sink' properties: username:sender.account address:sender.account@gmail.com address:sender.account@gmail.com As in the example, it publishes events comefrom the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection.  EXAMPLE 3  @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream fooStream (name string, age int, country string);  Following example illustrates how to publish events using the email sink. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given  to , cc  and  bcc  recipients using a secure connection.  name  in the  subject  attribute will be the value of the  name  parameter in the corresponding output event", 
            "title": "email (Sink)"
        }, 
        {
            "location": "/api/1.0.9/#source", 
            "text": "", 
            "title": "Source"
        }, 
        {
            "location": "/api/1.0.9/#email-source", 
            "text": "Email source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store ,  https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters).  Syntax  @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...)))  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         username \n         user name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account. \n         \n         STRING \n         No \n         No \n     \n     \n         password \n         password of the email account \n         \n         STRING \n         No \n         No \n     \n     \n         store \n         Store type that used to receive emails. it can be either imap or pop3. \n         imap \n         STRING \n         Yes \n         No \n     \n     \n         host \n         Host name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable. \n         If store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'. \n         STRING \n         Yes \n         No \n     \n     \n         port \n         The port which is used to create the connection. \n         '993' the default value is valid only if store is imap and ssl enable \n         INT \n         Yes \n         No \n     \n     \n         folder \n         Name of the folder to fetch email. \n         INBOX \n         STRING \n         Yes \n         No \n     \n     \n         search.term \n         Option which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol. \n         None \n         STRING \n         Yes \n         No \n     \n     \n         polling.interval \n         Interval that email source should poll the account to check for new mails arrivals in seconds. \n         600 \n         LONG \n         Yes \n         No \n     \n     \n         action.after.processed \n         Action that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE \n         NONE \n         STRING \n         Yes \n         No \n     \n     \n         folder.to.move \n         The name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move. \n         \n         STRING \n         No \n         No \n     \n     \n         content.type \n         Content type of the email. It can be either 'text/plain' or 'text/html.' \n         text/plain \n         STRING \n         Yes \n         No \n     \n     \n         ssl.enable \n         If it is 'true' then use a secure port to establish the connection. The possible values are 'true or false. \n         true \n         BOOL \n         Yes \n         No \n       System Parameters  \n     \n         Name \n         Description \n         Default Value \n         Possible Parameters \n     \n     \n         mail.imap.partialfetch \n         Controls whether the IMAP partial-fetch capability should be used \n         true \n         true or false \n     \n     \n         mail.imap.fetchsize \n         Partial fetch size in bytes. \n         16K \n         value in bytes \n     \n     \n         mail.imap.peek \n         If set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage. \n         false \n         true or false \n     \n     \n         mail.imap.connectiontimeout \n         Socket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket. \n         infinity timeout \n         Any Integer value \n     \n     \n         mail.imap.timeout \n         Socket read timeout value in milliseconds. This timeout is implemented by java.net.Socket. \n         infinity timeout \n         Any Integer value \n     \n     \n         mail.imap.writetimeout \n         Socket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection. \n         infinity timeout \n         Any Integer value \n     \n     \n         mail.imap.statuscachetimeout \n         Timeout value in milliseconds for cache of STATUS command response. \n         1000ms \n         Time out in miliseconds \n     \n     \n         mail.imap.appendbuffersize \n         Maximum size of a message to buffer in memory when appending to an IMAP folder. \n         None \n         Any Integer value \n     \n     \n         mail.imap.connectionpoolsize \n         Maximum number of available connections in the connection pool. \n         1 \n         Any Integer value \n     \n     \n         mail.imap.connectionpooltimeout \n         Timeout value in milliseconds for connection pool connections.  \n         45000ms \n         Any Integer \n     \n     \n         mail.imap.separatestoreconnection \n         Flag to indicate whether to use a dedicated store connection for store commands. \n         true \n         true or false \n     \n     \n         mail.imap.auth.login.disable \n         If true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command. \n         false \n         true or false \n     \n     \n         mail.imap.auth.plain.disable \n         If true, prevents use of the AUTHENTICATE PLAIN command. \n         false \n         true or false \n     \n     \n         mail.imap.auth.ntlm.disable \n         If true, prevents use of the AUTHENTICATE NTLM command. \n         false \n         true or false \n     \n     \n         mail.imap.proxyauth.user \n         If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property. \n         None \n         Valid string value \n     \n     \n         mail.imap.localaddress \n         Local address (host name) to bind to when creating the IMAP socket. \n         Defaults to the address picked by the Socket class. \n         Valid string value \n     \n     \n         mail.imap.localport \n         Local port number to bind to when creating the IMAP socket. \n         Defaults to the port number picked by the Socket class. \n         Valid String value \n     \n     \n         mail.imap.sasl.enable \n         If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. \n         false \n         true or false \n     \n     \n         mail.imap.sasl.mechanisms \n         A space or comma separated list of SASL mechanism names to try to use. \n         None \n         Valid string value \n     \n     \n         mail.imap.sasl.authorizationid \n         The authorization ID to use in the SASL authentication. \n         If not set, the authentication ID (user name) is used. \n         Valid string value \n     \n     \n         mail.imap.sasl.realm \n         The realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5. \n         None \n         Valid string value \n     \n     \n         mail.imap.auth.ntlm.domain \n         The NTLM authentication domain. \n         None \n         Valid string value \n     \n     \n         The NTLM authentication domain. \n         NTLM protocol-specific flags. \n         None \n         Valid integer value \n     \n     \n         mail.imap.socketFactory \n         If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets. \n         None \n         Valid SocketFactory \n     \n     \n         mail.imap.socketFactory.class \n         If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets. \n         None \n         Valid string \n     \n     \n         mail.imap.socketFactory.fallback \n         If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class.  \n         true \n         true or false \n     \n     \n         mail.imap.socketFactory.port \n         Specifies the port to connect to when using the specified socket factory. Default port is used when not set. \n         143 \n         Valid Integer \n     \n     \n         mail.imap.ssl.checkserveridentity \n         If set to true, check the server identity as specified by RFC 2595. \n         false \n         true or false \n     \n     \n         mail.imap.ssl.trust \n         If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. \n         \n         Valid String \n     \n     \n         mail.imap.ssl.socketFactory \n         If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets. \n         None \n         SSL Socket Factory \n     \n     \n         mail.imap.ssl.socketFactory.class \n         If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets. \n         None \n         Valid String \n     \n     \n         mail.imap.ssl.socketFactory.port \n         Specifies the port to connect to when using the specified socket factory. \n         the default port will be used-993 \n         valid port number \n     \n     \n         mail.imap.ssl.protocols \n         Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. \n         None \n         Valid string \n     \n     \n         mail.imap.starttls.enable \n         If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. \n         false \n         true or false \n     \n     \n         mail.imap.socks.host \n         Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. \n         None \n         Valid String \n     \n     \n         mail.imap.socks.port \n         Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. \n         1080 \n         Valid String \n     \n     \n         mail.imap.minidletime \n         This property sets the delay in milliseconds. \n         10 milliseconds \n         time in seconds (Integer) \n     \n     \n         mail.imap.enableimapevents \n         Enable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string. \n         false \n         true or false \n     \n     \n         mail.imap.folder.class \n         Class name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store) \n         None \n         Valid String \n     \n     \n         mail.pop3.connectiontimeout \n         Socket connection timeout value in milliseconds. \n         Infinite timeout \n         Integer value \n     \n     \n         mail.pop3.timeout \n         Socket I/O timeout value in milliseconds.  \n         Infinite timeout \n         Integer value \n     \n     \n         mail.pop3.message.class \n         Class name of a subclass of com.sun.mail.pop3.POP3Message \n         None \n         Valid String \n     \n     \n         mail.pop3.localaddress \n         Local address (host name) to bind to when creating the POP3 socket. \n         Defaults to the address picked by the Socket class. \n         Valid String \n     \n     \n         mail.pop3.localport \n         Local port number to bind to when creating the POP3 socket. \n         Defaults to the port number picked by the Socket class. \n         Valid port number \n     \n     \n         mail.pop3.apop.enable \n         If set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password. \n         false \n         true or false \n     \n     \n         mail.pop3.socketFactory \n         If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets. \n         None \n         Socket Factory \n     \n     \n         mail.pop3.socketFactory.class \n         If set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets. \n         None \n         Valid String \n     \n     \n         mail.pop3.socketFactory.fallback \n         If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. \n         false \n         true or false \n     \n     \n         mail.pop3.socketFactory.port \n         Specifies the port to connect to when using the specified socket factory. \n         Default port \n         Valid port number \n     \n     \n         mail.pop3.ssl.checkserveridentity \n         If set to true, check the server identity as specified by RFC 2595.  \n         false \n         true or false \n     \n     \n         mail.pop3.ssl.trust \n         If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. \n         \n         Valid String \n     \n     \n         mail.pop3.ssl.socketFactory \n         If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. \n         None \n         SSL Socket Factory \n     \n     \n         mail.pop3.ssl.checkserveridentity \n         If set to true, check the server identity as specified by RFC 2595.  \n         false \n         true or false \n     \n     \n         mail.pop3.ssl.trust \n          If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.  \n         trust depends on the certificate the server presents. \n         Valid String \n     \n     \n         mail.pop3.ssl.socketFactory \n         If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. \n         None \n         SSL Socket Factory \n     \n     \n         mail.pop3.ssl.socketFactory.class \n         If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets.  \n         None \n         Valid String \n     \n     \n         mail.pop3.ssl.socketFactory.p \n         Specifies the port to connect to when using the specified socket factory. \n         995 \n         Valid Integer \n     \n     \n         mail.pop3.ssl.protocols \n         Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. \n         None \n         Valid String \n     \n     \n         mail.pop3.starttls.enable \n         If true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands \n         false \n         true or false \n     \n     \n         mail.pop3.starttls.required \n         If true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail. \n         false \n         true or false \n     \n     \n         mail.pop3.socks.host \n         Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. \n         None \n         Valid String \n     \n     \n         mail.pop3.socks.port \n         Specifies the port number for the SOCKS5 proxy server. \n         None \n         Valid String \n     \n     \n         mail.pop3.disabletop \n         If set to true, the POP3 TOP command will not be used to fetch message headers.  \n         false \n         true or false \n     \n     \n         mail.pop3.forgettopheaders \n         If set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command. \n         false \n         true or false \n     \n     \n         mail.pop3.filecache.enable \n         If set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. \n         false \n         true or false \n     \n     \n         mail.pop3.filecache.dir \n         If the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files. \n         None \n         Valid String \n     \n     \n         mail.pop3.cachewriteto \n         Controls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached. \n         false \n         true or false \n     \n     \n         mail.pop3.keepmessagecontent \n         If this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method).  \n         false \n         true or false \n       Examples  EXAMPLE 1  @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string);  Following example illustrates how to receive events in  xml  format using email source. In this example only mandatory parameters are defined in the  in the stream definition. For other parameters default values are taken. since search term is not defined, it poll and take all new messages in the inbox folder  EXAMPLE 2  @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string);  Following example illustrates how to receive events in  xml  format using email source. The email source polls the mail account in every 500 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term (email messages which come from from.account@. host name , contains  cc.account  in cc receipts list, and  Stream Processor  words in the mail subject) In the example, action after processes is defined as the  DELETE , so that after processing the event, corresponding mail is deleted from the mail folder.", 
            "title": "email (Source)"
        }, 
        {
            "location": "/api/1.0.8/", 
            "text": "API Docs - v1.0.8\n\n\nSink\n\n\nemail \n(Sink)\n\n\nThe email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken for the optional parameters. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters). Further, some email account required to enable 'access to less secure apps' option (for gmail account you can enable it via https://myaccount.google.com/lesssecureapps).\n\n\n\nSyntax\n\n\n@sink(type=\nemail\n, username=\nSTRING\n, address=\nSTRING\n, password=\nSTRING\n, host=\nSTRING\n, port=\nINT\n, ssl.enable=\nBOOL\n, auth=\nBOOL\n, content.type=\nSTRING\n, subject=\nSTRING\n, to=\nSTRING\n, cc=\nSTRING\n, bcc=\nSTRING\n, @map(...)))\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \nusername\n\n        \nUsername of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com).\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \naddress\n\n        \nAddress of the email account which is used to send emails.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \npassword\n\n        \nPassword of the email account.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \nhost\n\n        \nHost name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account.\n\n        \nsmtp.gmail.com\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nport\n\n        \nThe port which is used to create the connection.\n\n        \n'465' the default value is only valid is ssl enable\n\n        \nINT\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nssl.enable\n\n        \nWhether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection.\n\n        \ntrue\n\n        \nBOOL\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nauth\n\n        \nWhether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command.\n\n        \ntrue\n\n        \nBOOL\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \ncontent.type\n\n        \nContent type can be either 'text/plain' or 'text/html'.\n\n        \ntext/plain\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nsubject\n\n        \nSubject of the mail which has to be send.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nYes\n\n    \n\n    \n\n        \nto\n\n        \nAddress of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nYes\n\n    \n\n    \n\n        \ncc\n\n        \nAddress of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list.\n\n        \nNone\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nbcc\n\n        \nAddress of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list.\n\n        \nNone\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n\n\n\nSystem Parameters\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Parameters\n\n    \n\n    \n\n        \nmail.smtp.ssl.trust\n\n        \nIf set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to \"\n\", all hosts are trusted. If set to a whitespace separated list of hosts, those hosts are trusted. Otherwise, trust depends on the certificate the server presents.\n\n        \n\n        \nString\n\n    \n\n    \n\n        \nmail.smtp.connectiontimeout\n\n        \nSocket connection timeout value in milliseconds. \n\n        \ninfinite timeout\n\n        \nAny Integer\n\n    \n\n    \n\n        \nmail.smtp.timeout\n\n        \nSocket I/O timeout value in milliseconds. \n\n        \ninfinite timeout\n\n        \nAny Integer\n\n    \n\n    \n\n        \nmail.smtp.from\n\n        \nEmail address to use for SMTP MAIL command. This sets the envelope return address.\n\n        \nDefaults to msg.getFrom() or InternetAddress.getLocalAddress().\n\n        \nValid email address\n\n    \n\n    \n\n        \nmail.smtp.localport\n\n        \nLocal port number to bind to when creating the SMTP socket.\n\n        \nDefaults to the port number picked by the Socket class.\n\n        \nAny Integer\n\n    \n\n    \n\n        \nmail.smtp.ehlo\n\n        \nIf false, do not attempt to sign on with the EHLO command.\n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.login.disable\n\n        \nIf true, prevents use of the AUTH LOGIN command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.plain.disable\n\n        \nIf true, prevents use of the AUTH PLAIN command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.digest-md5.disable\n\n        \nIf true, prevents use of the AUTH DIGEST-MD5 command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.ntlm.disable\n\n        \nIf true, prevents use of the AUTH NTLM command\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.ntlm.domain\n\n        \nThe NTLM authentication domain.\n\n        \nNone\n\n        \nValid NTLM authentication domain name\n\n    \n\n    \n\n        \nmail.smtp.auth.ntlm.flags\n\n        \nNTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details.\n\n        \nNone\n\n        \nValid NTLM protocol-specific flags.\n\n    \n\n    \n\n        \nmail.smtp.dsn.notify\n\n        \nThe NOTIFY option to the RCPT command.\n\n        \nNone\n\n        \nEither NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas).\n\n    \n\n    \n\n        \nmail.smtp.dsn.ret\n\n        \nThe RET option to the MAIL command.\n\n        \nNone\n\n        \nEither FULL or HDRS.\n\n    \n\n    \n\n        \nmail.smtp.sendpartial\n\n        \nIf set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.sasl.enable\n\n        \nIf set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.sasl.mechanisms\n\n        \nA space or comma separated list of SASL mechanism names to try to use.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.sasl.authorizationid\n\n        \nThe authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used.\n\n        \nusername\n\n        \nValid ID\n\n    \n\n    \n\n        \nmail.smtp.sasl.realm\n\n        \nThe realm to use with DIGEST-MD5 authentication.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.quitwait\n\n        \nIf set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.reportsuccess\n\n        \nIf set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.socketFactory\n\n        \nIf set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets.\n\n        \nNone\n\n        \nSocket Factory\n\n    \n\n    \n\n        \nmail.smtp.socketFactory.class\n\n        \nIf set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.socketFactory.fallback\n\n        \nIf set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class.\n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.socketFactory.port\n\n        \nSpecifies the port to connect to when using the specified socket factory\n\n        \n25\n\n        \nValid port number\n\n    \n\n    \n\n        \nmail.smtp.ssl.protocols\n\n        \nSpecifies the SSL protocols that will be enabled for SSL connections.\n\n        \nNone\n\n        \nThe property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method.\n\n    \n\n    \n\n        \nmail.smtp.starttls.enable\n\n        \nIf true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.starttls.required\n\n        \nIf true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.socks.host\n\n        \nSpecifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.socks.port\n\n        \nSpecifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080.\n\n        \n1080\n\n        \nvalid port number\n\n    \n\n    \n\n        \nmail.smtp.auth.ntlm.disable\n\n        \nIf true, prevents use of the AUTH NTLM command\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.mailextension\n\n        \nExtension string to append to the MAIL command.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.userset\n\n        \nIf set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\n@sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string);\n\n\n\n\nFollowing example illustrates how to publish events using the email sinkusing mandatory parameters. As in the example, it publishes events come from the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection.\n\n\n\nEXAMPLE 2\n\n\n@sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string);\n\n\n\n\nFollowing example illustrates how to configure the query parameters and system parameters in the deployment ymal file.\nCorresponding parameters need to be configure under name:'email' and namespace:'sink' as follows\nsiddhi:\nextensions:\n-\nextension:\nname:'email'\nnamespace:'sink'\nproperties:\nusername:sender.account\naddress:sender.account@gmail.com\naddress:sender.account@gmail.com\nAs in the example, it publishes events comefrom the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection.\n\n\n\nEXAMPLE 3\n\n\n@sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream fooStream (name string, age int, country string);\n\n\n\n\nFollowing example illustrates how to publish events using the email sink. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given \nto\n,\ncc\n and \nbcc\n recipients using a secure connection. \nname\n in the \nsubject\n attribute will be the value of the \nname\n parameter in the corresponding output event\n\n\n\nSource\n\n\nemail \n(Source)\n\n\nEmail source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store ,  https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters).\n\n\n\nSyntax\n\n\n@source(type=\nemail\n, username=\nSTRING\n, password=\nSTRING\n, store=\nSTRING\n, host=\nSTRING\n, port=\nINT\n, folder=\nSTRING\n, search.term=\nSTRING\n, polling.interval=\nLONG\n, action.after.processed=\nSTRING\n, folder.to.move=\nSTRING\n, content.type=\nSTRING\n, ssl.enable=\nBOOL\n, @map(...)))\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \nusername\n\n        \nuser name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \npassword\n\n        \npassword of the email account\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \nstore\n\n        \nStore type that used to receive emails. it can be either imap or pop3.\n\n        \nimap\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nhost\n\n        \nHost name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable.\n\n        \nIf store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'.\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nport\n\n        \nThe port which is used to create the connection.\n\n        \n'993' the default value is valid only if store is imap and ssl enable\n\n        \nINT\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nfolder\n\n        \nName of the folder to fetch email.\n\n        \nINBOX\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nsearch.term\n\n        \nOption which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol.\n\n        \nNone\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \npolling.interval\n\n        \nInterval that email source should poll the account to check for new mails arrivals in seconds.\n\n        \n600\n\n        \nLONG\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \naction.after.processed\n\n        \nAction that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE\n\n        \nNONE\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nfolder.to.move\n\n        \nThe name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \ncontent.type\n\n        \nContent type of the email. It can be either 'text/plain' or 'text/html.'\n\n        \ntext/plain\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nssl.enable\n\n        \nIf it is 'true' then use a secure port to establish the connection. The possible values are 'true or false.\n\n        \ntrue\n\n        \nBOOL\n\n        \nYes\n\n        \nNo\n\n    \n\n\n\n\nSystem Parameters\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Parameters\n\n    \n\n    \n\n        \nmail.imap.partialfetch\n\n        \nControls whether the IMAP partial-fetch capability should be used\n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.fetchsize\n\n        \nPartial fetch size in bytes.\n\n        \n16K\n\n        \nvalue in bytes\n\n    \n\n    \n\n        \nmail.imap.peek\n\n        \nIf set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.connectiontimeout\n\n        \nSocket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket.\n\n        \ninfinity timeout\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.timeout\n\n        \nSocket read timeout value in milliseconds. This timeout is implemented by java.net.Socket.\n\n        \ninfinity timeout\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.writetimeout\n\n        \nSocket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection.\n\n        \ninfinity timeout\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.statuscachetimeout\n\n        \nTimeout value in milliseconds for cache of STATUS command response.\n\n        \n1000ms\n\n        \nTime out in miliseconds\n\n    \n\n    \n\n        \nmail.imap.appendbuffersize\n\n        \nMaximum size of a message to buffer in memory when appending to an IMAP folder.\n\n        \nNone\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.connectionpoolsize\n\n        \nMaximum number of available connections in the connection pool.\n\n        \n1\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.connectionpooltimeout\n\n        \nTimeout value in milliseconds for connection pool connections. \n\n        \n45000ms\n\n        \nAny Integer\n\n    \n\n    \n\n        \nmail.imap.separatestoreconnection\n\n        \nFlag to indicate whether to use a dedicated store connection for store commands.\n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.auth.login.disable\n\n        \nIf true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.auth.plain.disable\n\n        \nIf true, prevents use of the AUTHENTICATE PLAIN command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.auth.ntlm.disable\n\n        \nIf true, prevents use of the AUTHENTICATE NTLM command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.proxyauth.user\n\n        \nIf the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property.\n\n        \nNone\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.localaddress\n\n        \nLocal address (host name) to bind to when creating the IMAP socket.\n\n        \nDefaults to the address picked by the Socket class.\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.localport\n\n        \nLocal port number to bind to when creating the IMAP socket.\n\n        \nDefaults to the port number picked by the Socket class.\n\n        \nValid String value\n\n    \n\n    \n\n        \nmail.imap.sasl.enable\n\n        \nIf set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.sasl.mechanisms\n\n        \nA space or comma separated list of SASL mechanism names to try to use.\n\n        \nNone\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.sasl.authorizationid\n\n        \nThe authorization ID to use in the SASL authentication.\n\n        \nIf not set, the authentication ID (user name) is used.\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.sasl.realm\n\n        \nThe realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5.\n\n        \nNone\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.auth.ntlm.domain\n\n        \nThe NTLM authentication domain.\n\n        \nNone\n\n        \nValid string value\n\n    \n\n    \n\n        \nThe NTLM authentication domain.\n\n        \nNTLM protocol-specific flags.\n\n        \nNone\n\n        \nValid integer value\n\n    \n\n    \n\n        \nmail.imap.socketFactory\n\n        \nIf set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets.\n\n        \nNone\n\n        \nValid SocketFactory\n\n    \n\n    \n\n        \nmail.imap.socketFactory.class\n\n        \nIf set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets.\n\n        \nNone\n\n        \nValid string\n\n    \n\n    \n\n        \nmail.imap.socketFactory.fallback\n\n        \nIf set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. \n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.socketFactory.port\n\n        \nSpecifies the port to connect to when using the specified socket factory. Default port is used when not set.\n\n        \n143\n\n        \nValid Integer\n\n    \n\n    \n\n        \nmail.imap.ssl.checkserveridentity\n\n        \nIf set to true, check the server identity as specified by RFC 2595.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.ssl.trust\n\n        \nIf set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '\n', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents.\n\n        \n\n        \nValid String\n\n    \n\n    \n\n        \nmail.imap.ssl.socketFactory\n\n        \nIf set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets.\n\n        \nNone\n\n        \nSSL Socket Factory\n\n    \n\n    \n\n        \nmail.imap.ssl.socketFactory.class\n\n        \nIf set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.imap.ssl.socketFactory.port\n\n        \nSpecifies the port to connect to when using the specified socket factory.\n\n        \nthe default port will be used-993\n\n        \nvalid port number\n\n    \n\n    \n\n        \nmail.imap.ssl.protocols\n\n        \nSpecifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method.\n\n        \nNone\n\n        \nValid string\n\n    \n\n    \n\n        \nmail.imap.starttls.enable\n\n        \nIf true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.socks.host\n\n        \nSpecifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.imap.socks.port\n\n        \nSpecifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080.\n\n        \n1080\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.imap.minidletime\n\n        \nThis property sets the delay in milliseconds.\n\n        \n10 milliseconds\n\n        \ntime in seconds (Integer)\n\n    \n\n    \n\n        \nmail.imap.enableimapevents\n\n        \nEnable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.folder.class\n\n        \nClass name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store)\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.connectiontimeout\n\n        \nSocket connection timeout value in milliseconds.\n\n        \nInfinite timeout\n\n        \nInteger value\n\n    \n\n    \n\n        \nmail.pop3.timeout\n\n        \nSocket I/O timeout value in milliseconds. \n\n        \nInfinite timeout\n\n        \nInteger value\n\n    \n\n    \n\n        \nmail.pop3.message.class\n\n        \nClass name of a subclass of com.sun.mail.pop3.POP3Message\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.localaddress\n\n        \nLocal address (host name) to bind to when creating the POP3 socket.\n\n        \nDefaults to the address picked by the Socket class.\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.localport\n\n        \nLocal port number to bind to when creating the POP3 socket.\n\n        \nDefaults to the port number picked by the Socket class.\n\n        \nValid port number\n\n    \n\n    \n\n        \nmail.pop3.apop.enable\n\n        \nIf set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.socketFactory\n\n        \nIf set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets.\n\n        \nNone\n\n        \nSocket Factory\n\n    \n\n    \n\n        \nmail.pop3.socketFactory.class\n\n        \nIf set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.socketFactory.fallback\n\n        \nIf set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.socketFactory.port\n\n        \nSpecifies the port to connect to when using the specified socket factory.\n\n        \nDefault port\n\n        \nValid port number\n\n    \n\n    \n\n        \nmail.pop3.ssl.checkserveridentity\n\n        \nIf set to true, check the server identity as specified by RFC 2595. \n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.ssl.trust\n\n        \nIf set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to '\n', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents.\n\n        \n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.ssl.socketFactory\n\n        \nIf set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets.\n\n        \nNone\n\n        \nSSL Socket Factory\n\n    \n\n    \n\n        \nmail.pop3.ssl.checkserveridentity\n\n        \nIf set to true, check the server identity as specified by RFC 2595. \n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.ssl.trust\n\n        \n If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted. \n\n        \ntrust depends on the certificate the server presents.\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.ssl.socketFactory\n\n        \nIf set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets.\n\n        \nNone\n\n        \nSSL Socket Factory\n\n    \n\n    \n\n        \nmail.pop3.ssl.socketFactory.class\n\n        \nIf set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets. \n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.ssl.socketFactory.p\n\n        \nSpecifies the port to connect to when using the specified socket factory.\n\n        \n995\n\n        \nValid Integer\n\n    \n\n    \n\n        \nmail.pop3.ssl.protocols\n\n        \nSpecifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.starttls.enable\n\n        \nIf true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.starttls.required\n\n        \nIf true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.socks.host\n\n        \nSpecifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.socks.port\n\n        \nSpecifies the port number for the SOCKS5 proxy server.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.disabletop\n\n        \nIf set to true, the POP3 TOP command will not be used to fetch message headers. \n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.forgettopheaders\n\n        \nIf set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.filecache.enable\n\n        \nIf set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.filecache.dir\n\n        \nIf the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.cachewriteto\n\n        \nControls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.keepmessagecontent\n\n        \nIf this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method). \n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\n@source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string);\n\n\n\n\nFollowing example illustrates how to receive events in \nxml\n format using email source. In this example only mandatory parameters are defined in the  in the stream definition. For other parameters default values are taken. since search term is not defined, it poll and take all new messages in the inbox folder\n\n\n\nEXAMPLE 2\n\n\n@source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string);\n\n\n\n\nFollowing example illustrates how to receive events in \nxml\n format using email source. The email source polls the mail account in every 500 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term (email messages which come from\nfrom.account@.\nhost name\n, contains \ncc.account\n in cc receipts list, and \nStream Processor\n words in the mail subject) In the example, action after processes is defined as the \nDELETE\n, so that after processing the event, corresponding mail is deleted from the mail folder.", 
            "title": "1.0.8"
        }, 
        {
            "location": "/api/1.0.8/#api-docs-v108", 
            "text": "", 
            "title": "API Docs - v1.0.8"
        }, 
        {
            "location": "/api/1.0.8/#sink", 
            "text": "", 
            "title": "Sink"
        }, 
        {
            "location": "/api/1.0.8/#email-sink", 
            "text": "The email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken for the optional parameters. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters). Further, some email account required to enable 'access to less secure apps' option (for gmail account you can enable it via https://myaccount.google.com/lesssecureapps).  Syntax  @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , @map(...)))  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         username \n         Username of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com). \n         \n         STRING \n         No \n         No \n     \n     \n         address \n         Address of the email account which is used to send emails. \n         \n         STRING \n         No \n         No \n     \n     \n         password \n         Password of the email account. \n         \n         STRING \n         No \n         No \n     \n     \n         host \n         Host name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account. \n         smtp.gmail.com \n         STRING \n         Yes \n         No \n     \n     \n         port \n         The port which is used to create the connection. \n         '465' the default value is only valid is ssl enable \n         INT \n         Yes \n         No \n     \n     \n         ssl.enable \n         Whether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection. \n         true \n         BOOL \n         Yes \n         No \n     \n     \n         auth \n         Whether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command. \n         true \n         BOOL \n         Yes \n         No \n     \n     \n         content.type \n         Content type can be either 'text/plain' or 'text/html'. \n         text/plain \n         STRING \n         Yes \n         No \n     \n     \n         subject \n         Subject of the mail which has to be send. \n         \n         STRING \n         No \n         Yes \n     \n     \n         to \n         Address of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list. \n         \n         STRING \n         No \n         Yes \n     \n     \n         cc \n         Address of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list. \n         None \n         STRING \n         Yes \n         No \n     \n     \n         bcc \n         Address of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list. \n         None \n         STRING \n         Yes \n         No \n       System Parameters  \n     \n         Name \n         Description \n         Default Value \n         Possible Parameters \n     \n     \n         mail.smtp.ssl.trust \n         If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to \" \", all hosts are trusted. If set to a whitespace separated list of hosts, those hosts are trusted. Otherwise, trust depends on the certificate the server presents. \n         \n         String \n     \n     \n         mail.smtp.connectiontimeout \n         Socket connection timeout value in milliseconds.  \n         infinite timeout \n         Any Integer \n     \n     \n         mail.smtp.timeout \n         Socket I/O timeout value in milliseconds.  \n         infinite timeout \n         Any Integer \n     \n     \n         mail.smtp.from \n         Email address to use for SMTP MAIL command. This sets the envelope return address. \n         Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). \n         Valid email address \n     \n     \n         mail.smtp.localport \n         Local port number to bind to when creating the SMTP socket. \n         Defaults to the port number picked by the Socket class. \n         Any Integer \n     \n     \n         mail.smtp.ehlo \n         If false, do not attempt to sign on with the EHLO command. \n         true \n         true or false \n     \n     \n         mail.smtp.auth.login.disable \n         If true, prevents use of the AUTH LOGIN command. \n         false \n         true or false \n     \n     \n         mail.smtp.auth.plain.disable \n         If true, prevents use of the AUTH PLAIN command. \n         false \n         true or false \n     \n     \n         mail.smtp.auth.digest-md5.disable \n         If true, prevents use of the AUTH DIGEST-MD5 command. \n         false \n         true or false \n     \n     \n         mail.smtp.auth.ntlm.disable \n         If true, prevents use of the AUTH NTLM command \n         false \n         true or false \n     \n     \n         mail.smtp.auth.ntlm.domain \n         The NTLM authentication domain. \n         None \n         Valid NTLM authentication domain name \n     \n     \n         mail.smtp.auth.ntlm.flags \n         NTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details. \n         None \n         Valid NTLM protocol-specific flags. \n     \n     \n         mail.smtp.dsn.notify \n         The NOTIFY option to the RCPT command. \n         None \n         Either NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas). \n     \n     \n         mail.smtp.dsn.ret \n         The RET option to the MAIL command. \n         None \n         Either FULL or HDRS. \n     \n     \n         mail.smtp.sendpartial \n         If set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address. \n         false \n         true or false \n     \n     \n         mail.smtp.sasl.enable \n         If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. \n         false \n         true or false \n     \n     \n         mail.smtp.sasl.mechanisms \n         A space or comma separated list of SASL mechanism names to try to use. \n         None \n         \n     \n     \n         mail.smtp.sasl.authorizationid \n         The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. \n         username \n         Valid ID \n     \n     \n         mail.smtp.sasl.realm \n         The realm to use with DIGEST-MD5 authentication. \n         None \n         \n     \n     \n         mail.smtp.quitwait \n         If set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command. \n         false \n         true or false \n     \n     \n         mail.smtp.reportsuccess \n         If set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful. \n         false \n         true or false \n     \n     \n         mail.smtp.socketFactory \n         If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets. \n         None \n         Socket Factory \n     \n     \n         mail.smtp.socketFactory.class \n         If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets. \n         None \n         \n     \n     \n         mail.smtp.socketFactory.fallback \n         If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. \n         true \n         true or false \n     \n     \n         mail.smtp.socketFactory.port \n         Specifies the port to connect to when using the specified socket factory \n         25 \n         Valid port number \n     \n     \n         mail.smtp.ssl.protocols \n         Specifies the SSL protocols that will be enabled for SSL connections. \n         None \n         The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. \n     \n     \n         mail.smtp.starttls.enable \n         If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. \n         false \n         true or false \n     \n     \n         mail.smtp.starttls.required \n         If true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail. \n         false \n         true or false \n     \n     \n         mail.smtp.socks.host \n         Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. \n         None \n         \n     \n     \n         mail.smtp.socks.port \n         Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. \n         1080 \n         valid port number \n     \n     \n         mail.smtp.auth.ntlm.disable \n         If true, prevents use of the AUTH NTLM command \n         false \n         true or false \n     \n     \n         mail.smtp.mailextension \n         Extension string to append to the MAIL command. \n         None \n         \n     \n     \n         mail.smtp.userset \n         If set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue. \n         false \n         true or false \n       Examples  EXAMPLE 1  @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string);  Following example illustrates how to publish events using the email sinkusing mandatory parameters. As in the example, it publishes events come from the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection.  EXAMPLE 2  @sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string);  Following example illustrates how to configure the query parameters and system parameters in the deployment ymal file. Corresponding parameters need to be configure under name:'email' and namespace:'sink' as follows siddhi: extensions: - extension: name:'email' namespace:'sink' properties: username:sender.account address:sender.account@gmail.com address:sender.account@gmail.com As in the example, it publishes events comefrom the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection.  EXAMPLE 3  @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream fooStream (name string, age int, country string);  Following example illustrates how to publish events using the email sink. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given  to , cc  and  bcc  recipients using a secure connection.  name  in the  subject  attribute will be the value of the  name  parameter in the corresponding output event", 
            "title": "email (Sink)"
        }, 
        {
            "location": "/api/1.0.8/#source", 
            "text": "", 
            "title": "Source"
        }, 
        {
            "location": "/api/1.0.8/#email-source", 
            "text": "Email source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store ,  https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters).  Syntax  @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...)))  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         username \n         user name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account. \n         \n         STRING \n         No \n         No \n     \n     \n         password \n         password of the email account \n         \n         STRING \n         No \n         No \n     \n     \n         store \n         Store type that used to receive emails. it can be either imap or pop3. \n         imap \n         STRING \n         Yes \n         No \n     \n     \n         host \n         Host name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable. \n         If store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'. \n         STRING \n         Yes \n         No \n     \n     \n         port \n         The port which is used to create the connection. \n         '993' the default value is valid only if store is imap and ssl enable \n         INT \n         Yes \n         No \n     \n     \n         folder \n         Name of the folder to fetch email. \n         INBOX \n         STRING \n         Yes \n         No \n     \n     \n         search.term \n         Option which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol. \n         None \n         STRING \n         Yes \n         No \n     \n     \n         polling.interval \n         Interval that email source should poll the account to check for new mails arrivals in seconds. \n         600 \n         LONG \n         Yes \n         No \n     \n     \n         action.after.processed \n         Action that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE \n         NONE \n         STRING \n         Yes \n         No \n     \n     \n         folder.to.move \n         The name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move. \n         \n         STRING \n         No \n         No \n     \n     \n         content.type \n         Content type of the email. It can be either 'text/plain' or 'text/html.' \n         text/plain \n         STRING \n         Yes \n         No \n     \n     \n         ssl.enable \n         If it is 'true' then use a secure port to establish the connection. The possible values are 'true or false. \n         true \n         BOOL \n         Yes \n         No \n       System Parameters  \n     \n         Name \n         Description \n         Default Value \n         Possible Parameters \n     \n     \n         mail.imap.partialfetch \n         Controls whether the IMAP partial-fetch capability should be used \n         true \n         true or false \n     \n     \n         mail.imap.fetchsize \n         Partial fetch size in bytes. \n         16K \n         value in bytes \n     \n     \n         mail.imap.peek \n         If set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage. \n         false \n         true or false \n     \n     \n         mail.imap.connectiontimeout \n         Socket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket. \n         infinity timeout \n         Any Integer value \n     \n     \n         mail.imap.timeout \n         Socket read timeout value in milliseconds. This timeout is implemented by java.net.Socket. \n         infinity timeout \n         Any Integer value \n     \n     \n         mail.imap.writetimeout \n         Socket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection. \n         infinity timeout \n         Any Integer value \n     \n     \n         mail.imap.statuscachetimeout \n         Timeout value in milliseconds for cache of STATUS command response. \n         1000ms \n         Time out in miliseconds \n     \n     \n         mail.imap.appendbuffersize \n         Maximum size of a message to buffer in memory when appending to an IMAP folder. \n         None \n         Any Integer value \n     \n     \n         mail.imap.connectionpoolsize \n         Maximum number of available connections in the connection pool. \n         1 \n         Any Integer value \n     \n     \n         mail.imap.connectionpooltimeout \n         Timeout value in milliseconds for connection pool connections.  \n         45000ms \n         Any Integer \n     \n     \n         mail.imap.separatestoreconnection \n         Flag to indicate whether to use a dedicated store connection for store commands. \n         true \n         true or false \n     \n     \n         mail.imap.auth.login.disable \n         If true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command. \n         false \n         true or false \n     \n     \n         mail.imap.auth.plain.disable \n         If true, prevents use of the AUTHENTICATE PLAIN command. \n         false \n         true or false \n     \n     \n         mail.imap.auth.ntlm.disable \n         If true, prevents use of the AUTHENTICATE NTLM command. \n         false \n         true or false \n     \n     \n         mail.imap.proxyauth.user \n         If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property. \n         None \n         Valid string value \n     \n     \n         mail.imap.localaddress \n         Local address (host name) to bind to when creating the IMAP socket. \n         Defaults to the address picked by the Socket class. \n         Valid string value \n     \n     \n         mail.imap.localport \n         Local port number to bind to when creating the IMAP socket. \n         Defaults to the port number picked by the Socket class. \n         Valid String value \n     \n     \n         mail.imap.sasl.enable \n         If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. \n         false \n         true or false \n     \n     \n         mail.imap.sasl.mechanisms \n         A space or comma separated list of SASL mechanism names to try to use. \n         None \n         Valid string value \n     \n     \n         mail.imap.sasl.authorizationid \n         The authorization ID to use in the SASL authentication. \n         If not set, the authentication ID (user name) is used. \n         Valid string value \n     \n     \n         mail.imap.sasl.realm \n         The realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5. \n         None \n         Valid string value \n     \n     \n         mail.imap.auth.ntlm.domain \n         The NTLM authentication domain. \n         None \n         Valid string value \n     \n     \n         The NTLM authentication domain. \n         NTLM protocol-specific flags. \n         None \n         Valid integer value \n     \n     \n         mail.imap.socketFactory \n         If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets. \n         None \n         Valid SocketFactory \n     \n     \n         mail.imap.socketFactory.class \n         If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets. \n         None \n         Valid string \n     \n     \n         mail.imap.socketFactory.fallback \n         If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class.  \n         true \n         true or false \n     \n     \n         mail.imap.socketFactory.port \n         Specifies the port to connect to when using the specified socket factory. Default port is used when not set. \n         143 \n         Valid Integer \n     \n     \n         mail.imap.ssl.checkserveridentity \n         If set to true, check the server identity as specified by RFC 2595. \n         false \n         true or false \n     \n     \n         mail.imap.ssl.trust \n         If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. \n         \n         Valid String \n     \n     \n         mail.imap.ssl.socketFactory \n         If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets. \n         None \n         SSL Socket Factory \n     \n     \n         mail.imap.ssl.socketFactory.class \n         If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets. \n         None \n         Valid String \n     \n     \n         mail.imap.ssl.socketFactory.port \n         Specifies the port to connect to when using the specified socket factory. \n         the default port will be used-993 \n         valid port number \n     \n     \n         mail.imap.ssl.protocols \n         Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. \n         None \n         Valid string \n     \n     \n         mail.imap.starttls.enable \n         If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. \n         false \n         true or false \n     \n     \n         mail.imap.socks.host \n         Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. \n         None \n         Valid String \n     \n     \n         mail.imap.socks.port \n         Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. \n         1080 \n         Valid String \n     \n     \n         mail.imap.minidletime \n         This property sets the delay in milliseconds. \n         10 milliseconds \n         time in seconds (Integer) \n     \n     \n         mail.imap.enableimapevents \n         Enable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string. \n         false \n         true or false \n     \n     \n         mail.imap.folder.class \n         Class name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store) \n         None \n         Valid String \n     \n     \n         mail.pop3.connectiontimeout \n         Socket connection timeout value in milliseconds. \n         Infinite timeout \n         Integer value \n     \n     \n         mail.pop3.timeout \n         Socket I/O timeout value in milliseconds.  \n         Infinite timeout \n         Integer value \n     \n     \n         mail.pop3.message.class \n         Class name of a subclass of com.sun.mail.pop3.POP3Message \n         None \n         Valid String \n     \n     \n         mail.pop3.localaddress \n         Local address (host name) to bind to when creating the POP3 socket. \n         Defaults to the address picked by the Socket class. \n         Valid String \n     \n     \n         mail.pop3.localport \n         Local port number to bind to when creating the POP3 socket. \n         Defaults to the port number picked by the Socket class. \n         Valid port number \n     \n     \n         mail.pop3.apop.enable \n         If set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password. \n         false \n         true or false \n     \n     \n         mail.pop3.socketFactory \n         If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets. \n         None \n         Socket Factory \n     \n     \n         mail.pop3.socketFactory.class \n         If set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets. \n         None \n         Valid String \n     \n     \n         mail.pop3.socketFactory.fallback \n         If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. \n         false \n         true or false \n     \n     \n         mail.pop3.socketFactory.port \n         Specifies the port to connect to when using the specified socket factory. \n         Default port \n         Valid port number \n     \n     \n         mail.pop3.ssl.checkserveridentity \n         If set to true, check the server identity as specified by RFC 2595.  \n         false \n         true or false \n     \n     \n         mail.pop3.ssl.trust \n         If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. \n         \n         Valid String \n     \n     \n         mail.pop3.ssl.socketFactory \n         If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. \n         None \n         SSL Socket Factory \n     \n     \n         mail.pop3.ssl.checkserveridentity \n         If set to true, check the server identity as specified by RFC 2595.  \n         false \n         true or false \n     \n     \n         mail.pop3.ssl.trust \n          If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.  \n         trust depends on the certificate the server presents. \n         Valid String \n     \n     \n         mail.pop3.ssl.socketFactory \n         If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. \n         None \n         SSL Socket Factory \n     \n     \n         mail.pop3.ssl.socketFactory.class \n         If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets.  \n         None \n         Valid String \n     \n     \n         mail.pop3.ssl.socketFactory.p \n         Specifies the port to connect to when using the specified socket factory. \n         995 \n         Valid Integer \n     \n     \n         mail.pop3.ssl.protocols \n         Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. \n         None \n         Valid String \n     \n     \n         mail.pop3.starttls.enable \n         If true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands \n         false \n         true or false \n     \n     \n         mail.pop3.starttls.required \n         If true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail. \n         false \n         true or false \n     \n     \n         mail.pop3.socks.host \n         Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. \n         None \n         Valid String \n     \n     \n         mail.pop3.socks.port \n         Specifies the port number for the SOCKS5 proxy server. \n         None \n         Valid String \n     \n     \n         mail.pop3.disabletop \n         If set to true, the POP3 TOP command will not be used to fetch message headers.  \n         false \n         true or false \n     \n     \n         mail.pop3.forgettopheaders \n         If set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command. \n         false \n         true or false \n     \n     \n         mail.pop3.filecache.enable \n         If set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. \n         false \n         true or false \n     \n     \n         mail.pop3.filecache.dir \n         If the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files. \n         None \n         Valid String \n     \n     \n         mail.pop3.cachewriteto \n         Controls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached. \n         false \n         true or false \n     \n     \n         mail.pop3.keepmessagecontent \n         If this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method).  \n         false \n         true or false \n       Examples  EXAMPLE 1  @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string);  Following example illustrates how to receive events in  xml  format using email source. In this example only mandatory parameters are defined in the  in the stream definition. For other parameters default values are taken. since search term is not defined, it poll and take all new messages in the inbox folder  EXAMPLE 2  @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string);  Following example illustrates how to receive events in  xml  format using email source. The email source polls the mail account in every 500 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term (email messages which come from from.account@. host name , contains  cc.account  in cc receipts list, and  Stream Processor  words in the mail subject) In the example, action after processes is defined as the  DELETE , so that after processing the event, corresponding mail is deleted from the mail folder.", 
            "title": "email (Source)"
        }, 
        {
            "location": "/api/1.0.7/", 
            "text": "API Docs - v1.0.7\n\n\nSink\n\n\nemail \n(Sink)\n\n\nThe email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken for the optional parameters. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters). Further, some email account required to enable 'access to less secure apps' option (for gmail account you can enable it via https://myaccount.google.com/lesssecureapps).\n\n\n\nSyntax\n\n\n@sink(type=\nemail\n, username=\nSTRING\n, address=\nSTRING\n, password=\nSTRING\n, host=\nSTRING\n, port=\nINT\n, ssl.enable=\nBOOL\n, auth=\nBOOL\n, content.type=\nSTRING\n, subject=\nSTRING\n, to=\nSTRING\n, cc=\nSTRING\n, bcc=\nSTRING\n, @map(...)))\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \nusername\n\n        \nUsername of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com).\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \naddress\n\n        \nAddress of the email account which is used to send emails.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \npassword\n\n        \nPassword of the email account.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \nhost\n\n        \nHost name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account.\n\n        \nsmtp.gmail.com\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nport\n\n        \nThe port which is used to create the connection.\n\n        \n'465' the default value is only valid is ssl enable\n\n        \nINT\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nssl.enable\n\n        \nWhether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection.\n\n        \ntrue\n\n        \nBOOL\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nauth\n\n        \nWhether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command.\n\n        \ntrue\n\n        \nBOOL\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \ncontent.type\n\n        \nContent type can be either 'text/plain' or 'text/html'.\n\n        \ntext/plain\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nsubject\n\n        \nSubject of the mail which has to be send.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nYes\n\n    \n\n    \n\n        \nto\n\n        \nAddress of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nYes\n\n    \n\n    \n\n        \ncc\n\n        \nAddress of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list.\n\n        \nNone\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nbcc\n\n        \nAddress of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list.\n\n        \nNone\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n\n\n\nSystem Parameters\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Parameters\n\n    \n\n    \n\n        \nmail.smtp.connectiontimeout\n\n        \nSocket connection timeout value in milliseconds. \n\n        \ninfinite timeout\n\n        \nAny Integer\n\n    \n\n    \n\n        \nmail.smtp.timeout\n\n        \nSocket I/O timeout value in milliseconds. \n\n        \ninfinite timeout\n\n        \nAny Integer\n\n    \n\n    \n\n        \nmail.smtp.from\n\n        \nEmail address to use for SMTP MAIL command. This sets the envelope return address.\n\n        \nDefaults to msg.getFrom() or InternetAddress.getLocalAddress().\n\n        \nValid email address\n\n    \n\n    \n\n        \nmail.smtp.localport\n\n        \nLocal port number to bind to when creating the SMTP socket.\n\n        \nDefaults to the port number picked by the Socket class.\n\n        \nAny Integer\n\n    \n\n    \n\n        \nmail.smtp.ehlo\n\n        \nIf false, do not attempt to sign on with the EHLO command.\n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.login.disable\n\n        \nIf true, prevents use of the AUTH LOGIN command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.plain.disable\n\n        \nIf true, prevents use of the AUTH PLAIN command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.digest-md5.disable\n\n        \nIf true, prevents use of the AUTH DIGEST-MD5 command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.ntlm.disable\n\n        \nIf true, prevents use of the AUTH NTLM command\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.ntlm.domain\n\n        \nThe NTLM authentication domain.\n\n        \nNone\n\n        \nValid NTLM authentication domain name\n\n    \n\n    \n\n        \nmail.smtp.auth.ntlm.flags\n\n        \nNTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details.\n\n        \nNone\n\n        \nValid NTLM protocol-specific flags.\n\n    \n\n    \n\n        \nmail.smtp.dsn.notify\n\n        \nThe NOTIFY option to the RCPT command.\n\n        \nNone\n\n        \nEither NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas).\n\n    \n\n    \n\n        \nmail.smtp.dsn.ret\n\n        \nThe RET option to the MAIL command.\n\n        \nNone\n\n        \nEither FULL or HDRS.\n\n    \n\n    \n\n        \nmail.smtp.sendpartial\n\n        \nIf set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.sasl.enable\n\n        \nIf set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.sasl.mechanisms\n\n        \nA space or comma separated list of SASL mechanism names to try to use.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.sasl.authorizationid\n\n        \nThe authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used.\n\n        \nusername\n\n        \nValid ID\n\n    \n\n    \n\n        \nmail.smtp.sasl.realm\n\n        \nThe realm to use with DIGEST-MD5 authentication.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.quitwait\n\n        \nIf set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.reportsuccess\n\n        \nIf set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.socketFactory\n\n        \nIf set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets.\n\n        \nNone\n\n        \nSocket Factory\n\n    \n\n    \n\n        \nmail.smtp.socketFactory.class\n\n        \nIf set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.socketFactory.fallback\n\n        \nIf set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class.\n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.socketFactory.port\n\n        \nSpecifies the port to connect to when using the specified socket factory\n\n        \n25\n\n        \nValid port number\n\n    \n\n    \n\n        \nmail.smtp.ssl.protocols\n\n        \nSpecifies the SSL protocols that will be enabled for SSL connections.\n\n        \nNone\n\n        \nThe property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method.\n\n    \n\n    \n\n        \nmail.smtp.starttls.enable\n\n        \nIf true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.starttls.required\n\n        \nIf true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.socks.host\n\n        \nSpecifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.socks.port\n\n        \nSpecifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080.\n\n        \n1080\n\n        \nvalid port number\n\n    \n\n    \n\n        \nmail.smtp.auth.ntlm.disable\n\n        \nIf true, prevents use of the AUTH NTLM command\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.mailextension\n\n        \nExtension string to append to the MAIL command.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.userset\n\n        \nIf set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\n@sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string);\n\n\n\n\nFollowing example illustrates how to publish events using the email sinkusing mandatory parameters. As in the example, it publishes events come from the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection.\n\n\n\nEXAMPLE 2\n\n\n@sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string);\n\n\n\n\nFollowing example illustrates how to configure the query parameters and system parameters in the deployment ymal file.\nCorresponding parameters need to be configure under name:'email' and namespace:'sink' as follows\nsiddhi:\nextensions:\n-\nextension:\nname:'email'\nnamespace:'sink'\nproperties:\nusername:sender.account\naddress:sender.account@gmail.com\naddress:sender.account@gmail.com\nAs in the example, it publishes events comefrom the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection.\n\n\n\nEXAMPLE 3\n\n\n@sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream fooStream (name string, age int, country string);\n\n\n\n\nFollowing example illustrates how to publish events using the email sink. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given \nto\n,\ncc\n and \nbcc\n recipients using a secure connection. \nname\n in the \nsubject\n attribute will be the value of the \nname\n parameter in the corresponding output event\n\n\n\nSource\n\n\nemail \n(Source)\n\n\nEmail source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store ,  https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters).\n\n\n\nSyntax\n\n\n@source(type=\nemail\n, username=\nSTRING\n, password=\nSTRING\n, store=\nSTRING\n, host=\nSTRING\n, port=\nINT\n, folder=\nSTRING\n, search.term=\nSTRING\n, polling.interval=\nLONG\n, action.after.processed=\nSTRING\n, folder.to.move=\nSTRING\n, content.type=\nSTRING\n, ssl.enable=\nBOOL\n, @map(...)))\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \nusername\n\n        \nuser name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \npassword\n\n        \npassword of the email account\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \nstore\n\n        \nStore type that used to receive emails. it can be either imap or pop3.\n\n        \nimap\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nhost\n\n        \nHost name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable.\n\n        \nIf store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'.\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nport\n\n        \nThe port which is used to create the connection.\n\n        \n'993' the default value is valid only if store is imap and ssl enable\n\n        \nINT\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nfolder\n\n        \nName of the folder to fetch email.\n\n        \nINBOX\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nsearch.term\n\n        \nOption which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol.\n\n        \nNone\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \npolling.interval\n\n        \nInterval that email source should poll the account to check for new mails arrivals in seconds.\n\n        \n600\n\n        \nLONG\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \naction.after.processed\n\n        \nAction that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE\n\n        \nNONE\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nfolder.to.move\n\n        \nThe name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \ncontent.type\n\n        \nContent type of the email. It can be either 'text/plain' or 'text/html.'\n\n        \ntext/plain\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nssl.enable\n\n        \nIf it is 'true' then use a secure port to establish the connection. The possible values are 'true or false.\n\n        \ntrue\n\n        \nBOOL\n\n        \nYes\n\n        \nNo\n\n    \n\n\n\n\nSystem Parameters\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Parameters\n\n    \n\n    \n\n        \nmail.imap.partialfetch\n\n        \nControls whether the IMAP partial-fetch capability should be used\n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.fetchsize\n\n        \nPartial fetch size in bytes.\n\n        \n16K\n\n        \nvalue in bytes\n\n    \n\n    \n\n        \nmail.imap.peek\n\n        \nIf set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.connectiontimeout\n\n        \nSocket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket.\n\n        \ninfinity timeout\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.timeout\n\n        \nSocket read timeout value in milliseconds. This timeout is implemented by java.net.Socket.\n\n        \ninfinity timeout\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.writetimeout\n\n        \nSocket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection.\n\n        \ninfinity timeout\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.statuscachetimeout\n\n        \nTimeout value in milliseconds for cache of STATUS command response.\n\n        \n1000ms\n\n        \nTime out in miliseconds\n\n    \n\n    \n\n        \nmail.imap.appendbuffersize\n\n        \nMaximum size of a message to buffer in memory when appending to an IMAP folder.\n\n        \nNone\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.connectionpoolsize\n\n        \nMaximum number of available connections in the connection pool.\n\n        \n1\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.connectionpooltimeout\n\n        \nTimeout value in milliseconds for connection pool connections. \n\n        \n45000ms\n\n        \nAny Integer\n\n    \n\n    \n\n        \nmail.imap.separatestoreconnection\n\n        \nFlag to indicate whether to use a dedicated store connection for store commands.\n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.auth.login.disable\n\n        \nIf true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.auth.plain.disable\n\n        \nIf true, prevents use of the AUTHENTICATE PLAIN command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.auth.ntlm.disable\n\n        \nIf true, prevents use of the AUTHENTICATE NTLM command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.proxyauth.user\n\n        \nIf the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property.\n\n        \nNone\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.localaddress\n\n        \nLocal address (host name) to bind to when creating the IMAP socket.\n\n        \nDefaults to the address picked by the Socket class.\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.localport\n\n        \nLocal port number to bind to when creating the IMAP socket.\n\n        \nDefaults to the port number picked by the Socket class.\n\n        \nValid String value\n\n    \n\n    \n\n        \nmail.imap.sasl.enable\n\n        \nIf set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.sasl.mechanisms\n\n        \nA space or comma separated list of SASL mechanism names to try to use.\n\n        \nNone\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.sasl.authorizationid\n\n        \nThe authorization ID to use in the SASL authentication.\n\n        \nIf not set, the authentication ID (user name) is used.\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.sasl.realm\n\n        \nThe realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5.\n\n        \nNone\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.auth.ntlm.domain\n\n        \nThe NTLM authentication domain.\n\n        \nNone\n\n        \nValid string value\n\n    \n\n    \n\n        \nThe NTLM authentication domain.\n\n        \nNTLM protocol-specific flags.\n\n        \nNone\n\n        \nValid integer value\n\n    \n\n    \n\n        \nmail.imap.socketFactory\n\n        \nIf set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets.\n\n        \nNone\n\n        \nValid SocketFactory\n\n    \n\n    \n\n        \nmail.imap.socketFactory.class\n\n        \nIf set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets.\n\n        \nNone\n\n        \nValid string\n\n    \n\n    \n\n        \nmail.imap.socketFactory.fallback\n\n        \nIf set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. \n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.socketFactory.port\n\n        \nSpecifies the port to connect to when using the specified socket factory. Default port is used when not set.\n\n        \n143\n\n        \nValid Integer\n\n    \n\n    \n\n        \nmail.imap.ssl.checkserveridentity\n\n        \nIf set to true, check the server identity as specified by RFC 2595.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.ssl.trust\n\n        \nIf set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '\n', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.imap.ssl.socketFactory\n\n        \nIf set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets.\n\n        \nNone\n\n        \nSSL Socket Factory\n\n    \n\n    \n\n        \nmail.imap.ssl.socketFactory.class\n\n        \nIf set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.imap.ssl.socketFactory.port\n\n        \nSpecifies the port to connect to when using the specified socket factory.\n\n        \nthe default port will be used-993\n\n        \nvalid port number\n\n    \n\n    \n\n        \nmail.imap.ssl.protocols\n\n        \nSpecifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method.\n\n        \nNone\n\n        \nValid string\n\n    \n\n    \n\n        \nmail.imap.starttls.enable\n\n        \nIf true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.socks.host\n\n        \nSpecifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.imap.socks.port\n\n        \nSpecifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080.\n\n        \n1080\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.imap.minidletime\n\n        \nThis property sets the delay in milliseconds.\n\n        \n10 milliseconds\n\n        \ntime in seconds (Integer)\n\n    \n\n    \n\n        \nmail.imap.enableimapevents\n\n        \nEnable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.folder.class\n\n        \nClass name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store)\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.connectiontimeout\n\n        \nSocket connection timeout value in milliseconds.\n\n        \nInfinite timeout\n\n        \nInteger value\n\n    \n\n    \n\n        \nmail.pop3.timeout\n\n        \nSocket I/O timeout value in milliseconds. \n\n        \nInfinite timeout\n\n        \nInteger value\n\n    \n\n    \n\n        \nmail.pop3.message.class\n\n        \nClass name of a subclass of com.sun.mail.pop3.POP3Message\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.localaddress\n\n        \nLocal address (host name) to bind to when creating the POP3 socket.\n\n        \nDefaults to the address picked by the Socket class.\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.localport\n\n        \nLocal port number to bind to when creating the POP3 socket.\n\n        \nDefaults to the port number picked by the Socket class.\n\n        \nValid port number\n\n    \n\n    \n\n        \nmail.pop3.apop.enable\n\n        \nIf set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.socketFactory\n\n        \nIf set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets.\n\n        \nNone\n\n        \nSocket Factory\n\n    \n\n    \n\n        \nmail.pop3.socketFactory.class\n\n        \nIf set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.socketFactory.fallback\n\n        \nIf set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.socketFactory.port\n\n        \nSpecifies the port to connect to when using the specified socket factory.\n\n        \nDefault port\n\n        \nValid port number\n\n    \n\n    \n\n        \nmail.pop3.ssl.checkserveridentity\n\n        \nIf set to true, check the server identity as specified by RFC 2595. \n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.ssl.trust\n\n        \nIf set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to '\n', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents.\n\n        \nDepends on the certificate the server presents\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.ssl.socketFactory\n\n        \nIf set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets.\n\n        \nNone\n\n        \nSSL Socket Factory\n\n    \n\n    \n\n        \nmail.pop3.ssl.checkserveridentity\n\n        \nIf set to true, check the server identity as specified by RFC 2595. \n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.ssl.trust\n\n        \n If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted. \n\n        \ntrust depends on the certificate the server presents.\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.ssl.socketFactory\n\n        \nIf set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets.\n\n        \nNone\n\n        \nSSL Socket Factory\n\n    \n\n    \n\n        \nmail.pop3.ssl.socketFactory.class\n\n        \nIf set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets. \n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.ssl.socketFactory.p\n\n        \nSpecifies the port to connect to when using the specified socket factory.\n\n        \n995\n\n        \nValid Integer\n\n    \n\n    \n\n        \nmail.pop3.ssl.protocols\n\n        \nSpecifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.starttls.enable\n\n        \nIf true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.starttls.required\n\n        \nIf true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.socks.host\n\n        \nSpecifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.socks.port\n\n        \nSpecifies the port number for the SOCKS5 proxy server.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.disabletop\n\n        \nIf set to true, the POP3 TOP command will not be used to fetch message headers. \n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.forgettopheaders\n\n        \nIf set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.filecache.enable\n\n        \nIf set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.filecache.dir\n\n        \nIf the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.cachewriteto\n\n        \nControls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.keepmessagecontent\n\n        \nIf this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method). \n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\n@source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string);\n\n\n\n\nFollowing example illustrates how to receive events in \nxml\n format using email source. In this example only mandatory parameters are defined in the  in the stream definition. For other parameters default values are taken. since search term is not defined, it poll and take all new messages in the inbox folder\n\n\n\nEXAMPLE 2\n\n\n@source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string);\n\n\n\n\nFollowing example illustrates how to receive events in \nxml\n format using email source. The email source polls the mail account in every 500 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term (email messages which come from\nfrom.account@.\nhost name\n, contains \ncc.account\n in cc receipts list, and \nStream Processor\n words in the mail subject) In the example, action after processes is defined as the \nDELETE\n, so that after processing the event, corresponding mail is deleted from the mail folder.", 
            "title": "1.0.7"
        }, 
        {
            "location": "/api/1.0.7/#api-docs-v107", 
            "text": "", 
            "title": "API Docs - v1.0.7"
        }, 
        {
            "location": "/api/1.0.7/#sink", 
            "text": "", 
            "title": "Sink"
        }, 
        {
            "location": "/api/1.0.7/#email-sink", 
            "text": "The email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken for the optional parameters. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters). Further, some email account required to enable 'access to less secure apps' option (for gmail account you can enable it via https://myaccount.google.com/lesssecureapps).  Syntax  @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , @map(...)))  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         username \n         Username of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com). \n         \n         STRING \n         No \n         No \n     \n     \n         address \n         Address of the email account which is used to send emails. \n         \n         STRING \n         No \n         No \n     \n     \n         password \n         Password of the email account. \n         \n         STRING \n         No \n         No \n     \n     \n         host \n         Host name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account. \n         smtp.gmail.com \n         STRING \n         Yes \n         No \n     \n     \n         port \n         The port which is used to create the connection. \n         '465' the default value is only valid is ssl enable \n         INT \n         Yes \n         No \n     \n     \n         ssl.enable \n         Whether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection. \n         true \n         BOOL \n         Yes \n         No \n     \n     \n         auth \n         Whether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command. \n         true \n         BOOL \n         Yes \n         No \n     \n     \n         content.type \n         Content type can be either 'text/plain' or 'text/html'. \n         text/plain \n         STRING \n         Yes \n         No \n     \n     \n         subject \n         Subject of the mail which has to be send. \n         \n         STRING \n         No \n         Yes \n     \n     \n         to \n         Address of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list. \n         \n         STRING \n         No \n         Yes \n     \n     \n         cc \n         Address of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list. \n         None \n         STRING \n         Yes \n         No \n     \n     \n         bcc \n         Address of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list. \n         None \n         STRING \n         Yes \n         No \n       System Parameters  \n     \n         Name \n         Description \n         Default Value \n         Possible Parameters \n     \n     \n         mail.smtp.connectiontimeout \n         Socket connection timeout value in milliseconds.  \n         infinite timeout \n         Any Integer \n     \n     \n         mail.smtp.timeout \n         Socket I/O timeout value in milliseconds.  \n         infinite timeout \n         Any Integer \n     \n     \n         mail.smtp.from \n         Email address to use for SMTP MAIL command. This sets the envelope return address. \n         Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). \n         Valid email address \n     \n     \n         mail.smtp.localport \n         Local port number to bind to when creating the SMTP socket. \n         Defaults to the port number picked by the Socket class. \n         Any Integer \n     \n     \n         mail.smtp.ehlo \n         If false, do not attempt to sign on with the EHLO command. \n         true \n         true or false \n     \n     \n         mail.smtp.auth.login.disable \n         If true, prevents use of the AUTH LOGIN command. \n         false \n         true or false \n     \n     \n         mail.smtp.auth.plain.disable \n         If true, prevents use of the AUTH PLAIN command. \n         false \n         true or false \n     \n     \n         mail.smtp.auth.digest-md5.disable \n         If true, prevents use of the AUTH DIGEST-MD5 command. \n         false \n         true or false \n     \n     \n         mail.smtp.auth.ntlm.disable \n         If true, prevents use of the AUTH NTLM command \n         false \n         true or false \n     \n     \n         mail.smtp.auth.ntlm.domain \n         The NTLM authentication domain. \n         None \n         Valid NTLM authentication domain name \n     \n     \n         mail.smtp.auth.ntlm.flags \n         NTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details. \n         None \n         Valid NTLM protocol-specific flags. \n     \n     \n         mail.smtp.dsn.notify \n         The NOTIFY option to the RCPT command. \n         None \n         Either NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas). \n     \n     \n         mail.smtp.dsn.ret \n         The RET option to the MAIL command. \n         None \n         Either FULL or HDRS. \n     \n     \n         mail.smtp.sendpartial \n         If set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address. \n         false \n         true or false \n     \n     \n         mail.smtp.sasl.enable \n         If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. \n         false \n         true or false \n     \n     \n         mail.smtp.sasl.mechanisms \n         A space or comma separated list of SASL mechanism names to try to use. \n         None \n         \n     \n     \n         mail.smtp.sasl.authorizationid \n         The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. \n         username \n         Valid ID \n     \n     \n         mail.smtp.sasl.realm \n         The realm to use with DIGEST-MD5 authentication. \n         None \n         \n     \n     \n         mail.smtp.quitwait \n         If set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command. \n         false \n         true or false \n     \n     \n         mail.smtp.reportsuccess \n         If set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful. \n         false \n         true or false \n     \n     \n         mail.smtp.socketFactory \n         If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets. \n         None \n         Socket Factory \n     \n     \n         mail.smtp.socketFactory.class \n         If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets. \n         None \n         \n     \n     \n         mail.smtp.socketFactory.fallback \n         If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. \n         true \n         true or false \n     \n     \n         mail.smtp.socketFactory.port \n         Specifies the port to connect to when using the specified socket factory \n         25 \n         Valid port number \n     \n     \n         mail.smtp.ssl.protocols \n         Specifies the SSL protocols that will be enabled for SSL connections. \n         None \n         The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. \n     \n     \n         mail.smtp.starttls.enable \n         If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. \n         false \n         true or false \n     \n     \n         mail.smtp.starttls.required \n         If true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail. \n         false \n         true or false \n     \n     \n         mail.smtp.socks.host \n         Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. \n         None \n         \n     \n     \n         mail.smtp.socks.port \n         Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. \n         1080 \n         valid port number \n     \n     \n         mail.smtp.auth.ntlm.disable \n         If true, prevents use of the AUTH NTLM command \n         false \n         true or false \n     \n     \n         mail.smtp.mailextension \n         Extension string to append to the MAIL command. \n         None \n         \n     \n     \n         mail.smtp.userset \n         If set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue. \n         false \n         true or false \n       Examples  EXAMPLE 1  @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string);  Following example illustrates how to publish events using the email sinkusing mandatory parameters. As in the example, it publishes events come from the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection.  EXAMPLE 2  @sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string);  Following example illustrates how to configure the query parameters and system parameters in the deployment ymal file. Corresponding parameters need to be configure under name:'email' and namespace:'sink' as follows siddhi: extensions: - extension: name:'email' namespace:'sink' properties: username:sender.account address:sender.account@gmail.com address:sender.account@gmail.com As in the example, it publishes events comefrom the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection.  EXAMPLE 3  @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream fooStream (name string, age int, country string);  Following example illustrates how to publish events using the email sink. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given  to , cc  and  bcc  recipients using a secure connection.  name  in the  subject  attribute will be the value of the  name  parameter in the corresponding output event", 
            "title": "email (Sink)"
        }, 
        {
            "location": "/api/1.0.7/#source", 
            "text": "", 
            "title": "Source"
        }, 
        {
            "location": "/api/1.0.7/#email-source", 
            "text": "Email source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store ,  https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters).  Syntax  @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...)))  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         username \n         user name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account. \n         \n         STRING \n         No \n         No \n     \n     \n         password \n         password of the email account \n         \n         STRING \n         No \n         No \n     \n     \n         store \n         Store type that used to receive emails. it can be either imap or pop3. \n         imap \n         STRING \n         Yes \n         No \n     \n     \n         host \n         Host name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable. \n         If store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'. \n         STRING \n         Yes \n         No \n     \n     \n         port \n         The port which is used to create the connection. \n         '993' the default value is valid only if store is imap and ssl enable \n         INT \n         Yes \n         No \n     \n     \n         folder \n         Name of the folder to fetch email. \n         INBOX \n         STRING \n         Yes \n         No \n     \n     \n         search.term \n         Option which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol. \n         None \n         STRING \n         Yes \n         No \n     \n     \n         polling.interval \n         Interval that email source should poll the account to check for new mails arrivals in seconds. \n         600 \n         LONG \n         Yes \n         No \n     \n     \n         action.after.processed \n         Action that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE \n         NONE \n         STRING \n         Yes \n         No \n     \n     \n         folder.to.move \n         The name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move. \n         \n         STRING \n         No \n         No \n     \n     \n         content.type \n         Content type of the email. It can be either 'text/plain' or 'text/html.' \n         text/plain \n         STRING \n         Yes \n         No \n     \n     \n         ssl.enable \n         If it is 'true' then use a secure port to establish the connection. The possible values are 'true or false. \n         true \n         BOOL \n         Yes \n         No \n       System Parameters  \n     \n         Name \n         Description \n         Default Value \n         Possible Parameters \n     \n     \n         mail.imap.partialfetch \n         Controls whether the IMAP partial-fetch capability should be used \n         true \n         true or false \n     \n     \n         mail.imap.fetchsize \n         Partial fetch size in bytes. \n         16K \n         value in bytes \n     \n     \n         mail.imap.peek \n         If set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage. \n         false \n         true or false \n     \n     \n         mail.imap.connectiontimeout \n         Socket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket. \n         infinity timeout \n         Any Integer value \n     \n     \n         mail.imap.timeout \n         Socket read timeout value in milliseconds. This timeout is implemented by java.net.Socket. \n         infinity timeout \n         Any Integer value \n     \n     \n         mail.imap.writetimeout \n         Socket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection. \n         infinity timeout \n         Any Integer value \n     \n     \n         mail.imap.statuscachetimeout \n         Timeout value in milliseconds for cache of STATUS command response. \n         1000ms \n         Time out in miliseconds \n     \n     \n         mail.imap.appendbuffersize \n         Maximum size of a message to buffer in memory when appending to an IMAP folder. \n         None \n         Any Integer value \n     \n     \n         mail.imap.connectionpoolsize \n         Maximum number of available connections in the connection pool. \n         1 \n         Any Integer value \n     \n     \n         mail.imap.connectionpooltimeout \n         Timeout value in milliseconds for connection pool connections.  \n         45000ms \n         Any Integer \n     \n     \n         mail.imap.separatestoreconnection \n         Flag to indicate whether to use a dedicated store connection for store commands. \n         true \n         true or false \n     \n     \n         mail.imap.auth.login.disable \n         If true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command. \n         false \n         true or false \n     \n     \n         mail.imap.auth.plain.disable \n         If true, prevents use of the AUTHENTICATE PLAIN command. \n         false \n         true or false \n     \n     \n         mail.imap.auth.ntlm.disable \n         If true, prevents use of the AUTHENTICATE NTLM command. \n         false \n         true or false \n     \n     \n         mail.imap.proxyauth.user \n         If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property. \n         None \n         Valid string value \n     \n     \n         mail.imap.localaddress \n         Local address (host name) to bind to when creating the IMAP socket. \n         Defaults to the address picked by the Socket class. \n         Valid string value \n     \n     \n         mail.imap.localport \n         Local port number to bind to when creating the IMAP socket. \n         Defaults to the port number picked by the Socket class. \n         Valid String value \n     \n     \n         mail.imap.sasl.enable \n         If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. \n         false \n         true or false \n     \n     \n         mail.imap.sasl.mechanisms \n         A space or comma separated list of SASL mechanism names to try to use. \n         None \n         Valid string value \n     \n     \n         mail.imap.sasl.authorizationid \n         The authorization ID to use in the SASL authentication. \n         If not set, the authentication ID (user name) is used. \n         Valid string value \n     \n     \n         mail.imap.sasl.realm \n         The realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5. \n         None \n         Valid string value \n     \n     \n         mail.imap.auth.ntlm.domain \n         The NTLM authentication domain. \n         None \n         Valid string value \n     \n     \n         The NTLM authentication domain. \n         NTLM protocol-specific flags. \n         None \n         Valid integer value \n     \n     \n         mail.imap.socketFactory \n         If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets. \n         None \n         Valid SocketFactory \n     \n     \n         mail.imap.socketFactory.class \n         If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets. \n         None \n         Valid string \n     \n     \n         mail.imap.socketFactory.fallback \n         If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class.  \n         true \n         true or false \n     \n     \n         mail.imap.socketFactory.port \n         Specifies the port to connect to when using the specified socket factory. Default port is used when not set. \n         143 \n         Valid Integer \n     \n     \n         mail.imap.ssl.checkserveridentity \n         If set to true, check the server identity as specified by RFC 2595. \n         false \n         true or false \n     \n     \n         mail.imap.ssl.trust \n         If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. \n         None \n         Valid String \n     \n     \n         mail.imap.ssl.socketFactory \n         If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets. \n         None \n         SSL Socket Factory \n     \n     \n         mail.imap.ssl.socketFactory.class \n         If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets. \n         None \n         Valid String \n     \n     \n         mail.imap.ssl.socketFactory.port \n         Specifies the port to connect to when using the specified socket factory. \n         the default port will be used-993 \n         valid port number \n     \n     \n         mail.imap.ssl.protocols \n         Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. \n         None \n         Valid string \n     \n     \n         mail.imap.starttls.enable \n         If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. \n         false \n         true or false \n     \n     \n         mail.imap.socks.host \n         Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. \n         None \n         Valid String \n     \n     \n         mail.imap.socks.port \n         Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. \n         1080 \n         Valid String \n     \n     \n         mail.imap.minidletime \n         This property sets the delay in milliseconds. \n         10 milliseconds \n         time in seconds (Integer) \n     \n     \n         mail.imap.enableimapevents \n         Enable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string. \n         false \n         true or false \n     \n     \n         mail.imap.folder.class \n         Class name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store) \n         None \n         Valid String \n     \n     \n         mail.pop3.connectiontimeout \n         Socket connection timeout value in milliseconds. \n         Infinite timeout \n         Integer value \n     \n     \n         mail.pop3.timeout \n         Socket I/O timeout value in milliseconds.  \n         Infinite timeout \n         Integer value \n     \n     \n         mail.pop3.message.class \n         Class name of a subclass of com.sun.mail.pop3.POP3Message \n         None \n         Valid String \n     \n     \n         mail.pop3.localaddress \n         Local address (host name) to bind to when creating the POP3 socket. \n         Defaults to the address picked by the Socket class. \n         Valid String \n     \n     \n         mail.pop3.localport \n         Local port number to bind to when creating the POP3 socket. \n         Defaults to the port number picked by the Socket class. \n         Valid port number \n     \n     \n         mail.pop3.apop.enable \n         If set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password. \n         false \n         true or false \n     \n     \n         mail.pop3.socketFactory \n         If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets. \n         None \n         Socket Factory \n     \n     \n         mail.pop3.socketFactory.class \n         If set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets. \n         None \n         Valid String \n     \n     \n         mail.pop3.socketFactory.fallback \n         If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. \n         false \n         true or false \n     \n     \n         mail.pop3.socketFactory.port \n         Specifies the port to connect to when using the specified socket factory. \n         Default port \n         Valid port number \n     \n     \n         mail.pop3.ssl.checkserveridentity \n         If set to true, check the server identity as specified by RFC 2595.  \n         false \n         true or false \n     \n     \n         mail.pop3.ssl.trust \n         If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. \n         Depends on the certificate the server presents \n         Valid String \n     \n     \n         mail.pop3.ssl.socketFactory \n         If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. \n         None \n         SSL Socket Factory \n     \n     \n         mail.pop3.ssl.checkserveridentity \n         If set to true, check the server identity as specified by RFC 2595.  \n         false \n         true or false \n     \n     \n         mail.pop3.ssl.trust \n          If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.  \n         trust depends on the certificate the server presents. \n         Valid String \n     \n     \n         mail.pop3.ssl.socketFactory \n         If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. \n         None \n         SSL Socket Factory \n     \n     \n         mail.pop3.ssl.socketFactory.class \n         If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets.  \n         None \n         Valid String \n     \n     \n         mail.pop3.ssl.socketFactory.p \n         Specifies the port to connect to when using the specified socket factory. \n         995 \n         Valid Integer \n     \n     \n         mail.pop3.ssl.protocols \n         Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. \n         None \n         Valid String \n     \n     \n         mail.pop3.starttls.enable \n         If true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands \n         false \n         true or false \n     \n     \n         mail.pop3.starttls.required \n         If true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail. \n         false \n         true or false \n     \n     \n         mail.pop3.socks.host \n         Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. \n         None \n         Valid String \n     \n     \n         mail.pop3.socks.port \n         Specifies the port number for the SOCKS5 proxy server. \n         None \n         Valid String \n     \n     \n         mail.pop3.disabletop \n         If set to true, the POP3 TOP command will not be used to fetch message headers.  \n         false \n         true or false \n     \n     \n         mail.pop3.forgettopheaders \n         If set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command. \n         false \n         true or false \n     \n     \n         mail.pop3.filecache.enable \n         If set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. \n         false \n         true or false \n     \n     \n         mail.pop3.filecache.dir \n         If the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files. \n         None \n         Valid String \n     \n     \n         mail.pop3.cachewriteto \n         Controls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached. \n         false \n         true or false \n     \n     \n         mail.pop3.keepmessagecontent \n         If this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method).  \n         false \n         true or false \n       Examples  EXAMPLE 1  @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string);  Following example illustrates how to receive events in  xml  format using email source. In this example only mandatory parameters are defined in the  in the stream definition. For other parameters default values are taken. since search term is not defined, it poll and take all new messages in the inbox folder  EXAMPLE 2  @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string);  Following example illustrates how to receive events in  xml  format using email source. The email source polls the mail account in every 500 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term (email messages which come from from.account@. host name , contains  cc.account  in cc receipts list, and  Stream Processor  words in the mail subject) In the example, action after processes is defined as the  DELETE , so that after processing the event, corresponding mail is deleted from the mail folder.", 
            "title": "email (Source)"
        }, 
        {
            "location": "/api/1.0.6/", 
            "text": "API Docs - v1.0.6\n\n\nSink\n\n\nemail \n(Sink)\n\n\nThe email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken for the optional parameters. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters). Further, some email account required to enable 'access to less secure apps' option (for gmail account you can enable it via https://myaccount.google.com/lesssecureapps).\n\n\n\nSyntax\n\n\n@sink(type=\nemail\n, username=\nSTRING\n, address=\nSTRING\n, password=\nSTRING\n, host=\nSTRING\n, port=\nINT\n, ssl.enable=\nBOOL\n, auth=\nBOOL\n, content.type=\nSTRING\n, subject=\nSTRING\n, to=\nSTRING\n, cc=\nSTRING\n, bcc=\nSTRING\n, @map(...)))\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \nusername\n\n        \nUsername of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com).\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \naddress\n\n        \nAddress of the email account which is used to send emails.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \npassword\n\n        \nPassword of the email account.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \nhost\n\n        \nHost name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account.\n\n        \nsmtp.gmail.com\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nport\n\n        \nThe port which is used to create the connection.\n\n        \n'465' the default value is only valid is ssl enable\n\n        \nINT\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nssl.enable\n\n        \nWhether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection.\n\n        \ntrue\n\n        \nBOOL\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nauth\n\n        \nWhether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command.\n\n        \ntrue\n\n        \nBOOL\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \ncontent.type\n\n        \nContent type can be either 'text/plain' or 'text/html'.\n\n        \ntext/plain\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nsubject\n\n        \nSubject of the mail which has to be send.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nYes\n\n    \n\n    \n\n        \nto\n\n        \nAddress of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nYes\n\n    \n\n    \n\n        \ncc\n\n        \nAddress of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list.\n\n        \nNone\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nbcc\n\n        \nAddress of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list.\n\n        \nNone\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n\n\n\nSystem Parameters\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Parameters\n\n    \n\n    \n\n        \nmail.smtp.connectiontimeout\n\n        \nSocket connection timeout value in milliseconds. \n\n        \ninfinite timeout\n\n        \nAny Integer\n\n    \n\n    \n\n        \nmail.smtp.timeout\n\n        \nSocket I/O timeout value in milliseconds. \n\n        \ninfinite timeout\n\n        \nAny Integer\n\n    \n\n    \n\n        \nmail.smtp.from\n\n        \nEmail address to use for SMTP MAIL command. This sets the envelope return address.\n\n        \nDefaults to msg.getFrom() or InternetAddress.getLocalAddress().\n\n        \nValid email address\n\n    \n\n    \n\n        \nmail.smtp.localport\n\n        \nLocal port number to bind to when creating the SMTP socket.\n\n        \nDefaults to the port number picked by the Socket class.\n\n        \nAny Integer\n\n    \n\n    \n\n        \nmail.smtp.ehlo\n\n        \nIf false, do not attempt to sign on with the EHLO command.\n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.login.disable\n\n        \nIf true, prevents use of the AUTH LOGIN command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.plain.disable\n\n        \nIf true, prevents use of the AUTH PLAIN command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.digest-md5.disable\n\n        \nIf true, prevents use of the AUTH DIGEST-MD5 command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.ntlm.disable\n\n        \nIf true, prevents use of the AUTH NTLM command\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.ntlm.domain\n\n        \nThe NTLM authentication domain.\n\n        \nNone\n\n        \nValid NTLM authentication domain name\n\n    \n\n    \n\n        \nmail.smtp.auth.ntlm.flags\n\n        \nNTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details.\n\n        \nNone\n\n        \nValid NTLM protocol-specific flags.\n\n    \n\n    \n\n        \nmail.smtp.dsn.notify\n\n        \nThe NOTIFY option to the RCPT command.\n\n        \nNone\n\n        \nEither NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas).\n\n    \n\n    \n\n        \nmail.smtp.dsn.ret\n\n        \nThe RET option to the MAIL command.\n\n        \nNone\n\n        \nEither FULL or HDRS.\n\n    \n\n    \n\n        \nmail.smtp.sendpartial\n\n        \nIf set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.sasl.enable\n\n        \nIf set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.sasl.mechanisms\n\n        \nA space or comma separated list of SASL mechanism names to try to use.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.sasl.authorizationid\n\n        \nThe authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used.\n\n        \nusername\n\n        \nValid ID\n\n    \n\n    \n\n        \nmail.smtp.sasl.realm\n\n        \nThe realm to use with DIGEST-MD5 authentication.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.quitwait\n\n        \nIf set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.reportsuccess\n\n        \nIf set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.socketFactory\n\n        \nIf set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets.\n\n        \nNone\n\n        \nSocket Factory\n\n    \n\n    \n\n        \nmail.smtp.socketFactory.class\n\n        \nIf set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.socketFactory.fallback\n\n        \nIf set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class.\n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.socketFactory.port\n\n        \nSpecifies the port to connect to when using the specified socket factory\n\n        \n25\n\n        \nValid port number\n\n    \n\n    \n\n        \nmail.smtp.ssl.protocols\n\n        \nSpecifies the SSL protocols that will be enabled for SSL connections.\n\n        \nNone\n\n        \nThe property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method.\n\n    \n\n    \n\n        \nmail.smtp.starttls.enable\n\n        \nIf true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.starttls.required\n\n        \nIf true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.socks.host\n\n        \nSpecifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.socks.port\n\n        \nSpecifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080.\n\n        \n1080\n\n        \nvalid port number\n\n    \n\n    \n\n        \nmail.smtp.auth.ntlm.disable\n\n        \nIf true, prevents use of the AUTH NTLM command\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.mailextension\n\n        \nExtension string to append to the MAIL command.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.userset\n\n        \nIf set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\n@sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string);\n\n\n\n\nFollowing example illustrates how to publish events using the email sinkusing mandatory parameters. As in the example, it publishes events come from the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection.\n\n\n\nEXAMPLE 2\n\n\n@sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string);\n\n\n\n\nFollowing example illustrates how to configure the query parameters and system parameters in the deployment ymal file.\nCorresponding parameters need to be configure under name:'email' and namespace:'sink' as follows\nsiddhi:\nextensions:\n-\nextension:\nname:'email'\nnamespace:'sink'\nproperties:\nusername:sender.account\naddress:sender.account@gmail.com\naddress:sender.account@gmail.com\nAs in the example, it publishes events comefrom the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection.\n\n\n\nEXAMPLE 3\n\n\n@sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream fooStream (name string, age int, country string);\n\n\n\n\nFollowing example illustrates how to publish events using the email sink. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given \nto\n,\ncc\n and \nbcc\n recipients using a secure connection. \nname\n in the \nsubject\n attribute will be the value of the \nname\n parameter in the corresponding output event\n\n\n\nSource\n\n\nemail \n(Source)\n\n\nEmail source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store ,  https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters).\n\n\n\nSyntax\n\n\n@source(type=\nemail\n, username=\nSTRING\n, password=\nSTRING\n, store=\nSTRING\n, host=\nSTRING\n, port=\nINT\n, folder=\nSTRING\n, search.term=\nSTRING\n, polling.interval=\nLONG\n, action.after.processed=\nSTRING\n, folder.to.move=\nSTRING\n, content.type=\nSTRING\n, ssl.enable=\nBOOL\n, @map(...)))\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \nusername\n\n        \nuser name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \npassword\n\n        \npassword of the email account\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \nstore\n\n        \nStore type that used to receive emails. it can be either imap or pop3.\n\n        \nimap\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nhost\n\n        \nHost name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable.\n\n        \nIf store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'.\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nport\n\n        \nThe port which is used to create the connection.\n\n        \n'993' the default value is valid only if store is imap and ssl enable\n\n        \nINT\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nfolder\n\n        \nName of the folder to fetch email.\n\n        \nINBOX\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nsearch.term\n\n        \nOption which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol.\n\n        \nNone\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \npolling.interval\n\n        \nInterval that email source should poll the account to check for new mails arrivals in seconds.\n\n        \n600\n\n        \nLONG\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \naction.after.processed\n\n        \nAction that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE\n\n        \nNONE\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nfolder.to.move\n\n        \nThe name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \ncontent.type\n\n        \nContent type of the email. It can be either 'text/plain' or 'text/html.'\n\n        \ntext/plain\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nssl.enable\n\n        \nIf it is 'true' then use a secure port to establish the connection. The possible values are 'true or false.\n\n        \ntrue\n\n        \nBOOL\n\n        \nYes\n\n        \nNo\n\n    \n\n\n\n\nSystem Parameters\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Parameters\n\n    \n\n    \n\n        \nmail.imap.partialfetch\n\n        \nControls whether the IMAP partial-fetch capability should be used\n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.fetchsize\n\n        \nPartial fetch size in bytes.\n\n        \n16K\n\n        \nvalue in bytes\n\n    \n\n    \n\n        \nmail.imap.peek\n\n        \nIf set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.connectiontimeout\n\n        \nSocket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket.\n\n        \ninfinity timeout\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.timeout\n\n        \nSocket read timeout value in milliseconds. This timeout is implemented by java.net.Socket.\n\n        \ninfinity timeout\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.writetimeout\n\n        \nSocket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection.\n\n        \ninfinity timeout\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.statuscachetimeout\n\n        \nTimeout value in milliseconds for cache of STATUS command response.\n\n        \n1000ms\n\n        \nTime out in miliseconds\n\n    \n\n    \n\n        \nmail.imap.appendbuffersize\n\n        \nMaximum size of a message to buffer in memory when appending to an IMAP folder.\n\n        \nNone\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.connectionpoolsize\n\n        \nMaximum number of available connections in the connection pool.\n\n        \n1\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.connectionpooltimeout\n\n        \nTimeout value in milliseconds for connection pool connections. \n\n        \n45000ms\n\n        \nAny Integer\n\n    \n\n    \n\n        \nmail.imap.separatestoreconnection\n\n        \nFlag to indicate whether to use a dedicated store connection for store commands.\n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.auth.login.disable\n\n        \nIf true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.auth.plain.disable\n\n        \nIf true, prevents use of the AUTHENTICATE PLAIN command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.auth.ntlm.disable\n\n        \nIf true, prevents use of the AUTHENTICATE NTLM command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.proxyauth.user\n\n        \nIf the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property.\n\n        \nNone\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.localaddress\n\n        \nLocal address (host name) to bind to when creating the IMAP socket.\n\n        \nDefaults to the address picked by the Socket class.\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.localport\n\n        \nLocal port number to bind to when creating the IMAP socket.\n\n        \nDefaults to the port number picked by the Socket class.\n\n        \nValid String value\n\n    \n\n    \n\n        \nmail.imap.sasl.enable\n\n        \nIf set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.sasl.mechanisms\n\n        \nA space or comma separated list of SASL mechanism names to try to use.\n\n        \nNone\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.sasl.authorizationid\n\n        \nThe authorization ID to use in the SASL authentication.\n\n        \nIf not set, the authentication ID (user name) is used.\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.sasl.realm\n\n        \nThe realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5.\n\n        \nNone\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.auth.ntlm.domain\n\n        \nThe NTLM authentication domain.\n\n        \nNone\n\n        \nValid string value\n\n    \n\n    \n\n        \nThe NTLM authentication domain.\n\n        \nNTLM protocol-specific flags.\n\n        \nNone\n\n        \nValid integer value\n\n    \n\n    \n\n        \nmail.imap.socketFactory\n\n        \nIf set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets.\n\n        \nNone\n\n        \nValid SocketFactory\n\n    \n\n    \n\n        \nmail.imap.socketFactory.class\n\n        \nIf set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets.\n\n        \nNone\n\n        \nValid string\n\n    \n\n    \n\n        \nmail.imap.socketFactory.fallback\n\n        \nIf set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. \n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.socketFactory.port\n\n        \nSpecifies the port to connect to when using the specified socket factory. Default port is used when not set.\n\n        \n143\n\n        \nValid Integer\n\n    \n\n    \n\n        \nmail.imap.ssl.checkserveridentity\n\n        \nIf set to true, check the server identity as specified by RFC 2595.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.ssl.trust\n\n        \nIf set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '\n', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.imap.ssl.socketFactory\n\n        \nIf set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets.\n\n        \nNone\n\n        \nSSL Socket Factory\n\n    \n\n    \n\n        \nmail.imap.ssl.socketFactory.class\n\n        \nIf set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.imap.ssl.socketFactory.port\n\n        \nSpecifies the port to connect to when using the specified socket factory.\n\n        \nthe default port will be used-993\n\n        \nvalid port number\n\n    \n\n    \n\n        \nmail.imap.ssl.protocols\n\n        \nSpecifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method.\n\n        \nNone\n\n        \nValid string\n\n    \n\n    \n\n        \nmail.imap.starttls.enable\n\n        \nIf true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.socks.host\n\n        \nSpecifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.imap.socks.port\n\n        \nSpecifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080.\n\n        \n1080\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.imap.minidletime\n\n        \nThis property sets the delay in milliseconds.\n\n        \n10 milliseconds\n\n        \ntime in seconds (Integer)\n\n    \n\n    \n\n        \nmail.imap.enableimapevents\n\n        \nEnable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.folder.class\n\n        \nClass name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store)\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.connectiontimeout\n\n        \nSocket connection timeout value in milliseconds.\n\n        \nInfinite timeout\n\n        \nInteger value\n\n    \n\n    \n\n        \nmail.pop3.timeout\n\n        \nSocket I/O timeout value in milliseconds. \n\n        \nInfinite timeout\n\n        \nInteger value\n\n    \n\n    \n\n        \nmail.pop3.message.class\n\n        \nClass name of a subclass of com.sun.mail.pop3.POP3Message\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.localaddress\n\n        \nLocal address (host name) to bind to when creating the POP3 socket.\n\n        \nDefaults to the address picked by the Socket class.\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.localport\n\n        \nLocal port number to bind to when creating the POP3 socket.\n\n        \nDefaults to the port number picked by the Socket class.\n\n        \nValid port number\n\n    \n\n    \n\n        \nmail.pop3.apop.enable\n\n        \nIf set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.socketFactory\n\n        \nIf set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets.\n\n        \nNone\n\n        \nSocket Factory\n\n    \n\n    \n\n        \nmail.pop3.socketFactory.class\n\n        \nIf set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.socketFactory.fallback\n\n        \nIf set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.socketFactory.port\n\n        \nSpecifies the port to connect to when using the specified socket factory.\n\n        \nDefault port\n\n        \nValid port number\n\n    \n\n    \n\n        \nmail.pop3.ssl.checkserveridentity\n\n        \nIf set to true, check the server identity as specified by RFC 2595. \n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.ssl.trust\n\n        \nIf set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to '\n', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents.\n\n        \nDepends on the certificate the server presents\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.ssl.socketFactory\n\n        \nIf set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets.\n\n        \nNone\n\n        \nSSL Socket Factory\n\n    \n\n    \n\n        \nmail.pop3.ssl.checkserveridentity\n\n        \nIf set to true, check the server identity as specified by RFC 2595. \n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.ssl.trust\n\n        \n If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted. \n\n        \ntrust depends on the certificate the server presents.\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.ssl.socketFactory\n\n        \nIf set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets.\n\n        \nNone\n\n        \nSSL Socket Factory\n\n    \n\n    \n\n        \nmail.pop3.ssl.socketFactory.class\n\n        \nIf set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets. \n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.ssl.socketFactory.p\n\n        \nSpecifies the port to connect to when using the specified socket factory.\n\n        \n995\n\n        \nValid Integer\n\n    \n\n    \n\n        \nmail.pop3.ssl.protocols\n\n        \nSpecifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.starttls.enable\n\n        \nIf true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.starttls.required\n\n        \nIf true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.socks.host\n\n        \nSpecifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.socks.port\n\n        \nSpecifies the port number for the SOCKS5 proxy server.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.disabletop\n\n        \nIf set to true, the POP3 TOP command will not be used to fetch message headers. \n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.forgettopheaders\n\n        \nIf set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.filecache.enable\n\n        \nIf set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.filecache.dir\n\n        \nIf the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.cachewriteto\n\n        \nControls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.keepmessagecontent\n\n        \nIf this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method). \n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\n@source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string);\n\n\n\n\nFollowing example illustrates how to receive events in \nxml\n format using email source. In this example only mandatory parameters are defined in the  in the stream definition. For other parameters default values are taken. since search term is not defined, it poll and take all new messages in the inbox folder\n\n\n\nEXAMPLE 2\n\n\n@source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string);\n\n\n\n\nFollowing example illustrates how to receive events in \nxml\n format using email source. The email source polls the mail account in every 500 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term (email messages which come from\nfrom.account@.\nhost name\n, contains \ncc.account\n in cc receipts list, and \nStream Processor\n words in the mail subject) In the example, action after processes is defined as the \nDELETE\n, so that after processing the event, corresponding mail is deleted from the mail folder.", 
            "title": "1.0.6"
        }, 
        {
            "location": "/api/1.0.6/#api-docs-v106", 
            "text": "", 
            "title": "API Docs - v1.0.6"
        }, 
        {
            "location": "/api/1.0.6/#sink", 
            "text": "", 
            "title": "Sink"
        }, 
        {
            "location": "/api/1.0.6/#email-sink", 
            "text": "The email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken for the optional parameters. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters). Further, some email account required to enable 'access to less secure apps' option (for gmail account you can enable it via https://myaccount.google.com/lesssecureapps).  Syntax  @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , @map(...)))  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         username \n         Username of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com). \n         \n         STRING \n         No \n         No \n     \n     \n         address \n         Address of the email account which is used to send emails. \n         \n         STRING \n         No \n         No \n     \n     \n         password \n         Password of the email account. \n         \n         STRING \n         No \n         No \n     \n     \n         host \n         Host name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account. \n         smtp.gmail.com \n         STRING \n         Yes \n         No \n     \n     \n         port \n         The port which is used to create the connection. \n         '465' the default value is only valid is ssl enable \n         INT \n         Yes \n         No \n     \n     \n         ssl.enable \n         Whether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection. \n         true \n         BOOL \n         Yes \n         No \n     \n     \n         auth \n         Whether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command. \n         true \n         BOOL \n         Yes \n         No \n     \n     \n         content.type \n         Content type can be either 'text/plain' or 'text/html'. \n         text/plain \n         STRING \n         Yes \n         No \n     \n     \n         subject \n         Subject of the mail which has to be send. \n         \n         STRING \n         No \n         Yes \n     \n     \n         to \n         Address of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list. \n         \n         STRING \n         No \n         Yes \n     \n     \n         cc \n         Address of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list. \n         None \n         STRING \n         Yes \n         No \n     \n     \n         bcc \n         Address of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list. \n         None \n         STRING \n         Yes \n         No \n       System Parameters  \n     \n         Name \n         Description \n         Default Value \n         Possible Parameters \n     \n     \n         mail.smtp.connectiontimeout \n         Socket connection timeout value in milliseconds.  \n         infinite timeout \n         Any Integer \n     \n     \n         mail.smtp.timeout \n         Socket I/O timeout value in milliseconds.  \n         infinite timeout \n         Any Integer \n     \n     \n         mail.smtp.from \n         Email address to use for SMTP MAIL command. This sets the envelope return address. \n         Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). \n         Valid email address \n     \n     \n         mail.smtp.localport \n         Local port number to bind to when creating the SMTP socket. \n         Defaults to the port number picked by the Socket class. \n         Any Integer \n     \n     \n         mail.smtp.ehlo \n         If false, do not attempt to sign on with the EHLO command. \n         true \n         true or false \n     \n     \n         mail.smtp.auth.login.disable \n         If true, prevents use of the AUTH LOGIN command. \n         false \n         true or false \n     \n     \n         mail.smtp.auth.plain.disable \n         If true, prevents use of the AUTH PLAIN command. \n         false \n         true or false \n     \n     \n         mail.smtp.auth.digest-md5.disable \n         If true, prevents use of the AUTH DIGEST-MD5 command. \n         false \n         true or false \n     \n     \n         mail.smtp.auth.ntlm.disable \n         If true, prevents use of the AUTH NTLM command \n         false \n         true or false \n     \n     \n         mail.smtp.auth.ntlm.domain \n         The NTLM authentication domain. \n         None \n         Valid NTLM authentication domain name \n     \n     \n         mail.smtp.auth.ntlm.flags \n         NTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details. \n         None \n         Valid NTLM protocol-specific flags. \n     \n     \n         mail.smtp.dsn.notify \n         The NOTIFY option to the RCPT command. \n         None \n         Either NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas). \n     \n     \n         mail.smtp.dsn.ret \n         The RET option to the MAIL command. \n         None \n         Either FULL or HDRS. \n     \n     \n         mail.smtp.sendpartial \n         If set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address. \n         false \n         true or false \n     \n     \n         mail.smtp.sasl.enable \n         If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. \n         false \n         true or false \n     \n     \n         mail.smtp.sasl.mechanisms \n         A space or comma separated list of SASL mechanism names to try to use. \n         None \n         \n     \n     \n         mail.smtp.sasl.authorizationid \n         The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. \n         username \n         Valid ID \n     \n     \n         mail.smtp.sasl.realm \n         The realm to use with DIGEST-MD5 authentication. \n         None \n         \n     \n     \n         mail.smtp.quitwait \n         If set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command. \n         false \n         true or false \n     \n     \n         mail.smtp.reportsuccess \n         If set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful. \n         false \n         true or false \n     \n     \n         mail.smtp.socketFactory \n         If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets. \n         None \n         Socket Factory \n     \n     \n         mail.smtp.socketFactory.class \n         If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets. \n         None \n         \n     \n     \n         mail.smtp.socketFactory.fallback \n         If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. \n         true \n         true or false \n     \n     \n         mail.smtp.socketFactory.port \n         Specifies the port to connect to when using the specified socket factory \n         25 \n         Valid port number \n     \n     \n         mail.smtp.ssl.protocols \n         Specifies the SSL protocols that will be enabled for SSL connections. \n         None \n         The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. \n     \n     \n         mail.smtp.starttls.enable \n         If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. \n         false \n         true or false \n     \n     \n         mail.smtp.starttls.required \n         If true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail. \n         false \n         true or false \n     \n     \n         mail.smtp.socks.host \n         Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. \n         None \n         \n     \n     \n         mail.smtp.socks.port \n         Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. \n         1080 \n         valid port number \n     \n     \n         mail.smtp.auth.ntlm.disable \n         If true, prevents use of the AUTH NTLM command \n         false \n         true or false \n     \n     \n         mail.smtp.mailextension \n         Extension string to append to the MAIL command. \n         None \n         \n     \n     \n         mail.smtp.userset \n         If set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue. \n         false \n         true or false \n       Examples  EXAMPLE 1  @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string);  Following example illustrates how to publish events using the email sinkusing mandatory parameters. As in the example, it publishes events come from the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection.  EXAMPLE 2  @sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string);  Following example illustrates how to configure the query parameters and system parameters in the deployment ymal file. Corresponding parameters need to be configure under name:'email' and namespace:'sink' as follows siddhi: extensions: - extension: name:'email' namespace:'sink' properties: username:sender.account address:sender.account@gmail.com address:sender.account@gmail.com As in the example, it publishes events comefrom the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection.  EXAMPLE 3  @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream fooStream (name string, age int, country string);  Following example illustrates how to publish events using the email sink. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given  to , cc  and  bcc  recipients using a secure connection.  name  in the  subject  attribute will be the value of the  name  parameter in the corresponding output event", 
            "title": "email (Sink)"
        }, 
        {
            "location": "/api/1.0.6/#source", 
            "text": "", 
            "title": "Source"
        }, 
        {
            "location": "/api/1.0.6/#email-source", 
            "text": "Email source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store ,  https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters).  Syntax  @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...)))  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         username \n         user name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account. \n         \n         STRING \n         No \n         No \n     \n     \n         password \n         password of the email account \n         \n         STRING \n         No \n         No \n     \n     \n         store \n         Store type that used to receive emails. it can be either imap or pop3. \n         imap \n         STRING \n         Yes \n         No \n     \n     \n         host \n         Host name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable. \n         If store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'. \n         STRING \n         Yes \n         No \n     \n     \n         port \n         The port which is used to create the connection. \n         '993' the default value is valid only if store is imap and ssl enable \n         INT \n         Yes \n         No \n     \n     \n         folder \n         Name of the folder to fetch email. \n         INBOX \n         STRING \n         Yes \n         No \n     \n     \n         search.term \n         Option which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol. \n         None \n         STRING \n         Yes \n         No \n     \n     \n         polling.interval \n         Interval that email source should poll the account to check for new mails arrivals in seconds. \n         600 \n         LONG \n         Yes \n         No \n     \n     \n         action.after.processed \n         Action that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE \n         NONE \n         STRING \n         Yes \n         No \n     \n     \n         folder.to.move \n         The name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move. \n         \n         STRING \n         No \n         No \n     \n     \n         content.type \n         Content type of the email. It can be either 'text/plain' or 'text/html.' \n         text/plain \n         STRING \n         Yes \n         No \n     \n     \n         ssl.enable \n         If it is 'true' then use a secure port to establish the connection. The possible values are 'true or false. \n         true \n         BOOL \n         Yes \n         No \n       System Parameters  \n     \n         Name \n         Description \n         Default Value \n         Possible Parameters \n     \n     \n         mail.imap.partialfetch \n         Controls whether the IMAP partial-fetch capability should be used \n         true \n         true or false \n     \n     \n         mail.imap.fetchsize \n         Partial fetch size in bytes. \n         16K \n         value in bytes \n     \n     \n         mail.imap.peek \n         If set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage. \n         false \n         true or false \n     \n     \n         mail.imap.connectiontimeout \n         Socket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket. \n         infinity timeout \n         Any Integer value \n     \n     \n         mail.imap.timeout \n         Socket read timeout value in milliseconds. This timeout is implemented by java.net.Socket. \n         infinity timeout \n         Any Integer value \n     \n     \n         mail.imap.writetimeout \n         Socket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection. \n         infinity timeout \n         Any Integer value \n     \n     \n         mail.imap.statuscachetimeout \n         Timeout value in milliseconds for cache of STATUS command response. \n         1000ms \n         Time out in miliseconds \n     \n     \n         mail.imap.appendbuffersize \n         Maximum size of a message to buffer in memory when appending to an IMAP folder. \n         None \n         Any Integer value \n     \n     \n         mail.imap.connectionpoolsize \n         Maximum number of available connections in the connection pool. \n         1 \n         Any Integer value \n     \n     \n         mail.imap.connectionpooltimeout \n         Timeout value in milliseconds for connection pool connections.  \n         45000ms \n         Any Integer \n     \n     \n         mail.imap.separatestoreconnection \n         Flag to indicate whether to use a dedicated store connection for store commands. \n         true \n         true or false \n     \n     \n         mail.imap.auth.login.disable \n         If true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command. \n         false \n         true or false \n     \n     \n         mail.imap.auth.plain.disable \n         If true, prevents use of the AUTHENTICATE PLAIN command. \n         false \n         true or false \n     \n     \n         mail.imap.auth.ntlm.disable \n         If true, prevents use of the AUTHENTICATE NTLM command. \n         false \n         true or false \n     \n     \n         mail.imap.proxyauth.user \n         If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property. \n         None \n         Valid string value \n     \n     \n         mail.imap.localaddress \n         Local address (host name) to bind to when creating the IMAP socket. \n         Defaults to the address picked by the Socket class. \n         Valid string value \n     \n     \n         mail.imap.localport \n         Local port number to bind to when creating the IMAP socket. \n         Defaults to the port number picked by the Socket class. \n         Valid String value \n     \n     \n         mail.imap.sasl.enable \n         If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. \n         false \n         true or false \n     \n     \n         mail.imap.sasl.mechanisms \n         A space or comma separated list of SASL mechanism names to try to use. \n         None \n         Valid string value \n     \n     \n         mail.imap.sasl.authorizationid \n         The authorization ID to use in the SASL authentication. \n         If not set, the authentication ID (user name) is used. \n         Valid string value \n     \n     \n         mail.imap.sasl.realm \n         The realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5. \n         None \n         Valid string value \n     \n     \n         mail.imap.auth.ntlm.domain \n         The NTLM authentication domain. \n         None \n         Valid string value \n     \n     \n         The NTLM authentication domain. \n         NTLM protocol-specific flags. \n         None \n         Valid integer value \n     \n     \n         mail.imap.socketFactory \n         If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets. \n         None \n         Valid SocketFactory \n     \n     \n         mail.imap.socketFactory.class \n         If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets. \n         None \n         Valid string \n     \n     \n         mail.imap.socketFactory.fallback \n         If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class.  \n         true \n         true or false \n     \n     \n         mail.imap.socketFactory.port \n         Specifies the port to connect to when using the specified socket factory. Default port is used when not set. \n         143 \n         Valid Integer \n     \n     \n         mail.imap.ssl.checkserveridentity \n         If set to true, check the server identity as specified by RFC 2595. \n         false \n         true or false \n     \n     \n         mail.imap.ssl.trust \n         If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. \n         None \n         Valid String \n     \n     \n         mail.imap.ssl.socketFactory \n         If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets. \n         None \n         SSL Socket Factory \n     \n     \n         mail.imap.ssl.socketFactory.class \n         If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets. \n         None \n         Valid String \n     \n     \n         mail.imap.ssl.socketFactory.port \n         Specifies the port to connect to when using the specified socket factory. \n         the default port will be used-993 \n         valid port number \n     \n     \n         mail.imap.ssl.protocols \n         Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. \n         None \n         Valid string \n     \n     \n         mail.imap.starttls.enable \n         If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. \n         false \n         true or false \n     \n     \n         mail.imap.socks.host \n         Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. \n         None \n         Valid String \n     \n     \n         mail.imap.socks.port \n         Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. \n         1080 \n         Valid String \n     \n     \n         mail.imap.minidletime \n         This property sets the delay in milliseconds. \n         10 milliseconds \n         time in seconds (Integer) \n     \n     \n         mail.imap.enableimapevents \n         Enable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string. \n         false \n         true or false \n     \n     \n         mail.imap.folder.class \n         Class name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store) \n         None \n         Valid String \n     \n     \n         mail.pop3.connectiontimeout \n         Socket connection timeout value in milliseconds. \n         Infinite timeout \n         Integer value \n     \n     \n         mail.pop3.timeout \n         Socket I/O timeout value in milliseconds.  \n         Infinite timeout \n         Integer value \n     \n     \n         mail.pop3.message.class \n         Class name of a subclass of com.sun.mail.pop3.POP3Message \n         None \n         Valid String \n     \n     \n         mail.pop3.localaddress \n         Local address (host name) to bind to when creating the POP3 socket. \n         Defaults to the address picked by the Socket class. \n         Valid String \n     \n     \n         mail.pop3.localport \n         Local port number to bind to when creating the POP3 socket. \n         Defaults to the port number picked by the Socket class. \n         Valid port number \n     \n     \n         mail.pop3.apop.enable \n         If set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password. \n         false \n         true or false \n     \n     \n         mail.pop3.socketFactory \n         If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets. \n         None \n         Socket Factory \n     \n     \n         mail.pop3.socketFactory.class \n         If set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets. \n         None \n         Valid String \n     \n     \n         mail.pop3.socketFactory.fallback \n         If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. \n         false \n         true or false \n     \n     \n         mail.pop3.socketFactory.port \n         Specifies the port to connect to when using the specified socket factory. \n         Default port \n         Valid port number \n     \n     \n         mail.pop3.ssl.checkserveridentity \n         If set to true, check the server identity as specified by RFC 2595.  \n         false \n         true or false \n     \n     \n         mail.pop3.ssl.trust \n         If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. \n         Depends on the certificate the server presents \n         Valid String \n     \n     \n         mail.pop3.ssl.socketFactory \n         If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. \n         None \n         SSL Socket Factory \n     \n     \n         mail.pop3.ssl.checkserveridentity \n         If set to true, check the server identity as specified by RFC 2595.  \n         false \n         true or false \n     \n     \n         mail.pop3.ssl.trust \n          If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.  \n         trust depends on the certificate the server presents. \n         Valid String \n     \n     \n         mail.pop3.ssl.socketFactory \n         If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. \n         None \n         SSL Socket Factory \n     \n     \n         mail.pop3.ssl.socketFactory.class \n         If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets.  \n         None \n         Valid String \n     \n     \n         mail.pop3.ssl.socketFactory.p \n         Specifies the port to connect to when using the specified socket factory. \n         995 \n         Valid Integer \n     \n     \n         mail.pop3.ssl.protocols \n         Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. \n         None \n         Valid String \n     \n     \n         mail.pop3.starttls.enable \n         If true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands \n         false \n         true or false \n     \n     \n         mail.pop3.starttls.required \n         If true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail. \n         false \n         true or false \n     \n     \n         mail.pop3.socks.host \n         Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. \n         None \n         Valid String \n     \n     \n         mail.pop3.socks.port \n         Specifies the port number for the SOCKS5 proxy server. \n         None \n         Valid String \n     \n     \n         mail.pop3.disabletop \n         If set to true, the POP3 TOP command will not be used to fetch message headers.  \n         false \n         true or false \n     \n     \n         mail.pop3.forgettopheaders \n         If set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command. \n         false \n         true or false \n     \n     \n         mail.pop3.filecache.enable \n         If set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. \n         false \n         true or false \n     \n     \n         mail.pop3.filecache.dir \n         If the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files. \n         None \n         Valid String \n     \n     \n         mail.pop3.cachewriteto \n         Controls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached. \n         false \n         true or false \n     \n     \n         mail.pop3.keepmessagecontent \n         If this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method).  \n         false \n         true or false \n       Examples  EXAMPLE 1  @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string);  Following example illustrates how to receive events in  xml  format using email source. In this example only mandatory parameters are defined in the  in the stream definition. For other parameters default values are taken. since search term is not defined, it poll and take all new messages in the inbox folder  EXAMPLE 2  @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string);  Following example illustrates how to receive events in  xml  format using email source. The email source polls the mail account in every 500 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term (email messages which come from from.account@. host name , contains  cc.account  in cc receipts list, and  Stream Processor  words in the mail subject) In the example, action after processes is defined as the  DELETE , so that after processing the event, corresponding mail is deleted from the mail folder.", 
            "title": "email (Source)"
        }, 
        {
            "location": "/api/1.0.5/", 
            "text": "API Docs - v1.0.5\n\n\nSink\n\n\nemail \n(Sink)\n\n\nThe email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken for the optional parameters. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters). Further, some email account required to enable 'access to less secure apps' option (for gmail account you can enable it via https://myaccount.google.com/lesssecureapps).\n\n\n\nSyntax\n\n\n@sink(type=\nemail\n, username=\nSTRING\n, address=\nSTRING\n, password=\nSTRING\n, host=\nSTRING\n, port=\nINT\n, ssl.enable=\nBOOL\n, auth=\nBOOL\n, content.type=\nSTRING\n, subject=\nSTRING\n, to=\nSTRING\n, cc=\nSTRING\n, bcc=\nSTRING\n, @map(...)))\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \nusername\n\n        \nUsername of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com).\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \naddress\n\n        \nAddress of the email account which is used to send emails.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \npassword\n\n        \nPassword of the email account.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \nhost\n\n        \nHost name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account.\n\n        \nsmtp.gmail.com\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nport\n\n        \nThe port which is used to create the connection.\n\n        \n'465' the default value is only valid is ssl enable\n\n        \nINT\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nssl.enable\n\n        \nWhether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection.\n\n        \ntrue\n\n        \nBOOL\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nauth\n\n        \nWhether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command.\n\n        \ntrue\n\n        \nBOOL\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \ncontent.type\n\n        \nContent type can be either 'text/plain' or 'text/html'.\n\n        \ntext/plain\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nsubject\n\n        \nSubject of the mail which has to be send.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nYes\n\n    \n\n    \n\n        \nto\n\n        \nAddress of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nYes\n\n    \n\n    \n\n        \ncc\n\n        \nAddress of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list.\n\n        \nNone\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nbcc\n\n        \nAddress of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list.\n\n        \nNone\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n\n\n\nSystem Parameters\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Parameters\n\n    \n\n    \n\n        \nmail.smtp.connectiontimeout\n\n        \nSocket connection timeout value in milliseconds. \n\n        \ninfinite timeout\n\n        \nAny Integer\n\n    \n\n    \n\n        \nmail.smtp.timeout\n\n        \nSocket I/O timeout value in milliseconds. \n\n        \ninfinite timeout\n\n        \nAny Integer\n\n    \n\n    \n\n        \nmail.smtp.from\n\n        \nEmail address to use for SMTP MAIL command. This sets the envelope return address.\n\n        \nDefaults to msg.getFrom() or InternetAddress.getLocalAddress().\n\n        \nValid email address\n\n    \n\n    \n\n        \nmail.smtp.localport\n\n        \nLocal port number to bind to when creating the SMTP socket.\n\n        \nDefaults to the port number picked by the Socket class.\n\n        \nAny Integer\n\n    \n\n    \n\n        \nmail.smtp.ehlo\n\n        \nIf false, do not attempt to sign on with the EHLO command.\n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.login.disable\n\n        \nIf true, prevents use of the AUTH LOGIN command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.plain.disable\n\n        \nIf true, prevents use of the AUTH PLAIN command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.digest-md5.disable\n\n        \nIf true, prevents use of the AUTH DIGEST-MD5 command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.ntlm.disable\n\n        \nIf true, prevents use of the AUTH NTLM command\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.ntlm.domain\n\n        \nThe NTLM authentication domain.\n\n        \nNone\n\n        \nValid NTLM authentication domain name\n\n    \n\n    \n\n        \nmail.smtp.auth.ntlm.flags\n\n        \nNTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details.\n\n        \nNone\n\n        \nValid NTLM protocol-specific flags.\n\n    \n\n    \n\n        \nmail.smtp.dsn.notify\n\n        \nThe NOTIFY option to the RCPT command.\n\n        \nNone\n\n        \nEither NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas).\n\n    \n\n    \n\n        \nmail.smtp.dsn.ret\n\n        \nThe RET option to the MAIL command.\n\n        \nNone\n\n        \nEither FULL or HDRS.\n\n    \n\n    \n\n        \nmail.smtp.sendpartial\n\n        \nIf set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.sasl.enable\n\n        \nIf set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.sasl.mechanisms\n\n        \nA space or comma separated list of SASL mechanism names to try to use.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.sasl.authorizationid\n\n        \nThe authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used.\n\n        \nusername\n\n        \nValid ID\n\n    \n\n    \n\n        \nmail.smtp.sasl.realm\n\n        \nThe realm to use with DIGEST-MD5 authentication.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.quitwait\n\n        \nIf set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.reportsuccess\n\n        \nIf set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.socketFactory\n\n        \nIf set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets.\n\n        \nNone\n\n        \nSocket Factory\n\n    \n\n    \n\n        \nmail.smtp.socketFactory.class\n\n        \nIf set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.socketFactory.fallback\n\n        \nIf set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class.\n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.socketFactory.port\n\n        \nSpecifies the port to connect to when using the specified socket factory\n\n        \n25\n\n        \nValid port number\n\n    \n\n    \n\n        \nmail.smtp.ssl.protocols\n\n        \nSpecifies the SSL protocols that will be enabled for SSL connections.\n\n        \nNone\n\n        \nThe property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method.\n\n    \n\n    \n\n        \nmail.smtp.starttls.enable\n\n        \nIf true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.starttls.required\n\n        \nIf true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.socks.host\n\n        \nSpecifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.socks.port\n\n        \nSpecifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080.\n\n        \n1080\n\n        \nvalid port number\n\n    \n\n    \n\n        \nmail.smtp.auth.ntlm.disable\n\n        \nIf true, prevents use of the AUTH NTLM command\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.mailextension\n\n        \nExtension string to append to the MAIL command.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.userset\n\n        \nIf set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\n@sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string);\n\n\n\n\nFollowing example illustrates how to publish events using the email sinkusing mandatory parameters. As in the example, it publishes events come from the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection.\n\n\n\nEXAMPLE 2\n\n\n@sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string);\n\n\n\n\nFollowing example illustrates how to configure the query parameters and system parameters in the deployment ymal file.\nCorresponding parameters need to be configure under name:'email' and namespace:'sink' as follows\nsiddhi:\nextensions:\n-\nextension:\nname:'email'\nnamespace:'sink'\nproperties:\nusername:sender.account\naddress:sender.account@gmail.com\naddress:sender.account@gmail.com\nAs in the example, it publishes events comefrom the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection.\n\n\n\nEXAMPLE 3\n\n\n@sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream fooStream (name string, age int, country string);\n\n\n\n\nFollowing example illustrates how to publish events using the email sink. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given \nto\n,\ncc\n and \nbcc\n recipients using a secure connection. \nname\n in the \nsubject\n attribute will be the value of the \nname\n parameter in the corresponding output event\n\n\n\nSource\n\n\nemail \n(Source)\n\n\nEmail source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store ,  https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters).\n\n\n\nSyntax\n\n\n@source(type=\nemail\n, username=\nSTRING\n, password=\nSTRING\n, store=\nSTRING\n, host=\nSTRING\n, port=\nINT\n, folder=\nSTRING\n, search.term=\nSTRING\n, polling.interval=\nLONG\n, action.after.processed=\nSTRING\n, folder.to.move=\nSTRING\n, content.type=\nSTRING\n, ssl.enable=\nBOOL\n, @map(...)))\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \nusername\n\n        \nuser name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \npassword\n\n        \npassword of the email account\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \nstore\n\n        \nStore type that used to receive emails. it can be either imap or pop3.\n\n        \nimap\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nhost\n\n        \nHost name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable.\n\n        \nIf store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'.\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nport\n\n        \nThe port which is used to create the connection.\n\n        \n'993' the default value is valid only if store is imap and ssl enable\n\n        \nINT\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nfolder\n\n        \nName of the folder to fetch email.\n\n        \nINBOX\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nsearch.term\n\n        \nOption which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol.\n\n        \nNone\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \npolling.interval\n\n        \nInterval that email source should poll the account to check for new mails arrivals in seconds.\n\n        \n600\n\n        \nLONG\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \naction.after.processed\n\n        \nAction that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE\n\n        \nNONE\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nfolder.to.move\n\n        \nThe name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \ncontent.type\n\n        \nContent type of the email. It can be either 'text/plain' or 'text/html.'\n\n        \ntext/plain\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nssl.enable\n\n        \nIf it is 'true' then use a secure port to establish the connection. The possible values are 'true or false.\n\n        \ntrue\n\n        \nBOOL\n\n        \nYes\n\n        \nNo\n\n    \n\n\n\n\nSystem Parameters\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Parameters\n\n    \n\n    \n\n        \nmail.imap.partialfetch\n\n        \nControls whether the IMAP partial-fetch capability should be used\n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.fetchsize\n\n        \nPartial fetch size in bytes.\n\n        \n16K\n\n        \nvalue in bytes\n\n    \n\n    \n\n        \nmail.imap.peek\n\n        \nIf set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.connectiontimeout\n\n        \nSocket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket.\n\n        \ninfinity timeout\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.timeout\n\n        \nSocket read timeout value in milliseconds. This timeout is implemented by java.net.Socket.\n\n        \ninfinity timeout\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.writetimeout\n\n        \nSocket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection.\n\n        \ninfinity timeout\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.statuscachetimeout\n\n        \nTimeout value in milliseconds for cache of STATUS command response.\n\n        \n1000ms\n\n        \nTime out in miliseconds\n\n    \n\n    \n\n        \nmail.imap.appendbuffersize\n\n        \nMaximum size of a message to buffer in memory when appending to an IMAP folder.\n\n        \nNone\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.connectionpoolsize\n\n        \nMaximum number of available connections in the connection pool.\n\n        \n1\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.connectionpooltimeout\n\n        \nTimeout value in milliseconds for connection pool connections. \n\n        \n45000ms\n\n        \nAny Integer\n\n    \n\n    \n\n        \nmail.imap.separatestoreconnection\n\n        \nFlag to indicate whether to use a dedicated store connection for store commands.\n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.auth.login.disable\n\n        \nIf true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.auth.plain.disable\n\n        \nIf true, prevents use of the AUTHENTICATE PLAIN command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.auth.ntlm.disable\n\n        \nIf true, prevents use of the AUTHENTICATE NTLM command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.proxyauth.user\n\n        \nIf the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property.\n\n        \nNone\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.localaddress\n\n        \nLocal address (host name) to bind to when creating the IMAP socket.\n\n        \nDefaults to the address picked by the Socket class.\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.localport\n\n        \nLocal port number to bind to when creating the IMAP socket.\n\n        \nDefaults to the port number picked by the Socket class.\n\n        \nValid String value\n\n    \n\n    \n\n        \nmail.imap.sasl.enable\n\n        \nIf set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.sasl.mechanisms\n\n        \nA space or comma separated list of SASL mechanism names to try to use.\n\n        \nNone\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.sasl.authorizationid\n\n        \nThe authorization ID to use in the SASL authentication.\n\n        \nIf not set, the authentication ID (user name) is used.\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.sasl.realm\n\n        \nThe realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5.\n\n        \nNone\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.auth.ntlm.domain\n\n        \nThe NTLM authentication domain.\n\n        \nNone\n\n        \nValid string value\n\n    \n\n    \n\n        \nThe NTLM authentication domain.\n\n        \nNTLM protocol-specific flags.\n\n        \nNone\n\n        \nValid integer value\n\n    \n\n    \n\n        \nmail.imap.socketFactory\n\n        \nIf set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets.\n\n        \nNone\n\n        \nValid SocketFactory\n\n    \n\n    \n\n        \nmail.imap.socketFactory.class\n\n        \nIf set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets.\n\n        \nNone\n\n        \nValid string\n\n    \n\n    \n\n        \nmail.imap.socketFactory.fallback\n\n        \nIf set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. \n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.socketFactory.port\n\n        \nSpecifies the port to connect to when using the specified socket factory. Default port is used when not set.\n\n        \n143\n\n        \nValid Integer\n\n    \n\n    \n\n        \nmail.imap.ssl.checkserveridentity\n\n        \nIf set to true, check the server identity as specified by RFC 2595.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.ssl.trust\n\n        \nIf set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '\n', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.imap.ssl.socketFactory\n\n        \nIf set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets.\n\n        \nNone\n\n        \nSSL Socket Factory\n\n    \n\n    \n\n        \nmail.imap.ssl.socketFactory.class\n\n        \nIf set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.imap.ssl.socketFactory.port\n\n        \nSpecifies the port to connect to when using the specified socket factory.\n\n        \nthe default port will be used-993\n\n        \nvalid port number\n\n    \n\n    \n\n        \nmail.imap.ssl.protocols\n\n        \nSpecifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method.\n\n        \nNone\n\n        \nValid string\n\n    \n\n    \n\n        \nmail.imap.starttls.enable\n\n        \nIf true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.socks.host\n\n        \nSpecifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.imap.socks.port\n\n        \nSpecifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080.\n\n        \n1080\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.imap.minidletime\n\n        \nThis property sets the delay in milliseconds.\n\n        \n10 milliseconds\n\n        \ntime in seconds (Integer)\n\n    \n\n    \n\n        \nmail.imap.enableimapevents\n\n        \nEnable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.folder.class\n\n        \nClass name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store)\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.connectiontimeout\n\n        \nSocket connection timeout value in milliseconds.\n\n        \nInfinite timeout\n\n        \nInteger value\n\n    \n\n    \n\n        \nmail.pop3.timeout\n\n        \nSocket I/O timeout value in milliseconds. \n\n        \nInfinite timeout\n\n        \nInteger value\n\n    \n\n    \n\n        \nmail.pop3.message.class\n\n        \nClass name of a subclass of com.sun.mail.pop3.POP3Message\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.localaddress\n\n        \nLocal address (host name) to bind to when creating the POP3 socket.\n\n        \nDefaults to the address picked by the Socket class.\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.localport\n\n        \nLocal port number to bind to when creating the POP3 socket.\n\n        \nDefaults to the port number picked by the Socket class.\n\n        \nValid port number\n\n    \n\n    \n\n        \nmail.pop3.apop.enable\n\n        \nIf set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.socketFactory\n\n        \nIf set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets.\n\n        \nNone\n\n        \nSocket Factory\n\n    \n\n    \n\n        \nmail.pop3.socketFactory.class\n\n        \nIf set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.socketFactory.fallback\n\n        \nIf set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.socketFactory.port\n\n        \nSpecifies the port to connect to when using the specified socket factory.\n\n        \nDefault port\n\n        \nValid port number\n\n    \n\n    \n\n        \nmail.pop3.ssl.checkserveridentity\n\n        \nIf set to true, check the server identity as specified by RFC 2595. \n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.ssl.trust\n\n        \nIf set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to '\n', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents.\n\n        \nDepends on the certificate the server presents\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.ssl.socketFactory\n\n        \nIf set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets.\n\n        \nNone\n\n        \nSSL Socket Factory\n\n    \n\n    \n\n        \nmail.pop3.ssl.checkserveridentity\n\n        \nIf set to true, check the server identity as specified by RFC 2595. \n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.ssl.trust\n\n        \n If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted. \n\n        \ntrust depends on the certificate the server presents.\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.ssl.socketFactory\n\n        \nIf set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets.\n\n        \nNone\n\n        \nSSL Socket Factory\n\n    \n\n    \n\n        \nmail.pop3.ssl.socketFactory.class\n\n        \nIf set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets. \n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.ssl.socketFactory.p\n\n        \nSpecifies the port to connect to when using the specified socket factory.\n\n        \n995\n\n        \nValid Integer\n\n    \n\n    \n\n        \nmail.pop3.ssl.protocols\n\n        \nSpecifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.starttls.enable\n\n        \nIf true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.starttls.required\n\n        \nIf true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.socks.host\n\n        \nSpecifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.socks.port\n\n        \nSpecifies the port number for the SOCKS5 proxy server.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.disabletop\n\n        \nIf set to true, the POP3 TOP command will not be used to fetch message headers. \n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.forgettopheaders\n\n        \nIf set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.filecache.enable\n\n        \nIf set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.filecache.dir\n\n        \nIf the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.cachewriteto\n\n        \nControls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.keepmessagecontent\n\n        \nIf this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method). \n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\n@source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string);\n\n\n\n\nFollowing example illustrates how to receive events in \nxml\n format using email source. In this example only mandatory parameters are defined in the  in the stream definition. For other parameters default values are taken. since search term is not defined, it poll and take all new messages in the inbox folder\n\n\n\nEXAMPLE 2\n\n\n@source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string);\n\n\n\n\nFollowing example illustrates how to receive events in \nxml\n format using email source. The email source polls the mail account in every 500 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term (email messages which come from\nfrom.account@.\nhost name\n, contains \ncc.account\n in cc receipts list, and \nStream Processor\n words in the mail subject) In the example, action after processes is defined as the \nDELETE\n, so that after processing the event, corresponding mail is deleted from the mail folder.", 
            "title": "1.0.5"
        }, 
        {
            "location": "/api/1.0.5/#api-docs-v105", 
            "text": "", 
            "title": "API Docs - v1.0.5"
        }, 
        {
            "location": "/api/1.0.5/#sink", 
            "text": "", 
            "title": "Sink"
        }, 
        {
            "location": "/api/1.0.5/#email-sink", 
            "text": "The email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken for the optional parameters. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters). Further, some email account required to enable 'access to less secure apps' option (for gmail account you can enable it via https://myaccount.google.com/lesssecureapps).  Syntax  @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , @map(...)))  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         username \n         Username of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com). \n         \n         STRING \n         No \n         No \n     \n     \n         address \n         Address of the email account which is used to send emails. \n         \n         STRING \n         No \n         No \n     \n     \n         password \n         Password of the email account. \n         \n         STRING \n         No \n         No \n     \n     \n         host \n         Host name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account. \n         smtp.gmail.com \n         STRING \n         Yes \n         No \n     \n     \n         port \n         The port which is used to create the connection. \n         '465' the default value is only valid is ssl enable \n         INT \n         Yes \n         No \n     \n     \n         ssl.enable \n         Whether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection. \n         true \n         BOOL \n         Yes \n         No \n     \n     \n         auth \n         Whether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command. \n         true \n         BOOL \n         Yes \n         No \n     \n     \n         content.type \n         Content type can be either 'text/plain' or 'text/html'. \n         text/plain \n         STRING \n         Yes \n         No \n     \n     \n         subject \n         Subject of the mail which has to be send. \n         \n         STRING \n         No \n         Yes \n     \n     \n         to \n         Address of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list. \n         \n         STRING \n         No \n         Yes \n     \n     \n         cc \n         Address of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list. \n         None \n         STRING \n         Yes \n         No \n     \n     \n         bcc \n         Address of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list. \n         None \n         STRING \n         Yes \n         No \n       System Parameters  \n     \n         Name \n         Description \n         Default Value \n         Possible Parameters \n     \n     \n         mail.smtp.connectiontimeout \n         Socket connection timeout value in milliseconds.  \n         infinite timeout \n         Any Integer \n     \n     \n         mail.smtp.timeout \n         Socket I/O timeout value in milliseconds.  \n         infinite timeout \n         Any Integer \n     \n     \n         mail.smtp.from \n         Email address to use for SMTP MAIL command. This sets the envelope return address. \n         Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). \n         Valid email address \n     \n     \n         mail.smtp.localport \n         Local port number to bind to when creating the SMTP socket. \n         Defaults to the port number picked by the Socket class. \n         Any Integer \n     \n     \n         mail.smtp.ehlo \n         If false, do not attempt to sign on with the EHLO command. \n         true \n         true or false \n     \n     \n         mail.smtp.auth.login.disable \n         If true, prevents use of the AUTH LOGIN command. \n         false \n         true or false \n     \n     \n         mail.smtp.auth.plain.disable \n         If true, prevents use of the AUTH PLAIN command. \n         false \n         true or false \n     \n     \n         mail.smtp.auth.digest-md5.disable \n         If true, prevents use of the AUTH DIGEST-MD5 command. \n         false \n         true or false \n     \n     \n         mail.smtp.auth.ntlm.disable \n         If true, prevents use of the AUTH NTLM command \n         false \n         true or false \n     \n     \n         mail.smtp.auth.ntlm.domain \n         The NTLM authentication domain. \n         None \n         Valid NTLM authentication domain name \n     \n     \n         mail.smtp.auth.ntlm.flags \n         NTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details. \n         None \n         Valid NTLM protocol-specific flags. \n     \n     \n         mail.smtp.dsn.notify \n         The NOTIFY option to the RCPT command. \n         None \n         Either NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas). \n     \n     \n         mail.smtp.dsn.ret \n         The RET option to the MAIL command. \n         None \n         Either FULL or HDRS. \n     \n     \n         mail.smtp.sendpartial \n         If set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address. \n         false \n         true or false \n     \n     \n         mail.smtp.sasl.enable \n         If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. \n         false \n         true or false \n     \n     \n         mail.smtp.sasl.mechanisms \n         A space or comma separated list of SASL mechanism names to try to use. \n         None \n         \n     \n     \n         mail.smtp.sasl.authorizationid \n         The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. \n         username \n         Valid ID \n     \n     \n         mail.smtp.sasl.realm \n         The realm to use with DIGEST-MD5 authentication. \n         None \n         \n     \n     \n         mail.smtp.quitwait \n         If set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command. \n         false \n         true or false \n     \n     \n         mail.smtp.reportsuccess \n         If set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful. \n         false \n         true or false \n     \n     \n         mail.smtp.socketFactory \n         If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets. \n         None \n         Socket Factory \n     \n     \n         mail.smtp.socketFactory.class \n         If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets. \n         None \n         \n     \n     \n         mail.smtp.socketFactory.fallback \n         If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. \n         true \n         true or false \n     \n     \n         mail.smtp.socketFactory.port \n         Specifies the port to connect to when using the specified socket factory \n         25 \n         Valid port number \n     \n     \n         mail.smtp.ssl.protocols \n         Specifies the SSL protocols that will be enabled for SSL connections. \n         None \n         The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. \n     \n     \n         mail.smtp.starttls.enable \n         If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. \n         false \n         true or false \n     \n     \n         mail.smtp.starttls.required \n         If true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail. \n         false \n         true or false \n     \n     \n         mail.smtp.socks.host \n         Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. \n         None \n         \n     \n     \n         mail.smtp.socks.port \n         Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. \n         1080 \n         valid port number \n     \n     \n         mail.smtp.auth.ntlm.disable \n         If true, prevents use of the AUTH NTLM command \n         false \n         true or false \n     \n     \n         mail.smtp.mailextension \n         Extension string to append to the MAIL command. \n         None \n         \n     \n     \n         mail.smtp.userset \n         If set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue. \n         false \n         true or false \n       Examples  EXAMPLE 1  @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string);  Following example illustrates how to publish events using the email sinkusing mandatory parameters. As in the example, it publishes events come from the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection.  EXAMPLE 2  @sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string);  Following example illustrates how to configure the query parameters and system parameters in the deployment ymal file. Corresponding parameters need to be configure under name:'email' and namespace:'sink' as follows siddhi: extensions: - extension: name:'email' namespace:'sink' properties: username:sender.account address:sender.account@gmail.com address:sender.account@gmail.com As in the example, it publishes events comefrom the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection.  EXAMPLE 3  @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream fooStream (name string, age int, country string);  Following example illustrates how to publish events using the email sink. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given  to , cc  and  bcc  recipients using a secure connection.  name  in the  subject  attribute will be the value of the  name  parameter in the corresponding output event", 
            "title": "email (Sink)"
        }, 
        {
            "location": "/api/1.0.5/#source", 
            "text": "", 
            "title": "Source"
        }, 
        {
            "location": "/api/1.0.5/#email-source", 
            "text": "Email source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store ,  https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters).  Syntax  @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...)))  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         username \n         user name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account. \n         \n         STRING \n         No \n         No \n     \n     \n         password \n         password of the email account \n         \n         STRING \n         No \n         No \n     \n     \n         store \n         Store type that used to receive emails. it can be either imap or pop3. \n         imap \n         STRING \n         Yes \n         No \n     \n     \n         host \n         Host name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable. \n         If store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'. \n         STRING \n         Yes \n         No \n     \n     \n         port \n         The port which is used to create the connection. \n         '993' the default value is valid only if store is imap and ssl enable \n         INT \n         Yes \n         No \n     \n     \n         folder \n         Name of the folder to fetch email. \n         INBOX \n         STRING \n         Yes \n         No \n     \n     \n         search.term \n         Option which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol. \n         None \n         STRING \n         Yes \n         No \n     \n     \n         polling.interval \n         Interval that email source should poll the account to check for new mails arrivals in seconds. \n         600 \n         LONG \n         Yes \n         No \n     \n     \n         action.after.processed \n         Action that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE \n         NONE \n         STRING \n         Yes \n         No \n     \n     \n         folder.to.move \n         The name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move. \n         \n         STRING \n         No \n         No \n     \n     \n         content.type \n         Content type of the email. It can be either 'text/plain' or 'text/html.' \n         text/plain \n         STRING \n         Yes \n         No \n     \n     \n         ssl.enable \n         If it is 'true' then use a secure port to establish the connection. The possible values are 'true or false. \n         true \n         BOOL \n         Yes \n         No \n       System Parameters  \n     \n         Name \n         Description \n         Default Value \n         Possible Parameters \n     \n     \n         mail.imap.partialfetch \n         Controls whether the IMAP partial-fetch capability should be used \n         true \n         true or false \n     \n     \n         mail.imap.fetchsize \n         Partial fetch size in bytes. \n         16K \n         value in bytes \n     \n     \n         mail.imap.peek \n         If set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage. \n         false \n         true or false \n     \n     \n         mail.imap.connectiontimeout \n         Socket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket. \n         infinity timeout \n         Any Integer value \n     \n     \n         mail.imap.timeout \n         Socket read timeout value in milliseconds. This timeout is implemented by java.net.Socket. \n         infinity timeout \n         Any Integer value \n     \n     \n         mail.imap.writetimeout \n         Socket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection. \n         infinity timeout \n         Any Integer value \n     \n     \n         mail.imap.statuscachetimeout \n         Timeout value in milliseconds for cache of STATUS command response. \n         1000ms \n         Time out in miliseconds \n     \n     \n         mail.imap.appendbuffersize \n         Maximum size of a message to buffer in memory when appending to an IMAP folder. \n         None \n         Any Integer value \n     \n     \n         mail.imap.connectionpoolsize \n         Maximum number of available connections in the connection pool. \n         1 \n         Any Integer value \n     \n     \n         mail.imap.connectionpooltimeout \n         Timeout value in milliseconds for connection pool connections.  \n         45000ms \n         Any Integer \n     \n     \n         mail.imap.separatestoreconnection \n         Flag to indicate whether to use a dedicated store connection for store commands. \n         true \n         true or false \n     \n     \n         mail.imap.auth.login.disable \n         If true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command. \n         false \n         true or false \n     \n     \n         mail.imap.auth.plain.disable \n         If true, prevents use of the AUTHENTICATE PLAIN command. \n         false \n         true or false \n     \n     \n         mail.imap.auth.ntlm.disable \n         If true, prevents use of the AUTHENTICATE NTLM command. \n         false \n         true or false \n     \n     \n         mail.imap.proxyauth.user \n         If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property. \n         None \n         Valid string value \n     \n     \n         mail.imap.localaddress \n         Local address (host name) to bind to when creating the IMAP socket. \n         Defaults to the address picked by the Socket class. \n         Valid string value \n     \n     \n         mail.imap.localport \n         Local port number to bind to when creating the IMAP socket. \n         Defaults to the port number picked by the Socket class. \n         Valid String value \n     \n     \n         mail.imap.sasl.enable \n         If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. \n         false \n         true or false \n     \n     \n         mail.imap.sasl.mechanisms \n         A space or comma separated list of SASL mechanism names to try to use. \n         None \n         Valid string value \n     \n     \n         mail.imap.sasl.authorizationid \n         The authorization ID to use in the SASL authentication. \n         If not set, the authentication ID (user name) is used. \n         Valid string value \n     \n     \n         mail.imap.sasl.realm \n         The realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5. \n         None \n         Valid string value \n     \n     \n         mail.imap.auth.ntlm.domain \n         The NTLM authentication domain. \n         None \n         Valid string value \n     \n     \n         The NTLM authentication domain. \n         NTLM protocol-specific flags. \n         None \n         Valid integer value \n     \n     \n         mail.imap.socketFactory \n         If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets. \n         None \n         Valid SocketFactory \n     \n     \n         mail.imap.socketFactory.class \n         If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets. \n         None \n         Valid string \n     \n     \n         mail.imap.socketFactory.fallback \n         If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class.  \n         true \n         true or false \n     \n     \n         mail.imap.socketFactory.port \n         Specifies the port to connect to when using the specified socket factory. Default port is used when not set. \n         143 \n         Valid Integer \n     \n     \n         mail.imap.ssl.checkserveridentity \n         If set to true, check the server identity as specified by RFC 2595. \n         false \n         true or false \n     \n     \n         mail.imap.ssl.trust \n         If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. \n         None \n         Valid String \n     \n     \n         mail.imap.ssl.socketFactory \n         If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets. \n         None \n         SSL Socket Factory \n     \n     \n         mail.imap.ssl.socketFactory.class \n         If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets. \n         None \n         Valid String \n     \n     \n         mail.imap.ssl.socketFactory.port \n         Specifies the port to connect to when using the specified socket factory. \n         the default port will be used-993 \n         valid port number \n     \n     \n         mail.imap.ssl.protocols \n         Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. \n         None \n         Valid string \n     \n     \n         mail.imap.starttls.enable \n         If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. \n         false \n         true or false \n     \n     \n         mail.imap.socks.host \n         Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. \n         None \n         Valid String \n     \n     \n         mail.imap.socks.port \n         Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. \n         1080 \n         Valid String \n     \n     \n         mail.imap.minidletime \n         This property sets the delay in milliseconds. \n         10 milliseconds \n         time in seconds (Integer) \n     \n     \n         mail.imap.enableimapevents \n         Enable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string. \n         false \n         true or false \n     \n     \n         mail.imap.folder.class \n         Class name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store) \n         None \n         Valid String \n     \n     \n         mail.pop3.connectiontimeout \n         Socket connection timeout value in milliseconds. \n         Infinite timeout \n         Integer value \n     \n     \n         mail.pop3.timeout \n         Socket I/O timeout value in milliseconds.  \n         Infinite timeout \n         Integer value \n     \n     \n         mail.pop3.message.class \n         Class name of a subclass of com.sun.mail.pop3.POP3Message \n         None \n         Valid String \n     \n     \n         mail.pop3.localaddress \n         Local address (host name) to bind to when creating the POP3 socket. \n         Defaults to the address picked by the Socket class. \n         Valid String \n     \n     \n         mail.pop3.localport \n         Local port number to bind to when creating the POP3 socket. \n         Defaults to the port number picked by the Socket class. \n         Valid port number \n     \n     \n         mail.pop3.apop.enable \n         If set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password. \n         false \n         true or false \n     \n     \n         mail.pop3.socketFactory \n         If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets. \n         None \n         Socket Factory \n     \n     \n         mail.pop3.socketFactory.class \n         If set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets. \n         None \n         Valid String \n     \n     \n         mail.pop3.socketFactory.fallback \n         If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. \n         false \n         true or false \n     \n     \n         mail.pop3.socketFactory.port \n         Specifies the port to connect to when using the specified socket factory. \n         Default port \n         Valid port number \n     \n     \n         mail.pop3.ssl.checkserveridentity \n         If set to true, check the server identity as specified by RFC 2595.  \n         false \n         true or false \n     \n     \n         mail.pop3.ssl.trust \n         If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. \n         Depends on the certificate the server presents \n         Valid String \n     \n     \n         mail.pop3.ssl.socketFactory \n         If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. \n         None \n         SSL Socket Factory \n     \n     \n         mail.pop3.ssl.checkserveridentity \n         If set to true, check the server identity as specified by RFC 2595.  \n         false \n         true or false \n     \n     \n         mail.pop3.ssl.trust \n          If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.  \n         trust depends on the certificate the server presents. \n         Valid String \n     \n     \n         mail.pop3.ssl.socketFactory \n         If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. \n         None \n         SSL Socket Factory \n     \n     \n         mail.pop3.ssl.socketFactory.class \n         If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets.  \n         None \n         Valid String \n     \n     \n         mail.pop3.ssl.socketFactory.p \n         Specifies the port to connect to when using the specified socket factory. \n         995 \n         Valid Integer \n     \n     \n         mail.pop3.ssl.protocols \n         Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. \n         None \n         Valid String \n     \n     \n         mail.pop3.starttls.enable \n         If true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands \n         false \n         true or false \n     \n     \n         mail.pop3.starttls.required \n         If true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail. \n         false \n         true or false \n     \n     \n         mail.pop3.socks.host \n         Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. \n         None \n         Valid String \n     \n     \n         mail.pop3.socks.port \n         Specifies the port number for the SOCKS5 proxy server. \n         None \n         Valid String \n     \n     \n         mail.pop3.disabletop \n         If set to true, the POP3 TOP command will not be used to fetch message headers.  \n         false \n         true or false \n     \n     \n         mail.pop3.forgettopheaders \n         If set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command. \n         false \n         true or false \n     \n     \n         mail.pop3.filecache.enable \n         If set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. \n         false \n         true or false \n     \n     \n         mail.pop3.filecache.dir \n         If the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files. \n         None \n         Valid String \n     \n     \n         mail.pop3.cachewriteto \n         Controls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached. \n         false \n         true or false \n     \n     \n         mail.pop3.keepmessagecontent \n         If this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method).  \n         false \n         true or false \n       Examples  EXAMPLE 1  @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string);  Following example illustrates how to receive events in  xml  format using email source. In this example only mandatory parameters are defined in the  in the stream definition. For other parameters default values are taken. since search term is not defined, it poll and take all new messages in the inbox folder  EXAMPLE 2  @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string);  Following example illustrates how to receive events in  xml  format using email source. The email source polls the mail account in every 500 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term (email messages which come from from.account@. host name , contains  cc.account  in cc receipts list, and  Stream Processor  words in the mail subject) In the example, action after processes is defined as the  DELETE , so that after processing the event, corresponding mail is deleted from the mail folder.", 
            "title": "email (Source)"
        }, 
        {
            "location": "/api/1.0.4/", 
            "text": "API Docs - v1.0.4\n\n\nSink\n\n\nemail \n(Sink)\n\n\nThe email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken for the optional parameters. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters). Further, some email account required to enable 'access to less secure apps' option (for gmail account you can enable it via https://myaccount.google.com/lesssecureapps).\n\n\n\nSyntax\n\n\n@sink(type=\nemail\n, username=\nSTRING\n, address=\nSTRING\n, password=\nSTRING\n, host=\nSTRING\n, port=\nINT\n, ssl.enable=\nBOOL\n, auth=\nBOOL\n, content.type=\nSTRING\n, subject=\nSTRING\n, to=\nSTRING\n, cc=\nSTRING\n, bcc=\nSTRING\n, @map(...)))\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \nusername\n\n        \nUsername of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com).\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \naddress\n\n        \nAddress of the email account which is used to send emails.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \npassword\n\n        \nPassword of the email account.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \nhost\n\n        \nHost name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account.\n\n        \nsmtp.gmail.com\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nport\n\n        \nThe port which is used to create the connection.\n\n        \n'465' the default value is only valid is ssl enable\n\n        \nINT\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nssl.enable\n\n        \nWhether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection.\n\n        \ntrue\n\n        \nBOOL\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nauth\n\n        \nWhether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command.\n\n        \ntrue\n\n        \nBOOL\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \ncontent.type\n\n        \nContent type can be either 'text/plain' or 'text/html'.\n\n        \ntext/plain\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nsubject\n\n        \nSubject of the mail which has to be send.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nYes\n\n    \n\n    \n\n        \nto\n\n        \nAddress of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nYes\n\n    \n\n    \n\n        \ncc\n\n        \nAddress of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list.\n\n        \nNone\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nbcc\n\n        \nAddress of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list.\n\n        \nNone\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n\n\n\nSystem Parameters\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Parameters\n\n    \n\n    \n\n        \nmail.smtp.connectiontimeout\n\n        \nSocket connection timeout value in milliseconds. \n\n        \ninfinite timeout\n\n        \nAny Integer\n\n    \n\n    \n\n        \nmail.smtp.timeout\n\n        \nSocket I/O timeout value in milliseconds. \n\n        \ninfinite timeout\n\n        \nAny Integer\n\n    \n\n    \n\n        \nmail.smtp.from\n\n        \nEmail address to use for SMTP MAIL command. This sets the envelope return address.\n\n        \nDefaults to msg.getFrom() or InternetAddress.getLocalAddress().\n\n        \nValid email address\n\n    \n\n    \n\n        \nmail.smtp.localport\n\n        \nLocal port number to bind to when creating the SMTP socket.\n\n        \nDefaults to the port number picked by the Socket class.\n\n        \nAny Integer\n\n    \n\n    \n\n        \nmail.smtp.ehlo\n\n        \nIf false, do not attempt to sign on with the EHLO command.\n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.login.disable\n\n        \nIf true, prevents use of the AUTH LOGIN command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.plain.disable\n\n        \nIf true, prevents use of the AUTH PLAIN command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.digest-md5.disable\n\n        \nIf true, prevents use of the AUTH DIGEST-MD5 command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.ntlm.disable\n\n        \nIf true, prevents use of the AUTH NTLM command\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.ntlm.domain\n\n        \nThe NTLM authentication domain.\n\n        \nNone\n\n        \nValid NTLM authentication domain name\n\n    \n\n    \n\n        \nmail.smtp.auth.ntlm.flags\n\n        \nNTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details.\n\n        \nNone\n\n        \nValid NTLM protocol-specific flags.\n\n    \n\n    \n\n        \nmail.smtp.dsn.notify\n\n        \nThe NOTIFY option to the RCPT command.\n\n        \nNone\n\n        \nEither NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas).\n\n    \n\n    \n\n        \nmail.smtp.dsn.ret\n\n        \nThe RET option to the MAIL command.\n\n        \nNone\n\n        \nEither FULL or HDRS.\n\n    \n\n    \n\n        \nmail.smtp.sendpartial\n\n        \nIf set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.sasl.enable\n\n        \nIf set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.sasl.mechanisms\n\n        \nA space or comma separated list of SASL mechanism names to try to use.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.sasl.authorizationid\n\n        \nThe authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used.\n\n        \nusername\n\n        \nValid ID\n\n    \n\n    \n\n        \nmail.smtp.sasl.realm\n\n        \nThe realm to use with DIGEST-MD5 authentication.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.quitwait\n\n        \nIf set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.reportsuccess\n\n        \nIf set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.socketFactory\n\n        \nIf set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets.\n\n        \nNone\n\n        \nSocket Factory\n\n    \n\n    \n\n        \nmail.smtp.socketFactory.class\n\n        \nIf set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.socketFactory.fallback\n\n        \nIf set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class.\n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.socketFactory.port\n\n        \nSpecifies the port to connect to when using the specified socket factory\n\n        \n25\n\n        \nValid port number\n\n    \n\n    \n\n        \nmail.smtp.ssl.protocols\n\n        \nSpecifies the SSL protocols that will be enabled for SSL connections.\n\n        \nNone\n\n        \nThe property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method.\n\n    \n\n    \n\n        \nmail.smtp.starttls.enable\n\n        \nIf true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.starttls.required\n\n        \nIf true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.socks.host\n\n        \nSpecifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.socks.port\n\n        \nSpecifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080.\n\n        \n1080\n\n        \nvalid port number\n\n    \n\n    \n\n        \nmail.smtp.auth.ntlm.disable\n\n        \nIf true, prevents use of the AUTH NTLM command\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.mailextension\n\n        \nExtension string to append to the MAIL command.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.userset\n\n        \nIf set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\n@sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string);\n\n\n\n\nFollowing example illustrates how to publish events using the email sinkusing mandatory parameters. As in the example, it publishes events come from the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection.\n\n\n\nEXAMPLE 2\n\n\n@sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string);\n\n\n\n\nFollowing example illustrates how to configure the query parameters and system parameters in the deployment ymal file.\nCorresponding parameters need to be configure under name:'email' and namespace:'sink' as follows\nsiddhi:\nextensions:\n-\nextension:\nname:'email'\nnamespace:'sink'\nproperties:\nusername:sender.account\naddress:sender.account@gmail.com\naddress:sender.account@gmail.com\nAs in the example, it publishes events comefrom the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection.\n\n\n\nEXAMPLE 3\n\n\n@sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream fooStream (name string, age int, country string);\n\n\n\n\nFollowing example illustrates how to publish events using the email sink. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given \nto\n,\ncc\n and \nbcc\n recipients using a secure connection. \nname\n in the \nsubject\n attribute will be the value of the \nname\n parameter in the corresponding output event\n\n\n\nSource\n\n\nemail \n(Source)\n\n\nEmail source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store ,  https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters).\n\n\n\nSyntax\n\n\n@source(type=\nemail\n, username=\nSTRING\n, password=\nSTRING\n, store=\nSTRING\n, host=\nSTRING\n, port=\nINT\n, folder=\nSTRING\n, search.term=\nSTRING\n, polling.interval=\nLONG\n, action.after.processed=\nSTRING\n, folder.to.move=\nSTRING\n, content.type=\nSTRING\n, ssl.enable=\nBOOL\n, @map(...)))\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \nusername\n\n        \nuser name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \npassword\n\n        \npassword of the email account\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \nstore\n\n        \nStore type that used to receive emails. it can be either imap or pop3.\n\n        \nimap\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nhost\n\n        \nHost name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable.\n\n        \nIf store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'.\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nport\n\n        \nThe port which is used to create the connection.\n\n        \n'993' the default value is valid only if store is imap and ssl enable\n\n        \nINT\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nfolder\n\n        \nName of the folder to fetch email.\n\n        \nINBOX\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nsearch.term\n\n        \nOption which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol.\n\n        \nNone\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \npolling.interval\n\n        \nInterval that email source should poll the account to check for new mails arrivals in seconds.\n\n        \n600\n\n        \nLONG\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \naction.after.processed\n\n        \nAction that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE\n\n        \nNONE\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nfolder.to.move\n\n        \nThe name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \ncontent.type\n\n        \nContent type of the email. It can be either 'text/plain' or 'text/html.'\n\n        \ntext/plain\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nssl.enable\n\n        \nIf it is 'true' then use a secure port to establish the connection. The possible values are 'true or false.\n\n        \ntrue\n\n        \nBOOL\n\n        \nYes\n\n        \nNo\n\n    \n\n\n\n\nSystem Parameters\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Parameters\n\n    \n\n    \n\n        \nmail.imap.partialfetch\n\n        \nControls whether the IMAP partial-fetch capability should be used\n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.fetchsize\n\n        \nPartial fetch size in bytes.\n\n        \n16K\n\n        \nvalue in bytes\n\n    \n\n    \n\n        \nmail.imap.peek\n\n        \nIf set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.connectiontimeout\n\n        \nSocket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket.\n\n        \ninfinity timeout\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.timeout\n\n        \nSocket read timeout value in milliseconds. This timeout is implemented by java.net.Socket.\n\n        \ninfinity timeout\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.writetimeout\n\n        \nSocket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection.\n\n        \ninfinity timeout\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.statuscachetimeout\n\n        \nTimeout value in milliseconds for cache of STATUS command response.\n\n        \n1000ms\n\n        \nTime out in miliseconds\n\n    \n\n    \n\n        \nmail.imap.appendbuffersize\n\n        \nMaximum size of a message to buffer in memory when appending to an IMAP folder.\n\n        \nNone\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.connectionpoolsize\n\n        \nMaximum number of available connections in the connection pool.\n\n        \n1\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.connectionpooltimeout\n\n        \nTimeout value in milliseconds for connection pool connections. \n\n        \n45000ms\n\n        \nAny Integer\n\n    \n\n    \n\n        \nmail.imap.separatestoreconnection\n\n        \nFlag to indicate whether to use a dedicated store connection for store commands.\n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.auth.login.disable\n\n        \nIf true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.auth.plain.disable\n\n        \nIf true, prevents use of the AUTHENTICATE PLAIN command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.auth.ntlm.disable\n\n        \nIf true, prevents use of the AUTHENTICATE NTLM command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.proxyauth.user\n\n        \nIf the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property.\n\n        \nNone\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.localaddress\n\n        \nLocal address (host name) to bind to when creating the IMAP socket.\n\n        \nDefaults to the address picked by the Socket class.\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.localport\n\n        \nLocal port number to bind to when creating the IMAP socket.\n\n        \nDefaults to the port number picked by the Socket class.\n\n        \nValid String value\n\n    \n\n    \n\n        \nmail.imap.sasl.enable\n\n        \nIf set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.sasl.mechanisms\n\n        \nA space or comma separated list of SASL mechanism names to try to use.\n\n        \nNone\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.sasl.authorizationid\n\n        \nThe authorization ID to use in the SASL authentication.\n\n        \nIf not set, the authentication ID (user name) is used.\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.sasl.realm\n\n        \nThe realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5.\n\n        \nNone\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.auth.ntlm.domain\n\n        \nThe NTLM authentication domain.\n\n        \nNone\n\n        \nValid string value\n\n    \n\n    \n\n        \nThe NTLM authentication domain.\n\n        \nNTLM protocol-specific flags.\n\n        \nNone\n\n        \nValid integer value\n\n    \n\n    \n\n        \nmail.imap.socketFactory\n\n        \nIf set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets.\n\n        \nNone\n\n        \nValid SocketFactory\n\n    \n\n    \n\n        \nmail.imap.socketFactory.class\n\n        \nIf set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets.\n\n        \nNone\n\n        \nValid string\n\n    \n\n    \n\n        \nmail.imap.socketFactory.fallback\n\n        \nIf set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. \n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.socketFactory.port\n\n        \nSpecifies the port to connect to when using the specified socket factory. Default port is used when not set.\n\n        \n143\n\n        \nValid Integer\n\n    \n\n    \n\n        \nmail.imap.ssl.checkserveridentity\n\n        \nIf set to true, check the server identity as specified by RFC 2595.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.ssl.trust\n\n        \nIf set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '\n', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.imap.ssl.socketFactory\n\n        \nIf set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets.\n\n        \nNone\n\n        \nSSL Socket Factory\n\n    \n\n    \n\n        \nmail.imap.ssl.socketFactory.class\n\n        \nIf set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.imap.ssl.socketFactory.port\n\n        \nSpecifies the port to connect to when using the specified socket factory.\n\n        \nthe default port will be used-993\n\n        \nvalid port number\n\n    \n\n    \n\n        \nmail.imap.ssl.protocols\n\n        \nSpecifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method.\n\n        \nNone\n\n        \nValid string\n\n    \n\n    \n\n        \nmail.imap.starttls.enable\n\n        \nIf true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.socks.host\n\n        \nSpecifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.imap.socks.port\n\n        \nSpecifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080.\n\n        \n1080\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.imap.minidletime\n\n        \nThis property sets the delay in milliseconds.\n\n        \n10 milliseconds\n\n        \ntime in seconds (Integer)\n\n    \n\n    \n\n        \nmail.imap.enableimapevents\n\n        \nEnable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.folder.class\n\n        \nClass name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store)\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.connectiontimeout\n\n        \nSocket connection timeout value in milliseconds.\n\n        \nInfinite timeout\n\n        \nInteger value\n\n    \n\n    \n\n        \nmail.pop3.timeout\n\n        \nSocket I/O timeout value in milliseconds. \n\n        \nInfinite timeout\n\n        \nInteger value\n\n    \n\n    \n\n        \nmail.pop3.message.class\n\n        \nClass name of a subclass of com.sun.mail.pop3.POP3Message\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.localaddress\n\n        \nLocal address (host name) to bind to when creating the POP3 socket.\n\n        \nDefaults to the address picked by the Socket class.\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.localport\n\n        \nLocal port number to bind to when creating the POP3 socket.\n\n        \nDefaults to the port number picked by the Socket class.\n\n        \nValid port number\n\n    \n\n    \n\n        \nmail.pop3.apop.enable\n\n        \nIf set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.socketFactory\n\n        \nIf set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets.\n\n        \nNone\n\n        \nSocket Factory\n\n    \n\n    \n\n        \nmail.pop3.socketFactory.class\n\n        \nIf set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.socketFactory.fallback\n\n        \nIf set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.socketFactory.port\n\n        \nSpecifies the port to connect to when using the specified socket factory.\n\n        \nDefault port\n\n        \nValid port number\n\n    \n\n    \n\n        \nmail.pop3.ssl.checkserveridentity\n\n        \nIf set to true, check the server identity as specified by RFC 2595. \n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.ssl.trust\n\n        \nIf set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to '\n', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents.\n\n        \nDepends on the certificate the server presents\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.ssl.socketFactory\n\n        \nIf set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets.\n\n        \nNone\n\n        \nSSL Socket Factory\n\n    \n\n    \n\n        \nmail.pop3.ssl.checkserveridentity\n\n        \nIf set to true, check the server identity as specified by RFC 2595. \n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.ssl.trust\n\n        \n If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted. \n\n        \ntrust depends on the certificate the server presents.\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.ssl.socketFactory\n\n        \nIf set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets.\n\n        \nNone\n\n        \nSSL Socket Factory\n\n    \n\n    \n\n        \nmail.pop3.ssl.socketFactory.class\n\n        \nIf set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets. \n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.ssl.socketFactory.p\n\n        \nSpecifies the port to connect to when using the specified socket factory.\n\n        \n995\n\n        \nValid Integer\n\n    \n\n    \n\n        \nmail.pop3.ssl.protocols\n\n        \nSpecifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.starttls.enable\n\n        \nIf true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.starttls.required\n\n        \nIf true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.socks.host\n\n        \nSpecifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.socks.port\n\n        \nSpecifies the port number for the SOCKS5 proxy server.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.disabletop\n\n        \nIf set to true, the POP3 TOP command will not be used to fetch message headers. \n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.forgettopheaders\n\n        \nIf set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.filecache.enable\n\n        \nIf set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.filecache.dir\n\n        \nIf the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.cachewriteto\n\n        \nControls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.keepmessagecontent\n\n        \nIf this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method). \n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\n@source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string);\n\n\n\n\nFollowing example illustrates how to receive events in \nxml\n format using email source. In this example only mandatory parameters are defined in the  in the stream definition. For other parameters default values are taken. since search term is not defined, it poll and take all new messages in the inbox folder\n\n\n\nEXAMPLE 2\n\n\n@source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string);\n\n\n\n\nFollowing example illustrates how to receive events in \nxml\n format using email source. The email source polls the mail account in every 500 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term (email messages which come from\nfrom.account@.\nhost name\n, contains \ncc.account\n in cc receipts list, and \nStream Processor\n words in the mail subject) In the example, action after processes is defined as the \nDELETE\n, so that after processing the event, corresponding mail is deleted from the mail folder.", 
            "title": "1.0.4"
        }, 
        {
            "location": "/api/1.0.4/#api-docs-v104", 
            "text": "", 
            "title": "API Docs - v1.0.4"
        }, 
        {
            "location": "/api/1.0.4/#sink", 
            "text": "", 
            "title": "Sink"
        }, 
        {
            "location": "/api/1.0.4/#email-sink", 
            "text": "The email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken for the optional parameters. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters). Further, some email account required to enable 'access to less secure apps' option (for gmail account you can enable it via https://myaccount.google.com/lesssecureapps).  Syntax  @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , @map(...)))  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         username \n         Username of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com). \n         \n         STRING \n         No \n         No \n     \n     \n         address \n         Address of the email account which is used to send emails. \n         \n         STRING \n         No \n         No \n     \n     \n         password \n         Password of the email account. \n         \n         STRING \n         No \n         No \n     \n     \n         host \n         Host name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account. \n         smtp.gmail.com \n         STRING \n         Yes \n         No \n     \n     \n         port \n         The port which is used to create the connection. \n         '465' the default value is only valid is ssl enable \n         INT \n         Yes \n         No \n     \n     \n         ssl.enable \n         Whether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection. \n         true \n         BOOL \n         Yes \n         No \n     \n     \n         auth \n         Whether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command. \n         true \n         BOOL \n         Yes \n         No \n     \n     \n         content.type \n         Content type can be either 'text/plain' or 'text/html'. \n         text/plain \n         STRING \n         Yes \n         No \n     \n     \n         subject \n         Subject of the mail which has to be send. \n         \n         STRING \n         No \n         Yes \n     \n     \n         to \n         Address of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list. \n         \n         STRING \n         No \n         Yes \n     \n     \n         cc \n         Address of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list. \n         None \n         STRING \n         Yes \n         No \n     \n     \n         bcc \n         Address of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list. \n         None \n         STRING \n         Yes \n         No \n       System Parameters  \n     \n         Name \n         Description \n         Default Value \n         Possible Parameters \n     \n     \n         mail.smtp.connectiontimeout \n         Socket connection timeout value in milliseconds.  \n         infinite timeout \n         Any Integer \n     \n     \n         mail.smtp.timeout \n         Socket I/O timeout value in milliseconds.  \n         infinite timeout \n         Any Integer \n     \n     \n         mail.smtp.from \n         Email address to use for SMTP MAIL command. This sets the envelope return address. \n         Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). \n         Valid email address \n     \n     \n         mail.smtp.localport \n         Local port number to bind to when creating the SMTP socket. \n         Defaults to the port number picked by the Socket class. \n         Any Integer \n     \n     \n         mail.smtp.ehlo \n         If false, do not attempt to sign on with the EHLO command. \n         true \n         true or false \n     \n     \n         mail.smtp.auth.login.disable \n         If true, prevents use of the AUTH LOGIN command. \n         false \n         true or false \n     \n     \n         mail.smtp.auth.plain.disable \n         If true, prevents use of the AUTH PLAIN command. \n         false \n         true or false \n     \n     \n         mail.smtp.auth.digest-md5.disable \n         If true, prevents use of the AUTH DIGEST-MD5 command. \n         false \n         true or false \n     \n     \n         mail.smtp.auth.ntlm.disable \n         If true, prevents use of the AUTH NTLM command \n         false \n         true or false \n     \n     \n         mail.smtp.auth.ntlm.domain \n         The NTLM authentication domain. \n         None \n         Valid NTLM authentication domain name \n     \n     \n         mail.smtp.auth.ntlm.flags \n         NTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details. \n         None \n         Valid NTLM protocol-specific flags. \n     \n     \n         mail.smtp.dsn.notify \n         The NOTIFY option to the RCPT command. \n         None \n         Either NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas). \n     \n     \n         mail.smtp.dsn.ret \n         The RET option to the MAIL command. \n         None \n         Either FULL or HDRS. \n     \n     \n         mail.smtp.sendpartial \n         If set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address. \n         false \n         true or false \n     \n     \n         mail.smtp.sasl.enable \n         If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. \n         false \n         true or false \n     \n     \n         mail.smtp.sasl.mechanisms \n         A space or comma separated list of SASL mechanism names to try to use. \n         None \n         \n     \n     \n         mail.smtp.sasl.authorizationid \n         The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. \n         username \n         Valid ID \n     \n     \n         mail.smtp.sasl.realm \n         The realm to use with DIGEST-MD5 authentication. \n         None \n         \n     \n     \n         mail.smtp.quitwait \n         If set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command. \n         false \n         true or false \n     \n     \n         mail.smtp.reportsuccess \n         If set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful. \n         false \n         true or false \n     \n     \n         mail.smtp.socketFactory \n         If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets. \n         None \n         Socket Factory \n     \n     \n         mail.smtp.socketFactory.class \n         If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets. \n         None \n         \n     \n     \n         mail.smtp.socketFactory.fallback \n         If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. \n         true \n         true or false \n     \n     \n         mail.smtp.socketFactory.port \n         Specifies the port to connect to when using the specified socket factory \n         25 \n         Valid port number \n     \n     \n         mail.smtp.ssl.protocols \n         Specifies the SSL protocols that will be enabled for SSL connections. \n         None \n         The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. \n     \n     \n         mail.smtp.starttls.enable \n         If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. \n         false \n         true or false \n     \n     \n         mail.smtp.starttls.required \n         If true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail. \n         false \n         true or false \n     \n     \n         mail.smtp.socks.host \n         Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. \n         None \n         \n     \n     \n         mail.smtp.socks.port \n         Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. \n         1080 \n         valid port number \n     \n     \n         mail.smtp.auth.ntlm.disable \n         If true, prevents use of the AUTH NTLM command \n         false \n         true or false \n     \n     \n         mail.smtp.mailextension \n         Extension string to append to the MAIL command. \n         None \n         \n     \n     \n         mail.smtp.userset \n         If set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue. \n         false \n         true or false \n       Examples  EXAMPLE 1  @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string);  Following example illustrates how to publish events using the email sinkusing mandatory parameters. As in the example, it publishes events come from the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection.  EXAMPLE 2  @sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string);  Following example illustrates how to configure the query parameters and system parameters in the deployment ymal file. Corresponding parameters need to be configure under name:'email' and namespace:'sink' as follows siddhi: extensions: - extension: name:'email' namespace:'sink' properties: username:sender.account address:sender.account@gmail.com address:sender.account@gmail.com As in the example, it publishes events comefrom the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection.  EXAMPLE 3  @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream fooStream (name string, age int, country string);  Following example illustrates how to publish events using the email sink. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given  to , cc  and  bcc  recipients using a secure connection.  name  in the  subject  attribute will be the value of the  name  parameter in the corresponding output event", 
            "title": "email (Sink)"
        }, 
        {
            "location": "/api/1.0.4/#source", 
            "text": "", 
            "title": "Source"
        }, 
        {
            "location": "/api/1.0.4/#email-source", 
            "text": "Email source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store ,  https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters).  Syntax  @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...)))  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         username \n         user name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account. \n         \n         STRING \n         No \n         No \n     \n     \n         password \n         password of the email account \n         \n         STRING \n         No \n         No \n     \n     \n         store \n         Store type that used to receive emails. it can be either imap or pop3. \n         imap \n         STRING \n         Yes \n         No \n     \n     \n         host \n         Host name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable. \n         If store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'. \n         STRING \n         Yes \n         No \n     \n     \n         port \n         The port which is used to create the connection. \n         '993' the default value is valid only if store is imap and ssl enable \n         INT \n         Yes \n         No \n     \n     \n         folder \n         Name of the folder to fetch email. \n         INBOX \n         STRING \n         Yes \n         No \n     \n     \n         search.term \n         Option which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol. \n         None \n         STRING \n         Yes \n         No \n     \n     \n         polling.interval \n         Interval that email source should poll the account to check for new mails arrivals in seconds. \n         600 \n         LONG \n         Yes \n         No \n     \n     \n         action.after.processed \n         Action that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE \n         NONE \n         STRING \n         Yes \n         No \n     \n     \n         folder.to.move \n         The name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move. \n         \n         STRING \n         No \n         No \n     \n     \n         content.type \n         Content type of the email. It can be either 'text/plain' or 'text/html.' \n         text/plain \n         STRING \n         Yes \n         No \n     \n     \n         ssl.enable \n         If it is 'true' then use a secure port to establish the connection. The possible values are 'true or false. \n         true \n         BOOL \n         Yes \n         No \n       System Parameters  \n     \n         Name \n         Description \n         Default Value \n         Possible Parameters \n     \n     \n         mail.imap.partialfetch \n         Controls whether the IMAP partial-fetch capability should be used \n         true \n         true or false \n     \n     \n         mail.imap.fetchsize \n         Partial fetch size in bytes. \n         16K \n         value in bytes \n     \n     \n         mail.imap.peek \n         If set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage. \n         false \n         true or false \n     \n     \n         mail.imap.connectiontimeout \n         Socket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket. \n         infinity timeout \n         Any Integer value \n     \n     \n         mail.imap.timeout \n         Socket read timeout value in milliseconds. This timeout is implemented by java.net.Socket. \n         infinity timeout \n         Any Integer value \n     \n     \n         mail.imap.writetimeout \n         Socket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection. \n         infinity timeout \n         Any Integer value \n     \n     \n         mail.imap.statuscachetimeout \n         Timeout value in milliseconds for cache of STATUS command response. \n         1000ms \n         Time out in miliseconds \n     \n     \n         mail.imap.appendbuffersize \n         Maximum size of a message to buffer in memory when appending to an IMAP folder. \n         None \n         Any Integer value \n     \n     \n         mail.imap.connectionpoolsize \n         Maximum number of available connections in the connection pool. \n         1 \n         Any Integer value \n     \n     \n         mail.imap.connectionpooltimeout \n         Timeout value in milliseconds for connection pool connections.  \n         45000ms \n         Any Integer \n     \n     \n         mail.imap.separatestoreconnection \n         Flag to indicate whether to use a dedicated store connection for store commands. \n         true \n         true or false \n     \n     \n         mail.imap.auth.login.disable \n         If true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command. \n         false \n         true or false \n     \n     \n         mail.imap.auth.plain.disable \n         If true, prevents use of the AUTHENTICATE PLAIN command. \n         false \n         true or false \n     \n     \n         mail.imap.auth.ntlm.disable \n         If true, prevents use of the AUTHENTICATE NTLM command. \n         false \n         true or false \n     \n     \n         mail.imap.proxyauth.user \n         If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property. \n         None \n         Valid string value \n     \n     \n         mail.imap.localaddress \n         Local address (host name) to bind to when creating the IMAP socket. \n         Defaults to the address picked by the Socket class. \n         Valid string value \n     \n     \n         mail.imap.localport \n         Local port number to bind to when creating the IMAP socket. \n         Defaults to the port number picked by the Socket class. \n         Valid String value \n     \n     \n         mail.imap.sasl.enable \n         If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. \n         false \n         true or false \n     \n     \n         mail.imap.sasl.mechanisms \n         A space or comma separated list of SASL mechanism names to try to use. \n         None \n         Valid string value \n     \n     \n         mail.imap.sasl.authorizationid \n         The authorization ID to use in the SASL authentication. \n         If not set, the authentication ID (user name) is used. \n         Valid string value \n     \n     \n         mail.imap.sasl.realm \n         The realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5. \n         None \n         Valid string value \n     \n     \n         mail.imap.auth.ntlm.domain \n         The NTLM authentication domain. \n         None \n         Valid string value \n     \n     \n         The NTLM authentication domain. \n         NTLM protocol-specific flags. \n         None \n         Valid integer value \n     \n     \n         mail.imap.socketFactory \n         If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets. \n         None \n         Valid SocketFactory \n     \n     \n         mail.imap.socketFactory.class \n         If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets. \n         None \n         Valid string \n     \n     \n         mail.imap.socketFactory.fallback \n         If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class.  \n         true \n         true or false \n     \n     \n         mail.imap.socketFactory.port \n         Specifies the port to connect to when using the specified socket factory. Default port is used when not set. \n         143 \n         Valid Integer \n     \n     \n         mail.imap.ssl.checkserveridentity \n         If set to true, check the server identity as specified by RFC 2595. \n         false \n         true or false \n     \n     \n         mail.imap.ssl.trust \n         If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. \n         None \n         Valid String \n     \n     \n         mail.imap.ssl.socketFactory \n         If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets. \n         None \n         SSL Socket Factory \n     \n     \n         mail.imap.ssl.socketFactory.class \n         If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets. \n         None \n         Valid String \n     \n     \n         mail.imap.ssl.socketFactory.port \n         Specifies the port to connect to when using the specified socket factory. \n         the default port will be used-993 \n         valid port number \n     \n     \n         mail.imap.ssl.protocols \n         Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. \n         None \n         Valid string \n     \n     \n         mail.imap.starttls.enable \n         If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. \n         false \n         true or false \n     \n     \n         mail.imap.socks.host \n         Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. \n         None \n         Valid String \n     \n     \n         mail.imap.socks.port \n         Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. \n         1080 \n         Valid String \n     \n     \n         mail.imap.minidletime \n         This property sets the delay in milliseconds. \n         10 milliseconds \n         time in seconds (Integer) \n     \n     \n         mail.imap.enableimapevents \n         Enable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string. \n         false \n         true or false \n     \n     \n         mail.imap.folder.class \n         Class name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store) \n         None \n         Valid String \n     \n     \n         mail.pop3.connectiontimeout \n         Socket connection timeout value in milliseconds. \n         Infinite timeout \n         Integer value \n     \n     \n         mail.pop3.timeout \n         Socket I/O timeout value in milliseconds.  \n         Infinite timeout \n         Integer value \n     \n     \n         mail.pop3.message.class \n         Class name of a subclass of com.sun.mail.pop3.POP3Message \n         None \n         Valid String \n     \n     \n         mail.pop3.localaddress \n         Local address (host name) to bind to when creating the POP3 socket. \n         Defaults to the address picked by the Socket class. \n         Valid String \n     \n     \n         mail.pop3.localport \n         Local port number to bind to when creating the POP3 socket. \n         Defaults to the port number picked by the Socket class. \n         Valid port number \n     \n     \n         mail.pop3.apop.enable \n         If set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password. \n         false \n         true or false \n     \n     \n         mail.pop3.socketFactory \n         If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets. \n         None \n         Socket Factory \n     \n     \n         mail.pop3.socketFactory.class \n         If set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets. \n         None \n         Valid String \n     \n     \n         mail.pop3.socketFactory.fallback \n         If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. \n         false \n         true or false \n     \n     \n         mail.pop3.socketFactory.port \n         Specifies the port to connect to when using the specified socket factory. \n         Default port \n         Valid port number \n     \n     \n         mail.pop3.ssl.checkserveridentity \n         If set to true, check the server identity as specified by RFC 2595.  \n         false \n         true or false \n     \n     \n         mail.pop3.ssl.trust \n         If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. \n         Depends on the certificate the server presents \n         Valid String \n     \n     \n         mail.pop3.ssl.socketFactory \n         If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. \n         None \n         SSL Socket Factory \n     \n     \n         mail.pop3.ssl.checkserveridentity \n         If set to true, check the server identity as specified by RFC 2595.  \n         false \n         true or false \n     \n     \n         mail.pop3.ssl.trust \n          If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.  \n         trust depends on the certificate the server presents. \n         Valid String \n     \n     \n         mail.pop3.ssl.socketFactory \n         If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. \n         None \n         SSL Socket Factory \n     \n     \n         mail.pop3.ssl.socketFactory.class \n         If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets.  \n         None \n         Valid String \n     \n     \n         mail.pop3.ssl.socketFactory.p \n         Specifies the port to connect to when using the specified socket factory. \n         995 \n         Valid Integer \n     \n     \n         mail.pop3.ssl.protocols \n         Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. \n         None \n         Valid String \n     \n     \n         mail.pop3.starttls.enable \n         If true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands \n         false \n         true or false \n     \n     \n         mail.pop3.starttls.required \n         If true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail. \n         false \n         true or false \n     \n     \n         mail.pop3.socks.host \n         Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. \n         None \n         Valid String \n     \n     \n         mail.pop3.socks.port \n         Specifies the port number for the SOCKS5 proxy server. \n         None \n         Valid String \n     \n     \n         mail.pop3.disabletop \n         If set to true, the POP3 TOP command will not be used to fetch message headers.  \n         false \n         true or false \n     \n     \n         mail.pop3.forgettopheaders \n         If set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command. \n         false \n         true or false \n     \n     \n         mail.pop3.filecache.enable \n         If set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. \n         false \n         true or false \n     \n     \n         mail.pop3.filecache.dir \n         If the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files. \n         None \n         Valid String \n     \n     \n         mail.pop3.cachewriteto \n         Controls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached. \n         false \n         true or false \n     \n     \n         mail.pop3.keepmessagecontent \n         If this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method).  \n         false \n         true or false \n       Examples  EXAMPLE 1  @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string);  Following example illustrates how to receive events in  xml  format using email source. In this example only mandatory parameters are defined in the  in the stream definition. For other parameters default values are taken. since search term is not defined, it poll and take all new messages in the inbox folder  EXAMPLE 2  @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string);  Following example illustrates how to receive events in  xml  format using email source. The email source polls the mail account in every 500 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term (email messages which come from from.account@. host name , contains  cc.account  in cc receipts list, and  Stream Processor  words in the mail subject) In the example, action after processes is defined as the  DELETE , so that after processing the event, corresponding mail is deleted from the mail folder.", 
            "title": "email (Source)"
        }, 
        {
            "location": "/api/1.0.3/", 
            "text": "API Docs - v1.0.3\n\n\nSink\n\n\nemail \n(Sink)\n\n\nThe email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken for the optional parameters. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters). Further, some email account required to enable 'access to less secure apps' option (for gmail account you can enable it via https://myaccount.google.com/lesssecureapps).\n\n\n\nSyntax\n\n\n@sink(type=\nemail\n, username=\nSTRING\n, address=\nSTRING\n, password=\nSTRING\n, host=\nSTRING\n, port=\nINT\n, ssl.enable=\nBOOL\n, auth=\nBOOL\n, content.type=\nSTRING\n, subject=\nSTRING\n, to=\nSTRING\n, cc=\nSTRING\n, bcc=\nSTRING\n, @map(...)))\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \nusername\n\n        \nUsername of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com).\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \naddress\n\n        \nAddress of the email account which is used to send emails.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \npassword\n\n        \nPassword of the email account.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \nhost\n\n        \nHost name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account.\n\n        \nsmtp.gmail.com\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nport\n\n        \nThe port which is used to create the connection.\n\n        \n'465' the default value is only valid is ssl enable\n\n        \nINT\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nssl.enable\n\n        \nWhether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection.\n\n        \ntrue\n\n        \nBOOL\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nauth\n\n        \nWhether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command.\n\n        \ntrue\n\n        \nBOOL\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \ncontent.type\n\n        \nContent type can be either 'text/plain' or 'text/html'.\n\n        \ntext/plain\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nsubject\n\n        \nSubject of the mail which has to be send.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nYes\n\n    \n\n    \n\n        \nto\n\n        \nAddress of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nYes\n\n    \n\n    \n\n        \ncc\n\n        \nAddress of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list.\n\n        \nNone\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nbcc\n\n        \nAddress of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list.\n\n        \nNone\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n\n\n\nSystem Parameters\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Parameters\n\n    \n\n    \n\n        \nmail.smtp.connectiontimeout\n\n        \nSocket connection timeout value in milliseconds. \n\n        \ninfinite timeout\n\n        \nAny Integer\n\n    \n\n    \n\n        \nmail.smtp.timeout\n\n        \nSocket I/O timeout value in milliseconds. \n\n        \ninfinite timeout\n\n        \nAny Integer\n\n    \n\n    \n\n        \nmail.smtp.from\n\n        \nEmail address to use for SMTP MAIL command. This sets the envelope return address.\n\n        \nDefaults to msg.getFrom() or InternetAddress.getLocalAddress().\n\n        \nValid email address\n\n    \n\n    \n\n        \nmail.smtp.localport\n\n        \nLocal port number to bind to when creating the SMTP socket.\n\n        \nDefaults to the port number picked by the Socket class.\n\n        \nAny Integer\n\n    \n\n    \n\n        \nmail.smtp.ehlo\n\n        \nIf false, do not attempt to sign on with the EHLO command.\n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.login.disable\n\n        \nIf true, prevents use of the AUTH LOGIN command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.plain.disable\n\n        \nIf true, prevents use of the AUTH PLAIN command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.digest-md5.disable\n\n        \nIf true, prevents use of the AUTH DIGEST-MD5 command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.ntlm.disable\n\n        \nIf true, prevents use of the AUTH NTLM command\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.ntlm.domain\n\n        \nThe NTLM authentication domain.\n\n        \nNone\n\n        \nValid NTLM authentication domain name\n\n    \n\n    \n\n        \nmail.smtp.auth.ntlm.flags\n\n        \nNTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details.\n\n        \nNone\n\n        \nValid NTLM protocol-specific flags.\n\n    \n\n    \n\n        \nmail.smtp.dsn.notify\n\n        \nThe NOTIFY option to the RCPT command.\n\n        \nNone\n\n        \nEither NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas).\n\n    \n\n    \n\n        \nmail.smtp.dsn.ret\n\n        \nThe RET option to the MAIL command.\n\n        \nNone\n\n        \nEither FULL or HDRS.\n\n    \n\n    \n\n        \nmail.smtp.sendpartial\n\n        \nIf set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.sasl.enable\n\n        \nIf set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.sasl.mechanisms\n\n        \nA space or comma separated list of SASL mechanism names to try to use.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.sasl.authorizationid\n\n        \nThe authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used.\n\n        \nusername\n\n        \nValid ID\n\n    \n\n    \n\n        \nmail.smtp.sasl.realm\n\n        \nThe realm to use with DIGEST-MD5 authentication.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.quitwait\n\n        \nIf set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.reportsuccess\n\n        \nIf set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.socketFactory\n\n        \nIf set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets.\n\n        \nNone\n\n        \nSocket Factory\n\n    \n\n    \n\n        \nmail.smtp.socketFactory.class\n\n        \nIf set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.socketFactory.fallback\n\n        \nIf set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class.\n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.socketFactory.port\n\n        \nSpecifies the port to connect to when using the specified socket factory\n\n        \n25\n\n        \nValid port number\n\n    \n\n    \n\n        \nmail.smtp.ssl.protocols\n\n        \nSpecifies the SSL protocols that will be enabled for SSL connections.\n\n        \nNone\n\n        \nThe property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method.\n\n    \n\n    \n\n        \nmail.smtp.starttls.enable\n\n        \nIf true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.starttls.required\n\n        \nIf true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.socks.host\n\n        \nSpecifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.socks.port\n\n        \nSpecifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080.\n\n        \n1080\n\n        \nvalid port number\n\n    \n\n    \n\n        \nmail.smtp.auth.ntlm.disable\n\n        \nIf true, prevents use of the AUTH NTLM command\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.mailextension\n\n        \nExtension string to append to the MAIL command.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.userset\n\n        \nIf set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\n@sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string);\n\n\n\n\nFollowing example illustrates how to publish events using the email sinkusing mandatory parameters. As in the example, it publishes events come from the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection.\n\n\n\nEXAMPLE 2\n\n\n@sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string);\n\n\n\n\nFollowing example illustrates how to configure the query parameters and system parameters in the deployment ymal file.\nCorresponding parameters need to be configure under name:'email' and namespace:'sink' as follows\nsiddhi:\nextensions:\n-\nextension:\nname:'email'\nnamespace:'sink'\nproperties:\nusername:sender.account\naddress:sender.account@gmail.com\naddress:sender.account@gmail.com\nAs in the example, it publishes events comefrom the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection.\n\n\n\nEXAMPLE 3\n\n\n@sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream fooStream (name string, age int, country string);\n\n\n\n\nFollowing example illustrates how to publish events using the email sink. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given \nto\n,\ncc\n and \nbcc\n recipients using a secure connection. \nname\n in the \nsubject\n attribute will be the value of the \nname\n parameter in the corresponding output event\n\n\n\nSource\n\n\nemail \n(Source)\n\n\nEmail source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store ,  https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters).\n\n\n\nSyntax\n\n\n@source(type=\nemail\n, username=\nSTRING\n, password=\nSTRING\n, store=\nSTRING\n, host=\nSTRING\n, port=\nINT\n, folder=\nSTRING\n, search.term=\nSTRING\n, polling.interval=\nLONG\n, action.after.processed=\nSTRING\n, folder.to.move=\nSTRING\n, content.type=\nSTRING\n, ssl.enable=\nBOOL\n, @map(...)))\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \nusername\n\n        \nuser name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \npassword\n\n        \npassword of the email account\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \nstore\n\n        \nStore type that used to receive emails. it can be either imap or pop3.\n\n        \nimap\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nhost\n\n        \nHost name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable.\n\n        \nIf store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'.\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nport\n\n        \nThe port which is used to create the connection.\n\n        \n'993' the default value is valid only if store is imap and ssl enable\n\n        \nINT\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nfolder\n\n        \nName of the folder to fetch email.\n\n        \nINBOX\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nsearch.term\n\n        \nOption which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol.\n\n        \nNone\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \npolling.interval\n\n        \nInterval that email source should poll the account to check for new mails arrivals in seconds.\n\n        \n600\n\n        \nLONG\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \naction.after.processed\n\n        \nAction that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE\n\n        \nNONE\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nfolder.to.move\n\n        \nThe name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \ncontent.type\n\n        \nContent type of the email. It can be either 'text/plain' or 'text/html.'\n\n        \ntext/plain\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nssl.enable\n\n        \nIf it is 'true' then use a secure port to establish the connection. The possible values are 'true or false.\n\n        \ntrue\n\n        \nBOOL\n\n        \nYes\n\n        \nNo\n\n    \n\n\n\n\nSystem Parameters\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Parameters\n\n    \n\n    \n\n        \nmail.imap.partialfetch\n\n        \nControls whether the IMAP partial-fetch capability should be used\n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.fetchsize\n\n        \nPartial fetch size in bytes.\n\n        \n16K\n\n        \nvalue in bytes\n\n    \n\n    \n\n        \nmail.imap.peek\n\n        \nIf set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.connectiontimeout\n\n        \nSocket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket.\n\n        \ninfinity timeout\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.timeout\n\n        \nSocket read timeout value in milliseconds. This timeout is implemented by java.net.Socket.\n\n        \ninfinity timeout\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.writetimeout\n\n        \nSocket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection.\n\n        \ninfinity timeout\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.statuscachetimeout\n\n        \nTimeout value in milliseconds for cache of STATUS command response.\n\n        \n1000ms\n\n        \nTime out in miliseconds\n\n    \n\n    \n\n        \nmail.imap.appendbuffersize\n\n        \nMaximum size of a message to buffer in memory when appending to an IMAP folder.\n\n        \nNone\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.connectionpoolsize\n\n        \nMaximum number of available connections in the connection pool.\n\n        \n1\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.connectionpooltimeout\n\n        \nTimeout value in milliseconds for connection pool connections. \n\n        \n45000ms\n\n        \nAny Integer\n\n    \n\n    \n\n        \nmail.imap.separatestoreconnection\n\n        \nFlag to indicate whether to use a dedicated store connection for store commands.\n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.auth.login.disable\n\n        \nIf true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.auth.plain.disable\n\n        \nIf true, prevents use of the AUTHENTICATE PLAIN command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.auth.ntlm.disable\n\n        \nIf true, prevents use of the AUTHENTICATE NTLM command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.proxyauth.user\n\n        \nIf the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property.\n\n        \nNone\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.localaddress\n\n        \nLocal address (host name) to bind to when creating the IMAP socket.\n\n        \nDefaults to the address picked by the Socket class.\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.localport\n\n        \nLocal port number to bind to when creating the IMAP socket.\n\n        \nDefaults to the port number picked by the Socket class.\n\n        \nValid String value\n\n    \n\n    \n\n        \nmail.imap.sasl.enable\n\n        \nIf set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.sasl.mechanisms\n\n        \nA space or comma separated list of SASL mechanism names to try to use.\n\n        \nNone\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.sasl.authorizationid\n\n        \nThe authorization ID to use in the SASL authentication.\n\n        \nIf not set, the authentication ID (user name) is used.\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.sasl.realm\n\n        \nThe realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5.\n\n        \nNone\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.auth.ntlm.domain\n\n        \nThe NTLM authentication domain.\n\n        \nNone\n\n        \nValid string value\n\n    \n\n    \n\n        \nThe NTLM authentication domain.\n\n        \nNTLM protocol-specific flags.\n\n        \nNone\n\n        \nValid integer value\n\n    \n\n    \n\n        \nmail.imap.socketFactory\n\n        \nIf set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets.\n\n        \nNone\n\n        \nValid SocketFactory\n\n    \n\n    \n\n        \nmail.imap.socketFactory.class\n\n        \nIf set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets.\n\n        \nNone\n\n        \nValid string\n\n    \n\n    \n\n        \nmail.imap.socketFactory.fallback\n\n        \nIf set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. \n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.socketFactory.port\n\n        \nSpecifies the port to connect to when using the specified socket factory. Default port is used when not set.\n\n        \n143\n\n        \nValid Integer\n\n    \n\n    \n\n        \nmail.imap.ssl.checkserveridentity\n\n        \nIf set to true, check the server identity as specified by RFC 2595.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.ssl.trust\n\n        \nIf set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '\n', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.imap.ssl.socketFactory\n\n        \nIf set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets.\n\n        \nNone\n\n        \nSSL Socket Factory\n\n    \n\n    \n\n        \nmail.imap.ssl.socketFactory.class\n\n        \nIf set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.imap.ssl.socketFactory.port\n\n        \nSpecifies the port to connect to when using the specified socket factory.\n\n        \nthe default port will be used-993\n\n        \nvalid port number\n\n    \n\n    \n\n        \nmail.imap.ssl.protocols\n\n        \nSpecifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method.\n\n        \nNone\n\n        \nValid string\n\n    \n\n    \n\n        \nmail.imap.starttls.enable\n\n        \nIf true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.socks.host\n\n        \nSpecifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.imap.socks.port\n\n        \nSpecifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080.\n\n        \n1080\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.imap.minidletime\n\n        \nThis property sets the delay in milliseconds.\n\n        \n10 milliseconds\n\n        \ntime in seconds (Integer)\n\n    \n\n    \n\n        \nmail.imap.enableimapevents\n\n        \nEnable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.folder.class\n\n        \nClass name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store)\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.connectiontimeout\n\n        \nSocket connection timeout value in milliseconds.\n\n        \nInfinite timeout\n\n        \nInteger value\n\n    \n\n    \n\n        \nmail.pop3.timeout\n\n        \nSocket I/O timeout value in milliseconds. \n\n        \nInfinite timeout\n\n        \nInteger value\n\n    \n\n    \n\n        \nmail.pop3.message.class\n\n        \nClass name of a subclass of com.sun.mail.pop3.POP3Message\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.localaddress\n\n        \nLocal address (host name) to bind to when creating the POP3 socket.\n\n        \nDefaults to the address picked by the Socket class.\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.localport\n\n        \nLocal port number to bind to when creating the POP3 socket.\n\n        \nDefaults to the port number picked by the Socket class.\n\n        \nValid port number\n\n    \n\n    \n\n        \nmail.pop3.apop.enable\n\n        \nIf set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.socketFactory\n\n        \nIf set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets.\n\n        \nNone\n\n        \nSocket Factory\n\n    \n\n    \n\n        \nmail.pop3.socketFactory.class\n\n        \nIf set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.socketFactory.fallback\n\n        \nIf set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.socketFactory.port\n\n        \nSpecifies the port to connect to when using the specified socket factory.\n\n        \nDefault port\n\n        \nValid port number\n\n    \n\n    \n\n        \nmail.pop3.ssl.checkserveridentity\n\n        \nIf set to true, check the server identity as specified by RFC 2595. \n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.ssl.trust\n\n        \nIf set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to '\n', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents.\n\n        \nDepends on the certificate the server presents\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.ssl.socketFactory\n\n        \nIf set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets.\n\n        \nNone\n\n        \nSSL Socket Factory\n\n    \n\n    \n\n        \nmail.pop3.ssl.checkserveridentity\n\n        \nIf set to true, check the server identity as specified by RFC 2595. \n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.ssl.trust\n\n        \n If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted. \n\n        \ntrust depends on the certificate the server presents.\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.ssl.socketFactory\n\n        \nIf set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets.\n\n        \nNone\n\n        \nSSL Socket Factory\n\n    \n\n    \n\n        \nmail.pop3.ssl.socketFactory.class\n\n        \nIf set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets. \n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.ssl.socketFactory.p\n\n        \nSpecifies the port to connect to when using the specified socket factory.\n\n        \n995\n\n        \nValid Integer\n\n    \n\n    \n\n        \nmail.pop3.ssl.protocols\n\n        \nSpecifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.starttls.enable\n\n        \nIf true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.starttls.required\n\n        \nIf true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.socks.host\n\n        \nSpecifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.socks.port\n\n        \nSpecifies the port number for the SOCKS5 proxy server.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.disabletop\n\n        \nIf set to true, the POP3 TOP command will not be used to fetch message headers. \n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.forgettopheaders\n\n        \nIf set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.filecache.enable\n\n        \nIf set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.filecache.dir\n\n        \nIf the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.cachewriteto\n\n        \nControls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.keepmessagecontent\n\n        \nIf this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method). \n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\n@source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string);\n\n\n\n\nFollowing example illustrates how to receive events in \nxml\n format using email source. In this example only mandatory parameters are defined in the  in the stream definition. For other parameters default values are taken. since search term is not defined, it poll and take all new messages in the inbox folder\n\n\n\nEXAMPLE 2\n\n\n@source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string);\n\n\n\n\nFollowing example illustrates how to receive events in \nxml\n format using email source. The email source polls the mail account in every 500 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term (email messages which come from\nfrom.account@.\nhost name\n, contains \ncc.account\n in cc receipts list, and \nStream Processor\n words in the mail subject) In the example, action after processes is defined as the \nDELETE\n, so that after processing the event, corresponding mail is deleted from the mail folder.", 
            "title": "1.0.3"
        }, 
        {
            "location": "/api/1.0.3/#api-docs-v103", 
            "text": "", 
            "title": "API Docs - v1.0.3"
        }, 
        {
            "location": "/api/1.0.3/#sink", 
            "text": "", 
            "title": "Sink"
        }, 
        {
            "location": "/api/1.0.3/#email-sink", 
            "text": "The email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken for the optional parameters. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters). Further, some email account required to enable 'access to less secure apps' option (for gmail account you can enable it via https://myaccount.google.com/lesssecureapps).  Syntax  @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , @map(...)))  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         username \n         Username of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com). \n         \n         STRING \n         No \n         No \n     \n     \n         address \n         Address of the email account which is used to send emails. \n         \n         STRING \n         No \n         No \n     \n     \n         password \n         Password of the email account. \n         \n         STRING \n         No \n         No \n     \n     \n         host \n         Host name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account. \n         smtp.gmail.com \n         STRING \n         Yes \n         No \n     \n     \n         port \n         The port which is used to create the connection. \n         '465' the default value is only valid is ssl enable \n         INT \n         Yes \n         No \n     \n     \n         ssl.enable \n         Whether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection. \n         true \n         BOOL \n         Yes \n         No \n     \n     \n         auth \n         Whether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command. \n         true \n         BOOL \n         Yes \n         No \n     \n     \n         content.type \n         Content type can be either 'text/plain' or 'text/html'. \n         text/plain \n         STRING \n         Yes \n         No \n     \n     \n         subject \n         Subject of the mail which has to be send. \n         \n         STRING \n         No \n         Yes \n     \n     \n         to \n         Address of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list. \n         \n         STRING \n         No \n         Yes \n     \n     \n         cc \n         Address of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list. \n         None \n         STRING \n         Yes \n         No \n     \n     \n         bcc \n         Address of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list. \n         None \n         STRING \n         Yes \n         No \n       System Parameters  \n     \n         Name \n         Description \n         Default Value \n         Possible Parameters \n     \n     \n         mail.smtp.connectiontimeout \n         Socket connection timeout value in milliseconds.  \n         infinite timeout \n         Any Integer \n     \n     \n         mail.smtp.timeout \n         Socket I/O timeout value in milliseconds.  \n         infinite timeout \n         Any Integer \n     \n     \n         mail.smtp.from \n         Email address to use for SMTP MAIL command. This sets the envelope return address. \n         Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). \n         Valid email address \n     \n     \n         mail.smtp.localport \n         Local port number to bind to when creating the SMTP socket. \n         Defaults to the port number picked by the Socket class. \n         Any Integer \n     \n     \n         mail.smtp.ehlo \n         If false, do not attempt to sign on with the EHLO command. \n         true \n         true or false \n     \n     \n         mail.smtp.auth.login.disable \n         If true, prevents use of the AUTH LOGIN command. \n         false \n         true or false \n     \n     \n         mail.smtp.auth.plain.disable \n         If true, prevents use of the AUTH PLAIN command. \n         false \n         true or false \n     \n     \n         mail.smtp.auth.digest-md5.disable \n         If true, prevents use of the AUTH DIGEST-MD5 command. \n         false \n         true or false \n     \n     \n         mail.smtp.auth.ntlm.disable \n         If true, prevents use of the AUTH NTLM command \n         false \n         true or false \n     \n     \n         mail.smtp.auth.ntlm.domain \n         The NTLM authentication domain. \n         None \n         Valid NTLM authentication domain name \n     \n     \n         mail.smtp.auth.ntlm.flags \n         NTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details. \n         None \n         Valid NTLM protocol-specific flags. \n     \n     \n         mail.smtp.dsn.notify \n         The NOTIFY option to the RCPT command. \n         None \n         Either NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas). \n     \n     \n         mail.smtp.dsn.ret \n         The RET option to the MAIL command. \n         None \n         Either FULL or HDRS. \n     \n     \n         mail.smtp.sendpartial \n         If set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address. \n         false \n         true or false \n     \n     \n         mail.smtp.sasl.enable \n         If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. \n         false \n         true or false \n     \n     \n         mail.smtp.sasl.mechanisms \n         A space or comma separated list of SASL mechanism names to try to use. \n         None \n         \n     \n     \n         mail.smtp.sasl.authorizationid \n         The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. \n         username \n         Valid ID \n     \n     \n         mail.smtp.sasl.realm \n         The realm to use with DIGEST-MD5 authentication. \n         None \n         \n     \n     \n         mail.smtp.quitwait \n         If set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command. \n         false \n         true or false \n     \n     \n         mail.smtp.reportsuccess \n         If set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful. \n         false \n         true or false \n     \n     \n         mail.smtp.socketFactory \n         If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets. \n         None \n         Socket Factory \n     \n     \n         mail.smtp.socketFactory.class \n         If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets. \n         None \n         \n     \n     \n         mail.smtp.socketFactory.fallback \n         If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. \n         true \n         true or false \n     \n     \n         mail.smtp.socketFactory.port \n         Specifies the port to connect to when using the specified socket factory \n         25 \n         Valid port number \n     \n     \n         mail.smtp.ssl.protocols \n         Specifies the SSL protocols that will be enabled for SSL connections. \n         None \n         The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. \n     \n     \n         mail.smtp.starttls.enable \n         If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. \n         false \n         true or false \n     \n     \n         mail.smtp.starttls.required \n         If true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail. \n         false \n         true or false \n     \n     \n         mail.smtp.socks.host \n         Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. \n         None \n         \n     \n     \n         mail.smtp.socks.port \n         Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. \n         1080 \n         valid port number \n     \n     \n         mail.smtp.auth.ntlm.disable \n         If true, prevents use of the AUTH NTLM command \n         false \n         true or false \n     \n     \n         mail.smtp.mailextension \n         Extension string to append to the MAIL command. \n         None \n         \n     \n     \n         mail.smtp.userset \n         If set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue. \n         false \n         true or false \n       Examples  EXAMPLE 1  @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string);  Following example illustrates how to publish events using the email sinkusing mandatory parameters. As in the example, it publishes events come from the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection.  EXAMPLE 2  @sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string);  Following example illustrates how to configure the query parameters and system parameters in the deployment ymal file. Corresponding parameters need to be configure under name:'email' and namespace:'sink' as follows siddhi: extensions: - extension: name:'email' namespace:'sink' properties: username:sender.account address:sender.account@gmail.com address:sender.account@gmail.com As in the example, it publishes events comefrom the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection.  EXAMPLE 3  @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream fooStream (name string, age int, country string);  Following example illustrates how to publish events using the email sink. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given  to , cc  and  bcc  recipients using a secure connection.  name  in the  subject  attribute will be the value of the  name  parameter in the corresponding output event", 
            "title": "email (Sink)"
        }, 
        {
            "location": "/api/1.0.3/#source", 
            "text": "", 
            "title": "Source"
        }, 
        {
            "location": "/api/1.0.3/#email-source", 
            "text": "Email source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store ,  https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters).  Syntax  @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...)))  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         username \n         user name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account. \n         \n         STRING \n         No \n         No \n     \n     \n         password \n         password of the email account \n         \n         STRING \n         No \n         No \n     \n     \n         store \n         Store type that used to receive emails. it can be either imap or pop3. \n         imap \n         STRING \n         Yes \n         No \n     \n     \n         host \n         Host name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable. \n         If store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'. \n         STRING \n         Yes \n         No \n     \n     \n         port \n         The port which is used to create the connection. \n         '993' the default value is valid only if store is imap and ssl enable \n         INT \n         Yes \n         No \n     \n     \n         folder \n         Name of the folder to fetch email. \n         INBOX \n         STRING \n         Yes \n         No \n     \n     \n         search.term \n         Option which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol. \n         None \n         STRING \n         Yes \n         No \n     \n     \n         polling.interval \n         Interval that email source should poll the account to check for new mails arrivals in seconds. \n         600 \n         LONG \n         Yes \n         No \n     \n     \n         action.after.processed \n         Action that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE \n         NONE \n         STRING \n         Yes \n         No \n     \n     \n         folder.to.move \n         The name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move. \n         \n         STRING \n         No \n         No \n     \n     \n         content.type \n         Content type of the email. It can be either 'text/plain' or 'text/html.' \n         text/plain \n         STRING \n         Yes \n         No \n     \n     \n         ssl.enable \n         If it is 'true' then use a secure port to establish the connection. The possible values are 'true or false. \n         true \n         BOOL \n         Yes \n         No \n       System Parameters  \n     \n         Name \n         Description \n         Default Value \n         Possible Parameters \n     \n     \n         mail.imap.partialfetch \n         Controls whether the IMAP partial-fetch capability should be used \n         true \n         true or false \n     \n     \n         mail.imap.fetchsize \n         Partial fetch size in bytes. \n         16K \n         value in bytes \n     \n     \n         mail.imap.peek \n         If set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage. \n         false \n         true or false \n     \n     \n         mail.imap.connectiontimeout \n         Socket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket. \n         infinity timeout \n         Any Integer value \n     \n     \n         mail.imap.timeout \n         Socket read timeout value in milliseconds. This timeout is implemented by java.net.Socket. \n         infinity timeout \n         Any Integer value \n     \n     \n         mail.imap.writetimeout \n         Socket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection. \n         infinity timeout \n         Any Integer value \n     \n     \n         mail.imap.statuscachetimeout \n         Timeout value in milliseconds for cache of STATUS command response. \n         1000ms \n         Time out in miliseconds \n     \n     \n         mail.imap.appendbuffersize \n         Maximum size of a message to buffer in memory when appending to an IMAP folder. \n         None \n         Any Integer value \n     \n     \n         mail.imap.connectionpoolsize \n         Maximum number of available connections in the connection pool. \n         1 \n         Any Integer value \n     \n     \n         mail.imap.connectionpooltimeout \n         Timeout value in milliseconds for connection pool connections.  \n         45000ms \n         Any Integer \n     \n     \n         mail.imap.separatestoreconnection \n         Flag to indicate whether to use a dedicated store connection for store commands. \n         true \n         true or false \n     \n     \n         mail.imap.auth.login.disable \n         If true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command. \n         false \n         true or false \n     \n     \n         mail.imap.auth.plain.disable \n         If true, prevents use of the AUTHENTICATE PLAIN command. \n         false \n         true or false \n     \n     \n         mail.imap.auth.ntlm.disable \n         If true, prevents use of the AUTHENTICATE NTLM command. \n         false \n         true or false \n     \n     \n         mail.imap.proxyauth.user \n         If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property. \n         None \n         Valid string value \n     \n     \n         mail.imap.localaddress \n         Local address (host name) to bind to when creating the IMAP socket. \n         Defaults to the address picked by the Socket class. \n         Valid string value \n     \n     \n         mail.imap.localport \n         Local port number to bind to when creating the IMAP socket. \n         Defaults to the port number picked by the Socket class. \n         Valid String value \n     \n     \n         mail.imap.sasl.enable \n         If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. \n         false \n         true or false \n     \n     \n         mail.imap.sasl.mechanisms \n         A space or comma separated list of SASL mechanism names to try to use. \n         None \n         Valid string value \n     \n     \n         mail.imap.sasl.authorizationid \n         The authorization ID to use in the SASL authentication. \n         If not set, the authentication ID (user name) is used. \n         Valid string value \n     \n     \n         mail.imap.sasl.realm \n         The realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5. \n         None \n         Valid string value \n     \n     \n         mail.imap.auth.ntlm.domain \n         The NTLM authentication domain. \n         None \n         Valid string value \n     \n     \n         The NTLM authentication domain. \n         NTLM protocol-specific flags. \n         None \n         Valid integer value \n     \n     \n         mail.imap.socketFactory \n         If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets. \n         None \n         Valid SocketFactory \n     \n     \n         mail.imap.socketFactory.class \n         If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets. \n         None \n         Valid string \n     \n     \n         mail.imap.socketFactory.fallback \n         If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class.  \n         true \n         true or false \n     \n     \n         mail.imap.socketFactory.port \n         Specifies the port to connect to when using the specified socket factory. Default port is used when not set. \n         143 \n         Valid Integer \n     \n     \n         mail.imap.ssl.checkserveridentity \n         If set to true, check the server identity as specified by RFC 2595. \n         false \n         true or false \n     \n     \n         mail.imap.ssl.trust \n         If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. \n         None \n         Valid String \n     \n     \n         mail.imap.ssl.socketFactory \n         If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets. \n         None \n         SSL Socket Factory \n     \n     \n         mail.imap.ssl.socketFactory.class \n         If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets. \n         None \n         Valid String \n     \n     \n         mail.imap.ssl.socketFactory.port \n         Specifies the port to connect to when using the specified socket factory. \n         the default port will be used-993 \n         valid port number \n     \n     \n         mail.imap.ssl.protocols \n         Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. \n         None \n         Valid string \n     \n     \n         mail.imap.starttls.enable \n         If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. \n         false \n         true or false \n     \n     \n         mail.imap.socks.host \n         Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. \n         None \n         Valid String \n     \n     \n         mail.imap.socks.port \n         Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. \n         1080 \n         Valid String \n     \n     \n         mail.imap.minidletime \n         This property sets the delay in milliseconds. \n         10 milliseconds \n         time in seconds (Integer) \n     \n     \n         mail.imap.enableimapevents \n         Enable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string. \n         false \n         true or false \n     \n     \n         mail.imap.folder.class \n         Class name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store) \n         None \n         Valid String \n     \n     \n         mail.pop3.connectiontimeout \n         Socket connection timeout value in milliseconds. \n         Infinite timeout \n         Integer value \n     \n     \n         mail.pop3.timeout \n         Socket I/O timeout value in milliseconds.  \n         Infinite timeout \n         Integer value \n     \n     \n         mail.pop3.message.class \n         Class name of a subclass of com.sun.mail.pop3.POP3Message \n         None \n         Valid String \n     \n     \n         mail.pop3.localaddress \n         Local address (host name) to bind to when creating the POP3 socket. \n         Defaults to the address picked by the Socket class. \n         Valid String \n     \n     \n         mail.pop3.localport \n         Local port number to bind to when creating the POP3 socket. \n         Defaults to the port number picked by the Socket class. \n         Valid port number \n     \n     \n         mail.pop3.apop.enable \n         If set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password. \n         false \n         true or false \n     \n     \n         mail.pop3.socketFactory \n         If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets. \n         None \n         Socket Factory \n     \n     \n         mail.pop3.socketFactory.class \n         If set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets. \n         None \n         Valid String \n     \n     \n         mail.pop3.socketFactory.fallback \n         If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. \n         false \n         true or false \n     \n     \n         mail.pop3.socketFactory.port \n         Specifies the port to connect to when using the specified socket factory. \n         Default port \n         Valid port number \n     \n     \n         mail.pop3.ssl.checkserveridentity \n         If set to true, check the server identity as specified by RFC 2595.  \n         false \n         true or false \n     \n     \n         mail.pop3.ssl.trust \n         If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. \n         Depends on the certificate the server presents \n         Valid String \n     \n     \n         mail.pop3.ssl.socketFactory \n         If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. \n         None \n         SSL Socket Factory \n     \n     \n         mail.pop3.ssl.checkserveridentity \n         If set to true, check the server identity as specified by RFC 2595.  \n         false \n         true or false \n     \n     \n         mail.pop3.ssl.trust \n          If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.  \n         trust depends on the certificate the server presents. \n         Valid String \n     \n     \n         mail.pop3.ssl.socketFactory \n         If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. \n         None \n         SSL Socket Factory \n     \n     \n         mail.pop3.ssl.socketFactory.class \n         If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets.  \n         None \n         Valid String \n     \n     \n         mail.pop3.ssl.socketFactory.p \n         Specifies the port to connect to when using the specified socket factory. \n         995 \n         Valid Integer \n     \n     \n         mail.pop3.ssl.protocols \n         Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. \n         None \n         Valid String \n     \n     \n         mail.pop3.starttls.enable \n         If true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands \n         false \n         true or false \n     \n     \n         mail.pop3.starttls.required \n         If true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail. \n         false \n         true or false \n     \n     \n         mail.pop3.socks.host \n         Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. \n         None \n         Valid String \n     \n     \n         mail.pop3.socks.port \n         Specifies the port number for the SOCKS5 proxy server. \n         None \n         Valid String \n     \n     \n         mail.pop3.disabletop \n         If set to true, the POP3 TOP command will not be used to fetch message headers.  \n         false \n         true or false \n     \n     \n         mail.pop3.forgettopheaders \n         If set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command. \n         false \n         true or false \n     \n     \n         mail.pop3.filecache.enable \n         If set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. \n         false \n         true or false \n     \n     \n         mail.pop3.filecache.dir \n         If the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files. \n         None \n         Valid String \n     \n     \n         mail.pop3.cachewriteto \n         Controls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached. \n         false \n         true or false \n     \n     \n         mail.pop3.keepmessagecontent \n         If this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method).  \n         false \n         true or false \n       Examples  EXAMPLE 1  @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string);  Following example illustrates how to receive events in  xml  format using email source. In this example only mandatory parameters are defined in the  in the stream definition. For other parameters default values are taken. since search term is not defined, it poll and take all new messages in the inbox folder  EXAMPLE 2  @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string);  Following example illustrates how to receive events in  xml  format using email source. The email source polls the mail account in every 500 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term (email messages which come from from.account@. host name , contains  cc.account  in cc receipts list, and  Stream Processor  words in the mail subject) In the example, action after processes is defined as the  DELETE , so that after processing the event, corresponding mail is deleted from the mail folder.", 
            "title": "email (Source)"
        }, 
        {
            "location": "/api/1.0.2/", 
            "text": "API Docs - v1.0.2\n\n\nSink\n\n\nemail \n(Sink)\n\n\nThe email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken for the optional parameters. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters). Further, some email account required to enable 'access to less secure apps' option (for gmail account you can enable it via https://myaccount.google.com/lesssecureapps).\n\n\n\nSyntax\n\n\n@sink(type=\nemail\n, username=\nSTRING\n, address=\nSTRING\n, password=\nSTRING\n, host=\nSTRING\n, port=\nINT\n, ssl.enable=\nBOOL\n, auth=\nBOOL\n, content.type=\nSTRING\n, subject=\nSTRING\n, to=\nSTRING\n, cc=\nSTRING\n, bcc=\nSTRING\n, @map(...)))\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \nusername\n\n        \nUsername of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com).\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \naddress\n\n        \nAddress of the email account which is used to send emails.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \npassword\n\n        \nPassword of the email account.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \nhost\n\n        \nHost name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account.\n\n        \nsmtp.gmail.com\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nport\n\n        \nThe port which is used to create the connection.\n\n        \n'465' the default value is only valid is ssl enable\n\n        \nINT\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nssl.enable\n\n        \nWhether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection.\n\n        \ntrue\n\n        \nBOOL\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nauth\n\n        \nWhether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command.\n\n        \ntrue\n\n        \nBOOL\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \ncontent.type\n\n        \nContent type can be either 'text/plain' or 'text/html'.\n\n        \ntext/plain\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nsubject\n\n        \nSubject of the mail which has to be send.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nYes\n\n    \n\n    \n\n        \nto\n\n        \nAddress of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nYes\n\n    \n\n    \n\n        \ncc\n\n        \nAddress of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list.\n\n        \nNone\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nbcc\n\n        \nAddress of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list.\n\n        \nNone\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n\n\n\nSystem Parameters\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Parameters\n\n    \n\n    \n\n        \nmail.smtp.connectiontimeout\n\n        \nSocket connection timeout value in milliseconds. \n\n        \ninfinite timeout\n\n        \nAny Integer\n\n    \n\n    \n\n        \nmail.smtp.timeout\n\n        \nSocket I/O timeout value in milliseconds. \n\n        \ninfinite timeout\n\n        \nAny Integer\n\n    \n\n    \n\n        \nmail.smtp.from\n\n        \nEmail address to use for SMTP MAIL command. This sets the envelope return address.\n\n        \nDefaults to msg.getFrom() or InternetAddress.getLocalAddress().\n\n        \nValid email address\n\n    \n\n    \n\n        \nmail.smtp.localport\n\n        \nLocal port number to bind to when creating the SMTP socket.\n\n        \nDefaults to the port number picked by the Socket class.\n\n        \nAny Integer\n\n    \n\n    \n\n        \nmail.smtp.ehlo\n\n        \nIf false, do not attempt to sign on with the EHLO command.\n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.login.disable\n\n        \nIf true, prevents use of the AUTH LOGIN command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.plain.disable\n\n        \nIf true, prevents use of the AUTH PLAIN command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.digest-md5.disable\n\n        \nIf true, prevents use of the AUTH DIGEST-MD5 command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.ntlm.disable\n\n        \nIf true, prevents use of the AUTH NTLM command\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.ntlm.domain\n\n        \nThe NTLM authentication domain.\n\n        \nNone\n\n        \nValid NTLM authentication domain name\n\n    \n\n    \n\n        \nmail.smtp.auth.ntlm.flags\n\n        \nNTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details.\n\n        \nNone\n\n        \nValid NTLM protocol-specific flags.\n\n    \n\n    \n\n        \nmail.smtp.dsn.notify\n\n        \nThe NOTIFY option to the RCPT command.\n\n        \nNone\n\n        \nEither NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas).\n\n    \n\n    \n\n        \nmail.smtp.dsn.ret\n\n        \nThe RET option to the MAIL command.\n\n        \nNone\n\n        \nEither FULL or HDRS.\n\n    \n\n    \n\n        \nmail.smtp.sendpartial\n\n        \nIf set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.sasl.enable\n\n        \nIf set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.sasl.mechanisms\n\n        \nA space or comma separated list of SASL mechanism names to try to use.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.sasl.authorizationid\n\n        \nThe authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used.\n\n        \nusername\n\n        \nValid ID\n\n    \n\n    \n\n        \nmail.smtp.sasl.realm\n\n        \nThe realm to use with DIGEST-MD5 authentication.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.quitwait\n\n        \nIf set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.reportsuccess\n\n        \nIf set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.socketFactory\n\n        \nIf set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets.\n\n        \nNone\n\n        \nSocket Factory\n\n    \n\n    \n\n        \nmail.smtp.socketFactory.class\n\n        \nIf set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.socketFactory.fallback\n\n        \nIf set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class.\n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.socketFactory.port\n\n        \nSpecifies the port to connect to when using the specified socket factory\n\n        \n25\n\n        \nValid port number\n\n    \n\n    \n\n        \nmail.smtp.ssl.protocols\n\n        \nSpecifies the SSL protocols that will be enabled for SSL connections.\n\n        \nNone\n\n        \nThe property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method.\n\n    \n\n    \n\n        \nmail.smtp.starttls.enable\n\n        \nIf true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.starttls.required\n\n        \nIf true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.socks.host\n\n        \nSpecifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.socks.port\n\n        \nSpecifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080.\n\n        \n1080\n\n        \nvalid port number\n\n    \n\n    \n\n        \nmail.smtp.auth.ntlm.disable\n\n        \nIf true, prevents use of the AUTH NTLM command\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.mailextension\n\n        \nExtension string to append to the MAIL command.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.userset\n\n        \nIf set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\n@sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string);\n\n\n\n\nFollowing example illustrates how to publish events using the email sinkusing mandatory parameters. As in the example, it publishes events come from the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection.\n\n\n\nEXAMPLE 2\n\n\n@sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string);\n\n\n\n\nFollowing example illustrates how to configure the query parameters and system parameters in the deployment ymal file.\nCorresponding parameters need to be configure under name:'email' and namespace:'sink' as follows\nsiddhi:\nextensions:\n-\nextension:\nname:'email'\nnamespace:'sink'\nproperties:\nusername:sender.account\naddress:sender.account@gmail.com\naddress:sender.account@gmail.com\nAs in the example, it publishes events comefrom the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection.\n\n\n\nEXAMPLE 3\n\n\n@sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream fooStream (name string, age int, country string);\n\n\n\n\nFollowing example illustrates how to publish events using the email sink. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given \nto\n,\ncc\n and \nbcc\n recipients using a secure connection. \nname\n in the \nsubject\n attribute will be the value of the \nname\n parameter in the corresponding output event\n\n\n\nSource\n\n\nemail \n(Source)\n\n\nEmail source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store ,  https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters).\n\n\n\nSyntax\n\n\n@source(type=\nemail\n, username=\nSTRING\n, password=\nSTRING\n, store=\nSTRING\n, host=\nSTRING\n, port=\nINT\n, folder=\nSTRING\n, search.term=\nSTRING\n, polling.interval=\nLONG\n, action.after.processed=\nSTRING\n, folder.to.move=\nSTRING\n, content.type=\nSTRING\n, ssl.enable=\nBOOL\n, @map(...)))\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \nusername\n\n        \nuser name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \npassword\n\n        \npassword of the email account\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \nstore\n\n        \nStore type that used to receive emails. it can be either imap or pop3.\n\n        \nimap\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nhost\n\n        \nHost name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable.\n\n        \nIf store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'.\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nport\n\n        \nThe port which is used to create the connection.\n\n        \n'993' the default value is valid only if store is imap and ssl enable\n\n        \nINT\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nfolder\n\n        \nName of the folder to fetch email.\n\n        \nINBOX\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nsearch.term\n\n        \nOption which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol.\n\n        \nNone\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \npolling.interval\n\n        \nInterval that email source should poll the account to check for new mails arrivals in seconds.\n\n        \n600\n\n        \nLONG\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \naction.after.processed\n\n        \nAction that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE\n\n        \nNONE\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nfolder.to.move\n\n        \nThe name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \ncontent.type\n\n        \nContent type of the email. It can be either 'text/plain' or 'text/html.'\n\n        \ntext/plain\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nssl.enable\n\n        \nIf it is 'true' then use a secure port to establish the connection. The possible values are 'true or false.\n\n        \ntrue\n\n        \nBOOL\n\n        \nYes\n\n        \nNo\n\n    \n\n\n\n\nSystem Parameters\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Parameters\n\n    \n\n    \n\n        \nmail.imap.partialfetch\n\n        \nControls whether the IMAP partial-fetch capability should be used\n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.fetchsize\n\n        \nPartial fetch size in bytes.\n\n        \n16K\n\n        \nvalue in bytes\n\n    \n\n    \n\n        \nmail.imap.peek\n\n        \nIf set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.connectiontimeout\n\n        \nSocket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket.\n\n        \ninfinity timeout\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.timeout\n\n        \nSocket read timeout value in milliseconds. This timeout is implemented by java.net.Socket.\n\n        \ninfinity timeout\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.writetimeout\n\n        \nSocket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection.\n\n        \ninfinity timeout\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.statuscachetimeout\n\n        \nTimeout value in milliseconds for cache of STATUS command response.\n\n        \n1000ms\n\n        \nTime out in miliseconds\n\n    \n\n    \n\n        \nmail.imap.appendbuffersize\n\n        \nMaximum size of a message to buffer in memory when appending to an IMAP folder.\n\n        \nNone\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.connectionpoolsize\n\n        \nMaximum number of available connections in the connection pool.\n\n        \n1\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.connectionpooltimeout\n\n        \nTimeout value in milliseconds for connection pool connections. \n\n        \n45000ms\n\n        \nAny Integer\n\n    \n\n    \n\n        \nmail.imap.separatestoreconnection\n\n        \nFlag to indicate whether to use a dedicated store connection for store commands.\n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.auth.login.disable\n\n        \nIf true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.auth.plain.disable\n\n        \nIf true, prevents use of the AUTHENTICATE PLAIN command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.auth.ntlm.disable\n\n        \nIf true, prevents use of the AUTHENTICATE NTLM command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.proxyauth.user\n\n        \nIf the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property.\n\n        \nNone\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.localaddress\n\n        \nLocal address (host name) to bind to when creating the IMAP socket.\n\n        \nDefaults to the address picked by the Socket class.\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.localport\n\n        \nLocal port number to bind to when creating the IMAP socket.\n\n        \nDefaults to the port number picked by the Socket class.\n\n        \nValid String value\n\n    \n\n    \n\n        \nmail.imap.sasl.enable\n\n        \nIf set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.sasl.mechanisms\n\n        \nA space or comma separated list of SASL mechanism names to try to use.\n\n        \nNone\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.sasl.authorizationid\n\n        \nThe authorization ID to use in the SASL authentication.\n\n        \nIf not set, the authentication ID (user name) is used.\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.sasl.realm\n\n        \nThe realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5.\n\n        \nNone\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.auth.ntlm.domain\n\n        \nThe NTLM authentication domain.\n\n        \nNone\n\n        \nValid string value\n\n    \n\n    \n\n        \nThe NTLM authentication domain.\n\n        \nNTLM protocol-specific flags.\n\n        \nNone\n\n        \nValid integer value\n\n    \n\n    \n\n        \nmail.imap.socketFactory\n\n        \nIf set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets.\n\n        \nNone\n\n        \nValid SocketFactory\n\n    \n\n    \n\n        \nmail.imap.socketFactory.class\n\n        \nIf set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets.\n\n        \nNone\n\n        \nValid string\n\n    \n\n    \n\n        \nmail.imap.socketFactory.fallback\n\n        \nIf set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. \n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.socketFactory.port\n\n        \nSpecifies the port to connect to when using the specified socket factory. Default port is used when not set.\n\n        \n143\n\n        \nValid Integer\n\n    \n\n    \n\n        \nmail.imap.ssl.checkserveridentity\n\n        \nIf set to true, check the server identity as specified by RFC 2595.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.ssl.trust\n\n        \nIf set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '\n', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.imap.ssl.socketFactory\n\n        \nIf set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets.\n\n        \nNone\n\n        \nSSL Socket Factory\n\n    \n\n    \n\n        \nmail.imap.ssl.socketFactory.class\n\n        \nIf set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.imap.ssl.socketFactory.port\n\n        \nSpecifies the port to connect to when using the specified socket factory.\n\n        \nthe default port will be used-993\n\n        \nvalid port number\n\n    \n\n    \n\n        \nmail.imap.ssl.protocols\n\n        \nSpecifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method.\n\n        \nNone\n\n        \nValid string\n\n    \n\n    \n\n        \nmail.imap.starttls.enable\n\n        \nIf true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.socks.host\n\n        \nSpecifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.imap.socks.port\n\n        \nSpecifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080.\n\n        \n1080\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.imap.minidletime\n\n        \nThis property sets the delay in milliseconds.\n\n        \n10 milliseconds\n\n        \ntime in seconds (Integer)\n\n    \n\n    \n\n        \nmail.imap.enableimapevents\n\n        \nEnable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.folder.class\n\n        \nClass name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store)\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.connectiontimeout\n\n        \nSocket connection timeout value in milliseconds.\n\n        \nInfinite timeout\n\n        \nInteger value\n\n    \n\n    \n\n        \nmail.pop3.timeout\n\n        \nSocket I/O timeout value in milliseconds. \n\n        \nInfinite timeout\n\n        \nInteger value\n\n    \n\n    \n\n        \nmail.pop3.message.class\n\n        \nClass name of a subclass of com.sun.mail.pop3.POP3Message\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.localaddress\n\n        \nLocal address (host name) to bind to when creating the POP3 socket.\n\n        \nDefaults to the address picked by the Socket class.\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.localport\n\n        \nLocal port number to bind to when creating the POP3 socket.\n\n        \nDefaults to the port number picked by the Socket class.\n\n        \nValid port number\n\n    \n\n    \n\n        \nmail.pop3.apop.enable\n\n        \nIf set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.socketFactory\n\n        \nIf set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets.\n\n        \nNone\n\n        \nSocket Factory\n\n    \n\n    \n\n        \nmail.pop3.socketFactory.class\n\n        \nIf set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.socketFactory.fallback\n\n        \nIf set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.socketFactory.port\n\n        \nSpecifies the port to connect to when using the specified socket factory.\n\n        \nDefault port\n\n        \nValid port number\n\n    \n\n    \n\n        \nmail.pop3.ssl.checkserveridentity\n\n        \nIf set to true, check the server identity as specified by RFC 2595. \n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.ssl.trust\n\n        \nIf set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to '\n', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents.\n\n        \nDepends on the certificate the server presents\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.ssl.socketFactory\n\n        \nIf set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets.\n\n        \nNone\n\n        \nSSL Socket Factory\n\n    \n\n    \n\n        \nmail.pop3.ssl.checkserveridentity\n\n        \nIf set to true, check the server identity as specified by RFC 2595. \n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.ssl.trust\n\n        \n If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted. \n\n        \ntrust depends on the certificate the server presents.\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.ssl.socketFactory\n\n        \nIf set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets.\n\n        \nNone\n\n        \nSSL Socket Factory\n\n    \n\n    \n\n        \nmail.pop3.ssl.socketFactory.class\n\n        \nIf set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets. \n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.ssl.socketFactory.p\n\n        \nSpecifies the port to connect to when using the specified socket factory.\n\n        \n995\n\n        \nValid Integer\n\n    \n\n    \n\n        \nmail.pop3.ssl.protocols\n\n        \nSpecifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.starttls.enable\n\n        \nIf true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.starttls.required\n\n        \nIf true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.socks.host\n\n        \nSpecifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.socks.port\n\n        \nSpecifies the port number for the SOCKS5 proxy server.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.disabletop\n\n        \nIf set to true, the POP3 TOP command will not be used to fetch message headers. \n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.forgettopheaders\n\n        \nIf set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.filecache.enable\n\n        \nIf set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.filecache.dir\n\n        \nIf the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.cachewriteto\n\n        \nControls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.keepmessagecontent\n\n        \nIf this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method). \n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\n@source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string);\n\n\n\n\nFollowing example illustrates how to receive events in \nxml\n format using email source. In this example only mandatory parameters are defined in the  in the stream definition. For other parameters default values are taken. since search term is not defined, it poll and take all new messages in the inbox folder\n\n\n\nEXAMPLE 2\n\n\n@source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string);\n\n\n\n\nFollowing example illustrates how to receive events in \nxml\n format using email source. The email source polls the mail account in every 500 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term (email messages which come from\nfrom.account@.\nhost name\n, contains \ncc.account\n in cc receipts list, and \nStream Processor\n words in the mail subject) In the example, action after processes is defined as the \nDELETE\n, so that after processing the event, corresponding mail is deleted from the mail folder.", 
            "title": "1.0.2"
        }, 
        {
            "location": "/api/1.0.2/#api-docs-v102", 
            "text": "", 
            "title": "API Docs - v1.0.2"
        }, 
        {
            "location": "/api/1.0.2/#sink", 
            "text": "", 
            "title": "Sink"
        }, 
        {
            "location": "/api/1.0.2/#email-sink", 
            "text": "The email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken for the optional parameters. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters). Further, some email account required to enable 'access to less secure apps' option (for gmail account you can enable it via https://myaccount.google.com/lesssecureapps).  Syntax  @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , @map(...)))  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         username \n         Username of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com). \n         \n         STRING \n         No \n         No \n     \n     \n         address \n         Address of the email account which is used to send emails. \n         \n         STRING \n         No \n         No \n     \n     \n         password \n         Password of the email account. \n         \n         STRING \n         No \n         No \n     \n     \n         host \n         Host name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account. \n         smtp.gmail.com \n         STRING \n         Yes \n         No \n     \n     \n         port \n         The port which is used to create the connection. \n         '465' the default value is only valid is ssl enable \n         INT \n         Yes \n         No \n     \n     \n         ssl.enable \n         Whether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection. \n         true \n         BOOL \n         Yes \n         No \n     \n     \n         auth \n         Whether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command. \n         true \n         BOOL \n         Yes \n         No \n     \n     \n         content.type \n         Content type can be either 'text/plain' or 'text/html'. \n         text/plain \n         STRING \n         Yes \n         No \n     \n     \n         subject \n         Subject of the mail which has to be send. \n         \n         STRING \n         No \n         Yes \n     \n     \n         to \n         Address of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list. \n         \n         STRING \n         No \n         Yes \n     \n     \n         cc \n         Address of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list. \n         None \n         STRING \n         Yes \n         No \n     \n     \n         bcc \n         Address of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list. \n         None \n         STRING \n         Yes \n         No \n       System Parameters  \n     \n         Name \n         Description \n         Default Value \n         Possible Parameters \n     \n     \n         mail.smtp.connectiontimeout \n         Socket connection timeout value in milliseconds.  \n         infinite timeout \n         Any Integer \n     \n     \n         mail.smtp.timeout \n         Socket I/O timeout value in milliseconds.  \n         infinite timeout \n         Any Integer \n     \n     \n         mail.smtp.from \n         Email address to use for SMTP MAIL command. This sets the envelope return address. \n         Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). \n         Valid email address \n     \n     \n         mail.smtp.localport \n         Local port number to bind to when creating the SMTP socket. \n         Defaults to the port number picked by the Socket class. \n         Any Integer \n     \n     \n         mail.smtp.ehlo \n         If false, do not attempt to sign on with the EHLO command. \n         true \n         true or false \n     \n     \n         mail.smtp.auth.login.disable \n         If true, prevents use of the AUTH LOGIN command. \n         false \n         true or false \n     \n     \n         mail.smtp.auth.plain.disable \n         If true, prevents use of the AUTH PLAIN command. \n         false \n         true or false \n     \n     \n         mail.smtp.auth.digest-md5.disable \n         If true, prevents use of the AUTH DIGEST-MD5 command. \n         false \n         true or false \n     \n     \n         mail.smtp.auth.ntlm.disable \n         If true, prevents use of the AUTH NTLM command \n         false \n         true or false \n     \n     \n         mail.smtp.auth.ntlm.domain \n         The NTLM authentication domain. \n         None \n         Valid NTLM authentication domain name \n     \n     \n         mail.smtp.auth.ntlm.flags \n         NTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details. \n         None \n         Valid NTLM protocol-specific flags. \n     \n     \n         mail.smtp.dsn.notify \n         The NOTIFY option to the RCPT command. \n         None \n         Either NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas). \n     \n     \n         mail.smtp.dsn.ret \n         The RET option to the MAIL command. \n         None \n         Either FULL or HDRS. \n     \n     \n         mail.smtp.sendpartial \n         If set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address. \n         false \n         true or false \n     \n     \n         mail.smtp.sasl.enable \n         If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. \n         false \n         true or false \n     \n     \n         mail.smtp.sasl.mechanisms \n         A space or comma separated list of SASL mechanism names to try to use. \n         None \n         \n     \n     \n         mail.smtp.sasl.authorizationid \n         The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. \n         username \n         Valid ID \n     \n     \n         mail.smtp.sasl.realm \n         The realm to use with DIGEST-MD5 authentication. \n         None \n         \n     \n     \n         mail.smtp.quitwait \n         If set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command. \n         false \n         true or false \n     \n     \n         mail.smtp.reportsuccess \n         If set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful. \n         false \n         true or false \n     \n     \n         mail.smtp.socketFactory \n         If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets. \n         None \n         Socket Factory \n     \n     \n         mail.smtp.socketFactory.class \n         If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets. \n         None \n         \n     \n     \n         mail.smtp.socketFactory.fallback \n         If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. \n         true \n         true or false \n     \n     \n         mail.smtp.socketFactory.port \n         Specifies the port to connect to when using the specified socket factory \n         25 \n         Valid port number \n     \n     \n         mail.smtp.ssl.protocols \n         Specifies the SSL protocols that will be enabled for SSL connections. \n         None \n         The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. \n     \n     \n         mail.smtp.starttls.enable \n         If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. \n         false \n         true or false \n     \n     \n         mail.smtp.starttls.required \n         If true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail. \n         false \n         true or false \n     \n     \n         mail.smtp.socks.host \n         Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. \n         None \n         \n     \n     \n         mail.smtp.socks.port \n         Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. \n         1080 \n         valid port number \n     \n     \n         mail.smtp.auth.ntlm.disable \n         If true, prevents use of the AUTH NTLM command \n         false \n         true or false \n     \n     \n         mail.smtp.mailextension \n         Extension string to append to the MAIL command. \n         None \n         \n     \n     \n         mail.smtp.userset \n         If set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue. \n         false \n         true or false \n       Examples  EXAMPLE 1  @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string);  Following example illustrates how to publish events using the email sinkusing mandatory parameters. As in the example, it publishes events come from the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection.  EXAMPLE 2  @sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string);  Following example illustrates how to configure the query parameters and system parameters in the deployment ymal file. Corresponding parameters need to be configure under name:'email' and namespace:'sink' as follows siddhi: extensions: - extension: name:'email' namespace:'sink' properties: username:sender.account address:sender.account@gmail.com address:sender.account@gmail.com As in the example, it publishes events comefrom the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection.  EXAMPLE 3  @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream fooStream (name string, age int, country string);  Following example illustrates how to publish events using the email sink. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given  to , cc  and  bcc  recipients using a secure connection.  name  in the  subject  attribute will be the value of the  name  parameter in the corresponding output event", 
            "title": "email (Sink)"
        }, 
        {
            "location": "/api/1.0.2/#source", 
            "text": "", 
            "title": "Source"
        }, 
        {
            "location": "/api/1.0.2/#email-source", 
            "text": "Email source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store ,  https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters).  Syntax  @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...)))  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         username \n         user name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account. \n         \n         STRING \n         No \n         No \n     \n     \n         password \n         password of the email account \n         \n         STRING \n         No \n         No \n     \n     \n         store \n         Store type that used to receive emails. it can be either imap or pop3. \n         imap \n         STRING \n         Yes \n         No \n     \n     \n         host \n         Host name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable. \n         If store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'. \n         STRING \n         Yes \n         No \n     \n     \n         port \n         The port which is used to create the connection. \n         '993' the default value is valid only if store is imap and ssl enable \n         INT \n         Yes \n         No \n     \n     \n         folder \n         Name of the folder to fetch email. \n         INBOX \n         STRING \n         Yes \n         No \n     \n     \n         search.term \n         Option which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol. \n         None \n         STRING \n         Yes \n         No \n     \n     \n         polling.interval \n         Interval that email source should poll the account to check for new mails arrivals in seconds. \n         600 \n         LONG \n         Yes \n         No \n     \n     \n         action.after.processed \n         Action that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE \n         NONE \n         STRING \n         Yes \n         No \n     \n     \n         folder.to.move \n         The name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move. \n         \n         STRING \n         No \n         No \n     \n     \n         content.type \n         Content type of the email. It can be either 'text/plain' or 'text/html.' \n         text/plain \n         STRING \n         Yes \n         No \n     \n     \n         ssl.enable \n         If it is 'true' then use a secure port to establish the connection. The possible values are 'true or false. \n         true \n         BOOL \n         Yes \n         No \n       System Parameters  \n     \n         Name \n         Description \n         Default Value \n         Possible Parameters \n     \n     \n         mail.imap.partialfetch \n         Controls whether the IMAP partial-fetch capability should be used \n         true \n         true or false \n     \n     \n         mail.imap.fetchsize \n         Partial fetch size in bytes. \n         16K \n         value in bytes \n     \n     \n         mail.imap.peek \n         If set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage. \n         false \n         true or false \n     \n     \n         mail.imap.connectiontimeout \n         Socket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket. \n         infinity timeout \n         Any Integer value \n     \n     \n         mail.imap.timeout \n         Socket read timeout value in milliseconds. This timeout is implemented by java.net.Socket. \n         infinity timeout \n         Any Integer value \n     \n     \n         mail.imap.writetimeout \n         Socket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection. \n         infinity timeout \n         Any Integer value \n     \n     \n         mail.imap.statuscachetimeout \n         Timeout value in milliseconds for cache of STATUS command response. \n         1000ms \n         Time out in miliseconds \n     \n     \n         mail.imap.appendbuffersize \n         Maximum size of a message to buffer in memory when appending to an IMAP folder. \n         None \n         Any Integer value \n     \n     \n         mail.imap.connectionpoolsize \n         Maximum number of available connections in the connection pool. \n         1 \n         Any Integer value \n     \n     \n         mail.imap.connectionpooltimeout \n         Timeout value in milliseconds for connection pool connections.  \n         45000ms \n         Any Integer \n     \n     \n         mail.imap.separatestoreconnection \n         Flag to indicate whether to use a dedicated store connection for store commands. \n         true \n         true or false \n     \n     \n         mail.imap.auth.login.disable \n         If true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command. \n         false \n         true or false \n     \n     \n         mail.imap.auth.plain.disable \n         If true, prevents use of the AUTHENTICATE PLAIN command. \n         false \n         true or false \n     \n     \n         mail.imap.auth.ntlm.disable \n         If true, prevents use of the AUTHENTICATE NTLM command. \n         false \n         true or false \n     \n     \n         mail.imap.proxyauth.user \n         If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property. \n         None \n         Valid string value \n     \n     \n         mail.imap.localaddress \n         Local address (host name) to bind to when creating the IMAP socket. \n         Defaults to the address picked by the Socket class. \n         Valid string value \n     \n     \n         mail.imap.localport \n         Local port number to bind to when creating the IMAP socket. \n         Defaults to the port number picked by the Socket class. \n         Valid String value \n     \n     \n         mail.imap.sasl.enable \n         If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. \n         false \n         true or false \n     \n     \n         mail.imap.sasl.mechanisms \n         A space or comma separated list of SASL mechanism names to try to use. \n         None \n         Valid string value \n     \n     \n         mail.imap.sasl.authorizationid \n         The authorization ID to use in the SASL authentication. \n         If not set, the authentication ID (user name) is used. \n         Valid string value \n     \n     \n         mail.imap.sasl.realm \n         The realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5. \n         None \n         Valid string value \n     \n     \n         mail.imap.auth.ntlm.domain \n         The NTLM authentication domain. \n         None \n         Valid string value \n     \n     \n         The NTLM authentication domain. \n         NTLM protocol-specific flags. \n         None \n         Valid integer value \n     \n     \n         mail.imap.socketFactory \n         If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets. \n         None \n         Valid SocketFactory \n     \n     \n         mail.imap.socketFactory.class \n         If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets. \n         None \n         Valid string \n     \n     \n         mail.imap.socketFactory.fallback \n         If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class.  \n         true \n         true or false \n     \n     \n         mail.imap.socketFactory.port \n         Specifies the port to connect to when using the specified socket factory. Default port is used when not set. \n         143 \n         Valid Integer \n     \n     \n         mail.imap.ssl.checkserveridentity \n         If set to true, check the server identity as specified by RFC 2595. \n         false \n         true or false \n     \n     \n         mail.imap.ssl.trust \n         If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. \n         None \n         Valid String \n     \n     \n         mail.imap.ssl.socketFactory \n         If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets. \n         None \n         SSL Socket Factory \n     \n     \n         mail.imap.ssl.socketFactory.class \n         If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets. \n         None \n         Valid String \n     \n     \n         mail.imap.ssl.socketFactory.port \n         Specifies the port to connect to when using the specified socket factory. \n         the default port will be used-993 \n         valid port number \n     \n     \n         mail.imap.ssl.protocols \n         Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. \n         None \n         Valid string \n     \n     \n         mail.imap.starttls.enable \n         If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. \n         false \n         true or false \n     \n     \n         mail.imap.socks.host \n         Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. \n         None \n         Valid String \n     \n     \n         mail.imap.socks.port \n         Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. \n         1080 \n         Valid String \n     \n     \n         mail.imap.minidletime \n         This property sets the delay in milliseconds. \n         10 milliseconds \n         time in seconds (Integer) \n     \n     \n         mail.imap.enableimapevents \n         Enable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string. \n         false \n         true or false \n     \n     \n         mail.imap.folder.class \n         Class name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store) \n         None \n         Valid String \n     \n     \n         mail.pop3.connectiontimeout \n         Socket connection timeout value in milliseconds. \n         Infinite timeout \n         Integer value \n     \n     \n         mail.pop3.timeout \n         Socket I/O timeout value in milliseconds.  \n         Infinite timeout \n         Integer value \n     \n     \n         mail.pop3.message.class \n         Class name of a subclass of com.sun.mail.pop3.POP3Message \n         None \n         Valid String \n     \n     \n         mail.pop3.localaddress \n         Local address (host name) to bind to when creating the POP3 socket. \n         Defaults to the address picked by the Socket class. \n         Valid String \n     \n     \n         mail.pop3.localport \n         Local port number to bind to when creating the POP3 socket. \n         Defaults to the port number picked by the Socket class. \n         Valid port number \n     \n     \n         mail.pop3.apop.enable \n         If set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password. \n         false \n         true or false \n     \n     \n         mail.pop3.socketFactory \n         If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets. \n         None \n         Socket Factory \n     \n     \n         mail.pop3.socketFactory.class \n         If set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets. \n         None \n         Valid String \n     \n     \n         mail.pop3.socketFactory.fallback \n         If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. \n         false \n         true or false \n     \n     \n         mail.pop3.socketFactory.port \n         Specifies the port to connect to when using the specified socket factory. \n         Default port \n         Valid port number \n     \n     \n         mail.pop3.ssl.checkserveridentity \n         If set to true, check the server identity as specified by RFC 2595.  \n         false \n         true or false \n     \n     \n         mail.pop3.ssl.trust \n         If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. \n         Depends on the certificate the server presents \n         Valid String \n     \n     \n         mail.pop3.ssl.socketFactory \n         If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. \n         None \n         SSL Socket Factory \n     \n     \n         mail.pop3.ssl.checkserveridentity \n         If set to true, check the server identity as specified by RFC 2595.  \n         false \n         true or false \n     \n     \n         mail.pop3.ssl.trust \n          If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.  \n         trust depends on the certificate the server presents. \n         Valid String \n     \n     \n         mail.pop3.ssl.socketFactory \n         If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. \n         None \n         SSL Socket Factory \n     \n     \n         mail.pop3.ssl.socketFactory.class \n         If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets.  \n         None \n         Valid String \n     \n     \n         mail.pop3.ssl.socketFactory.p \n         Specifies the port to connect to when using the specified socket factory. \n         995 \n         Valid Integer \n     \n     \n         mail.pop3.ssl.protocols \n         Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. \n         None \n         Valid String \n     \n     \n         mail.pop3.starttls.enable \n         If true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands \n         false \n         true or false \n     \n     \n         mail.pop3.starttls.required \n         If true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail. \n         false \n         true or false \n     \n     \n         mail.pop3.socks.host \n         Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. \n         None \n         Valid String \n     \n     \n         mail.pop3.socks.port \n         Specifies the port number for the SOCKS5 proxy server. \n         None \n         Valid String \n     \n     \n         mail.pop3.disabletop \n         If set to true, the POP3 TOP command will not be used to fetch message headers.  \n         false \n         true or false \n     \n     \n         mail.pop3.forgettopheaders \n         If set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command. \n         false \n         true or false \n     \n     \n         mail.pop3.filecache.enable \n         If set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. \n         false \n         true or false \n     \n     \n         mail.pop3.filecache.dir \n         If the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files. \n         None \n         Valid String \n     \n     \n         mail.pop3.cachewriteto \n         Controls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached. \n         false \n         true or false \n     \n     \n         mail.pop3.keepmessagecontent \n         If this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method).  \n         false \n         true or false \n       Examples  EXAMPLE 1  @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string);  Following example illustrates how to receive events in  xml  format using email source. In this example only mandatory parameters are defined in the  in the stream definition. For other parameters default values are taken. since search term is not defined, it poll and take all new messages in the inbox folder  EXAMPLE 2  @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string);  Following example illustrates how to receive events in  xml  format using email source. The email source polls the mail account in every 500 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term (email messages which come from from.account@. host name , contains  cc.account  in cc receipts list, and  Stream Processor  words in the mail subject) In the example, action after processes is defined as the  DELETE , so that after processing the event, corresponding mail is deleted from the mail folder.", 
            "title": "email (Source)"
        }, 
        {
            "location": "/api/1.0.1/", 
            "text": "API Docs - v1.0.1\n\n\nSink\n\n\nemail \n(Sink)\n\n\nThe email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken for the optional parameters If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters). Further, some email account required to enable 'access to less secure apps' (For gmail account you can enable it via https://myaccount.google.com/lesssecureapps.)\n\n\n\nSyntax\n\n\n@sink(type=\nemail\n, username=\nSTRING\n, address=\nSTRING\n, password=\nSTRING\n, host=\nSTRING\n, port=\nINT\n, ssl.enable=\nBOOL\n, auth=\nBOOL\n, content.type=\nSTRING\n, subject=\nSTRING\n, to=\nSTRING\n, cc=\nSTRING\n, bcc=\nSTRING\n, @map(...)))\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \nusername\n\n        \nUsername of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com).\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \naddress\n\n        \nAddress of the email account which is used to send emails.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \npassword\n\n        \nPassword of the email account.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \nhost\n\n        \nHost name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account.\n\n        \nsmtp.gmail.com\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nport\n\n        \nThe port which is used to create the connection.\n\n        \n'465' the default value is only valid is ssl enable\n\n        \nINT\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nssl.enable\n\n        \nWhether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection.\n\n        \ntrue\n\n        \nBOOL\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nauth\n\n        \nWhether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command.\n\n        \ntrue\n\n        \nBOOL\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \ncontent.type\n\n        \nContent type can be either 'text/plain' or 'text/html'.\n\n        \ntext/plain\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nsubject\n\n        \nSubject of the mail which has to be send.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nYes\n\n    \n\n    \n\n        \nto\n\n        \nAddress of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nYes\n\n    \n\n    \n\n        \ncc\n\n        \nAddress of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list.\n\n        \nNone\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nbcc\n\n        \nAddress of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list.\n\n        \nNone\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n\n\n\nSystem Parameters\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Parameters\n\n    \n\n    \n\n        \nmail.smtp.connectiontimeout\n\n        \nSocket connection timeout value in milliseconds. \n\n        \ninfinite timeout\n\n        \nAny Integer\n\n    \n\n    \n\n        \nmail.smtp.timeout\n\n        \nSocket I/O timeout value in milliseconds. \n\n        \ninfinite timeout\n\n        \nAny Integer\n\n    \n\n    \n\n        \nmail.smtp.from\n\n        \nEmail address to use for SMTP MAIL command. This sets the envelope return address.\n\n        \nDefaults to msg.getFrom() or InternetAddress.getLocalAddress().\n\n        \nValid email address\n\n    \n\n    \n\n        \nmail.smtp.localport\n\n        \nLocal port number to bind to when creating the SMTP socket.\n\n        \nDefaults to the port number picked by the Socket class.\n\n        \nAny Integer\n\n    \n\n    \n\n        \nmail.smtp.ehlo\n\n        \nIf false, do not attempt to sign on with the EHLO command.\n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.login.disable\n\n        \nIf true, prevents use of the AUTH LOGIN command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.plain.disable\n\n        \nIf true, prevents use of the AUTH PLAIN command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.digest-md5.disable\n\n        \nIf true, prevents use of the AUTH DIGEST-MD5 command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.ntlm.disable\n\n        \nIf true, prevents use of the AUTH NTLM command\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.ntlm.domain\n\n        \nThe NTLM authentication domain.\n\n        \nNone\n\n        \nValid NTLM authentication domain name\n\n    \n\n    \n\n        \nmail.smtp.auth.ntlm.flags\n\n        \nNTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details.\n\n        \nNone\n\n        \nValid NTLM protocol-specific flags.\n\n    \n\n    \n\n        \nmail.smtp.dsn.notify\n\n        \nThe NOTIFY option to the RCPT command.\n\n        \nNone\n\n        \nEither NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas).\n\n    \n\n    \n\n        \nmail.smtp.dsn.ret\n\n        \nThe RET option to the MAIL command.\n\n        \nNone\n\n        \nEither FULL or HDRS.\n\n    \n\n    \n\n        \nmail.smtp.sendpartial\n\n        \nIf set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.sasl.enable\n\n        \nIf set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.sasl.mechanisms\n\n        \nA space or comma separated list of SASL mechanism names to try to use.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.sasl.authorizationid\n\n        \nThe authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used.\n\n        \nusername\n\n        \nValid ID\n\n    \n\n    \n\n        \nmail.smtp.sasl.realm\n\n        \nThe realm to use with DIGEST-MD5 authentication.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.quitwait\n\n        \nIf set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.reportsuccess\n\n        \nIf set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.socketFactory\n\n        \nIf set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets.\n\n        \nNone\n\n        \nSocket Factory\n\n    \n\n    \n\n        \nmail.smtp.socketFactory.class\n\n        \nIf set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.socketFactory.fallback\n\n        \nIf set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class.\n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.socketFactory.port\n\n        \nSpecifies the port to connect to when using the specified socket factory\n\n        \n25\n\n        \nValid port number\n\n    \n\n    \n\n        \nmail.smtp.ssl.protocols\n\n        \nSpecifies the SSL protocols that will be enabled for SSL connections.\n\n        \nNone\n\n        \nThe property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method.\n\n    \n\n    \n\n        \nmail.smtp.starttls.enable\n\n        \nIf true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.starttls.required\n\n        \nIf true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.socks.host\n\n        \nSpecifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.socks.port\n\n        \nSpecifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080.\n\n        \n1080\n\n        \nvalid port number\n\n    \n\n    \n\n        \nmail.smtp.auth.ntlm.disable\n\n        \nIf true, prevents use of the AUTH NTLM command\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.mailextension\n\n        \nExtension string to append to the MAIL command.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.userset\n\n        \nIf set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\ndefine stream fooStream (email string, loginId int, name string);@sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)\n\n\n\n\nFollowing example illustrates how to publish events using the email sinkusing mandatory parameters. As in the example, it publishes events come from the fooStream in json format via email sink to the given 'to' recipients.The email is sent by the sender.account@gmail.com via secure connection.\n\n\n\nEXAMPLE 2\n\n\ndefine stream fooStream (name string, age int, country string);@sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)\n\n\n\n\nFollowing example illustrates how to publish events using the email sink. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given \nto\n,\ncc\n and \nbcc\n recipients using a secure connection. \nname\n in the \nsubject\n attribute will be the value of the \nname\n parameter in the corresponding output event\n\n\n\nSource\n\n\nemail \n(Source)\n\n\nEmail source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store ,  https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters).\n\n\n\nSyntax\n\n\n@source(type=\nemail\n, username=\nSTRING\n, password=\nSTRING\n, store=\nSTRING\n, host=\nSTRING\n, port=\nINT\n, folder=\nSTRING\n, search.term=\nSTRING\n, polling.interval=\nLONG\n, action.after.processed=\nSTRING\n, folder.to.move=\nSTRING\n, content.type=\nSTRING\n, ssl.enable=\nBOOL\n, @map(...)))\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \nusername\n\n        \nuser name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \npassword\n\n        \npassword of the email account\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \nstore\n\n        \nStore type that used to receive emails. it can be either imap or pop3.\n\n        \nimap\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nhost\n\n        \nHost name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable.\n\n        \nIf store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'.\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nport\n\n        \nThe port which is used to create the connection.\n\n        \n'993' the default value is valid only if store is imap and ssl enable\n\n        \nINT\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nfolder\n\n        \nName of the folder to fetch email.\n\n        \nINBOX\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nsearch.term\n\n        \nOption which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol.\n\n        \nNone\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \npolling.interval\n\n        \nInterval that email source should poll the account to check for new mails arrivals in seconds.\n\n        \n600\n\n        \nLONG\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \naction.after.processed\n\n        \nAction that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE\n\n        \nNONE\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nfolder.to.move\n\n        \nThe name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \ncontent.type\n\n        \nContent type of the email. It can be either 'text/plain' or 'text/html.'\n\n        \ntext/plain\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nssl.enable\n\n        \nIf it is 'true' then use a secure port to establish the connection. The possible values are 'true or false.\n\n        \ntrue\n\n        \nBOOL\n\n        \nYes\n\n        \nNo\n\n    \n\n\n\n\nSystem Parameters\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Parameters\n\n    \n\n    \n\n        \nmail.imap.partialfetch\n\n        \nControls whether the IMAP partial-fetch capability should be used\n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.fetchsize\n\n        \nPartial fetch size in bytes.\n\n        \n16K\n\n        \nvalue in bytes\n\n    \n\n    \n\n        \nmail.imap.peek\n\n        \nIf set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.connectiontimeout\n\n        \nSocket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket.\n\n        \ninfinity timeout\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.timeout\n\n        \nSocket read timeout value in milliseconds. This timeout is implemented by java.net.Socket.\n\n        \ninfinity timeout\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.writetimeout\n\n        \nSocket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection.\n\n        \ninfinity timeout\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.statuscachetimeout\n\n        \nTimeout value in milliseconds for cache of STATUS command response.\n\n        \n1000ms\n\n        \nTime out in miliseconds\n\n    \n\n    \n\n        \nmail.imap.appendbuffersize\n\n        \nMaximum size of a message to buffer in memory when appending to an IMAP folder.\n\n        \nNone\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.connectionpoolsize\n\n        \nMaximum number of available connections in the connection pool.\n\n        \n1\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.connectionpooltimeout\n\n        \nTimeout value in milliseconds for connection pool connections. \n\n        \n45000ms\n\n        \nAny Integer\n\n    \n\n    \n\n        \nmail.imap.separatestoreconnection\n\n        \nFlag to indicate whether to use a dedicated store connection for store commands.\n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.auth.login.disable\n\n        \nIf true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.auth.plain.disable\n\n        \nIf true, prevents use of the AUTHENTICATE PLAIN command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.auth.ntlm.disable\n\n        \nIf true, prevents use of the AUTHENTICATE NTLM command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.proxyauth.user\n\n        \nIf the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property.\n\n        \nNone\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.localaddress\n\n        \nLocal address (host name) to bind to when creating the IMAP socket.\n\n        \nDefaults to the address picked by the Socket class.\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.localport\n\n        \nLocal port number to bind to when creating the IMAP socket.\n\n        \nDefaults to the port number picked by the Socket class.\n\n        \nValid String value\n\n    \n\n    \n\n        \nmail.imap.sasl.enable\n\n        \nIf set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.sasl.mechanisms\n\n        \nA space or comma separated list of SASL mechanism names to try to use.\n\n        \nNone\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.sasl.authorizationid\n\n        \nThe authorization ID to use in the SASL authentication.\n\n        \nIf not set, the authentication ID (user name) is used.\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.sasl.realm\n\n        \nThe realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5.\n\n        \nNone\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.auth.ntlm.domain\n\n        \nThe NTLM authentication domain.\n\n        \nNone\n\n        \nValid string value\n\n    \n\n    \n\n        \nThe NTLM authentication domain.\n\n        \nNTLM protocol-specific flags.\n\n        \nNone\n\n        \nValid integer value\n\n    \n\n    \n\n        \nmail.imap.socketFactory\n\n        \nIf set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets.\n\n        \nNone\n\n        \nValid SocketFactory\n\n    \n\n    \n\n        \nmail.imap.socketFactory.class\n\n        \nIf set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets.\n\n        \nNone\n\n        \nValid string\n\n    \n\n    \n\n        \nmail.imap.socketFactory.fallback\n\n        \nIf set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. \n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.socketFactory.port\n\n        \nSpecifies the port to connect to when using the specified socket factory. Default port is used when not set.\n\n        \n143\n\n        \nValid Integer\n\n    \n\n    \n\n        \nmail.imap.ssl.checkserveridentity\n\n        \nIf set to true, check the server identity as specified by RFC 2595.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.ssl.trust\n\n        \nIf set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '\n', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.imap.ssl.socketFactory\n\n        \nIf set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets.\n\n        \nNone\n\n        \nSSL Socket Factory\n\n    \n\n    \n\n        \nmail.imap.ssl.socketFactory.class\n\n        \nIf set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.imap.ssl.socketFactory.port\n\n        \nSpecifies the port to connect to when using the specified socket factory.\n\n        \nthe default port will be used-993\n\n        \nvalid port number\n\n    \n\n    \n\n        \nmail.imap.ssl.protocols\n\n        \nSpecifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method.\n\n        \nNone\n\n        \nValid string\n\n    \n\n    \n\n        \nmail.imap.starttls.enable\n\n        \nIf true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.socks.host\n\n        \nSpecifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.imap.socks.port\n\n        \nSpecifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080.\n\n        \n1080\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.imap.minidletime\n\n        \nThis property sets the delay in milliseconds.\n\n        \n10 milliseconds\n\n        \ntime in seconds (Integer)\n\n    \n\n    \n\n        \nmail.imap.enableimapevents\n\n        \nEnable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.folder.class\n\n        \nClass name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store)\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.connectiontimeout\n\n        \nSocket connection timeout value in milliseconds.\n\n        \nInfinite timeout\n\n        \nInteger value\n\n    \n\n    \n\n        \nmail.pop3.timeout\n\n        \nSocket I/O timeout value in milliseconds. \n\n        \nInfinite timeout\n\n        \nInteger value\n\n    \n\n    \n\n        \nmail.pop3.message.class\n\n        \nClass name of a subclass of com.sun.mail.pop3.POP3Message\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.localaddress\n\n        \nLocal address (host name) to bind to when creating the POP3 socket.\n\n        \nDefaults to the address picked by the Socket class.\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.localport\n\n        \nLocal port number to bind to when creating the POP3 socket.\n\n        \nDefaults to the port number picked by the Socket class.\n\n        \nValid port number\n\n    \n\n    \n\n        \nmail.pop3.apop.enable\n\n        \nIf set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.socketFactory\n\n        \nIf set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets.\n\n        \nNone\n\n        \nSocket Factory\n\n    \n\n    \n\n        \nmail.pop3.socketFactory.class\n\n        \nIf set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.socketFactory.fallback\n\n        \nIf set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.socketFactory.port\n\n        \nSpecifies the port to connect to when using the specified socket factory.\n\n        \nDefault port\n\n        \nValid port number\n\n    \n\n    \n\n        \nmail.pop3.ssl.checkserveridentity\n\n        \nIf set to true, check the server identity as specified by RFC 2595. \n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.ssl.trust\n\n        \nIf set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to '\n', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents.\n\n        \nDepends on the certificate the server presents\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.ssl.socketFactory\n\n        \nIf set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets.\n\n        \nNone\n\n        \nSSL Socket Factory\n\n    \n\n    \n\n        \nmail.pop3.ssl.checkserveridentity\n\n        \nIf set to true, check the server identity as specified by RFC 2595. \n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.ssl.trust\n\n        \n If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted. \n\n        \ntrust depends on the certificate the server presents.\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.ssl.socketFactory\n\n        \nIf set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets.\n\n        \nNone\n\n        \nSSL Socket Factory\n\n    \n\n    \n\n        \nmail.pop3.ssl.socketFactory.class\n\n        \nIf set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets. \n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.ssl.socketFactory.p\n\n        \nSpecifies the port to connect to when using the specified socket factory.\n\n        \n995\n\n        \nValid Integer\n\n    \n\n    \n\n        \nmail.pop3.ssl.protocols\n\n        \nSpecifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.starttls.enable\n\n        \nIf true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.starttls.required\n\n        \nIf true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.socks.host\n\n        \nSpecifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.socks.port\n\n        \nSpecifies the port number for the SOCKS5 proxy server.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.disabletop\n\n        \nIf set to true, the POP3 TOP command will not be used to fetch message headers. \n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.forgettopheaders\n\n        \nIf set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.filecache.enable\n\n        \nIf set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.filecache.dir\n\n        \nIf the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.cachewriteto\n\n        \nControls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.keepmessagecontent\n\n        \nIf this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method). \n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\n@source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string);\n\n\n\n\nFollowing example illustrates how to receive events in \nxml\n format using email source. In this example only mandatory parameters are defined in the  in the stream definition. For other parameters default values are taken. since search term is not defined, it poll and take all new messages in the inbox folder\n\n\n\nEXAMPLE 2\n\n\n@source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string);\n\n\n\n\nFollowing example illustrates how to receive events in \nxml\n format using email source. The email source polls the mail account in every 500 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term (email messages which come from\nfrom.account@.\nhost name\n, contains \ncc.account\n in cc receipts list, and \nStream Processor\n words in the mail subject) In the example, action after processes is defined as the \nDELETE\n, so that after processing the event, corresponding mail is deleted from the mail folder.", 
            "title": "1.0.1"
        }, 
        {
            "location": "/api/1.0.1/#api-docs-v101", 
            "text": "", 
            "title": "API Docs - v1.0.1"
        }, 
        {
            "location": "/api/1.0.1/#sink", 
            "text": "", 
            "title": "Sink"
        }, 
        {
            "location": "/api/1.0.1/#email-sink", 
            "text": "The email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken for the optional parameters If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters). Further, some email account required to enable 'access to less secure apps' (For gmail account you can enable it via https://myaccount.google.com/lesssecureapps.)  Syntax  @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , @map(...)))  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         username \n         Username of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com). \n         \n         STRING \n         No \n         No \n     \n     \n         address \n         Address of the email account which is used to send emails. \n         \n         STRING \n         No \n         No \n     \n     \n         password \n         Password of the email account. \n         \n         STRING \n         No \n         No \n     \n     \n         host \n         Host name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account. \n         smtp.gmail.com \n         STRING \n         Yes \n         No \n     \n     \n         port \n         The port which is used to create the connection. \n         '465' the default value is only valid is ssl enable \n         INT \n         Yes \n         No \n     \n     \n         ssl.enable \n         Whether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection. \n         true \n         BOOL \n         Yes \n         No \n     \n     \n         auth \n         Whether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command. \n         true \n         BOOL \n         Yes \n         No \n     \n     \n         content.type \n         Content type can be either 'text/plain' or 'text/html'. \n         text/plain \n         STRING \n         Yes \n         No \n     \n     \n         subject \n         Subject of the mail which has to be send. \n         \n         STRING \n         No \n         Yes \n     \n     \n         to \n         Address of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list. \n         \n         STRING \n         No \n         Yes \n     \n     \n         cc \n         Address of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list. \n         None \n         STRING \n         Yes \n         No \n     \n     \n         bcc \n         Address of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list. \n         None \n         STRING \n         Yes \n         No \n       System Parameters  \n     \n         Name \n         Description \n         Default Value \n         Possible Parameters \n     \n     \n         mail.smtp.connectiontimeout \n         Socket connection timeout value in milliseconds.  \n         infinite timeout \n         Any Integer \n     \n     \n         mail.smtp.timeout \n         Socket I/O timeout value in milliseconds.  \n         infinite timeout \n         Any Integer \n     \n     \n         mail.smtp.from \n         Email address to use for SMTP MAIL command. This sets the envelope return address. \n         Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). \n         Valid email address \n     \n     \n         mail.smtp.localport \n         Local port number to bind to when creating the SMTP socket. \n         Defaults to the port number picked by the Socket class. \n         Any Integer \n     \n     \n         mail.smtp.ehlo \n         If false, do not attempt to sign on with the EHLO command. \n         true \n         true or false \n     \n     \n         mail.smtp.auth.login.disable \n         If true, prevents use of the AUTH LOGIN command. \n         false \n         true or false \n     \n     \n         mail.smtp.auth.plain.disable \n         If true, prevents use of the AUTH PLAIN command. \n         false \n         true or false \n     \n     \n         mail.smtp.auth.digest-md5.disable \n         If true, prevents use of the AUTH DIGEST-MD5 command. \n         false \n         true or false \n     \n     \n         mail.smtp.auth.ntlm.disable \n         If true, prevents use of the AUTH NTLM command \n         false \n         true or false \n     \n     \n         mail.smtp.auth.ntlm.domain \n         The NTLM authentication domain. \n         None \n         Valid NTLM authentication domain name \n     \n     \n         mail.smtp.auth.ntlm.flags \n         NTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details. \n         None \n         Valid NTLM protocol-specific flags. \n     \n     \n         mail.smtp.dsn.notify \n         The NOTIFY option to the RCPT command. \n         None \n         Either NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas). \n     \n     \n         mail.smtp.dsn.ret \n         The RET option to the MAIL command. \n         None \n         Either FULL or HDRS. \n     \n     \n         mail.smtp.sendpartial \n         If set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address. \n         false \n         true or false \n     \n     \n         mail.smtp.sasl.enable \n         If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. \n         false \n         true or false \n     \n     \n         mail.smtp.sasl.mechanisms \n         A space or comma separated list of SASL mechanism names to try to use. \n         None \n         \n     \n     \n         mail.smtp.sasl.authorizationid \n         The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. \n         username \n         Valid ID \n     \n     \n         mail.smtp.sasl.realm \n         The realm to use with DIGEST-MD5 authentication. \n         None \n         \n     \n     \n         mail.smtp.quitwait \n         If set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command. \n         false \n         true or false \n     \n     \n         mail.smtp.reportsuccess \n         If set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful. \n         false \n         true or false \n     \n     \n         mail.smtp.socketFactory \n         If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets. \n         None \n         Socket Factory \n     \n     \n         mail.smtp.socketFactory.class \n         If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets. \n         None \n         \n     \n     \n         mail.smtp.socketFactory.fallback \n         If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. \n         true \n         true or false \n     \n     \n         mail.smtp.socketFactory.port \n         Specifies the port to connect to when using the specified socket factory \n         25 \n         Valid port number \n     \n     \n         mail.smtp.ssl.protocols \n         Specifies the SSL protocols that will be enabled for SSL connections. \n         None \n         The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. \n     \n     \n         mail.smtp.starttls.enable \n         If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. \n         false \n         true or false \n     \n     \n         mail.smtp.starttls.required \n         If true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail. \n         false \n         true or false \n     \n     \n         mail.smtp.socks.host \n         Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. \n         None \n         \n     \n     \n         mail.smtp.socks.port \n         Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. \n         1080 \n         valid port number \n     \n     \n         mail.smtp.auth.ntlm.disable \n         If true, prevents use of the AUTH NTLM command \n         false \n         true or false \n     \n     \n         mail.smtp.mailextension \n         Extension string to append to the MAIL command. \n         None \n         \n     \n     \n         mail.smtp.userset \n         If set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue. \n         false \n         true or false \n       Examples  EXAMPLE 1  define stream fooStream (email string, loginId int, name string);@sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)  Following example illustrates how to publish events using the email sinkusing mandatory parameters. As in the example, it publishes events come from the fooStream in json format via email sink to the given 'to' recipients.The email is sent by the sender.account@gmail.com via secure connection.  EXAMPLE 2  define stream fooStream (name string, age int, country string);@sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)  Following example illustrates how to publish events using the email sink. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given  to , cc  and  bcc  recipients using a secure connection.  name  in the  subject  attribute will be the value of the  name  parameter in the corresponding output event", 
            "title": "email (Sink)"
        }, 
        {
            "location": "/api/1.0.1/#source", 
            "text": "", 
            "title": "Source"
        }, 
        {
            "location": "/api/1.0.1/#email-source", 
            "text": "Email source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store ,  https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters).  Syntax  @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...)))  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         username \n         user name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account. \n         \n         STRING \n         No \n         No \n     \n     \n         password \n         password of the email account \n         \n         STRING \n         No \n         No \n     \n     \n         store \n         Store type that used to receive emails. it can be either imap or pop3. \n         imap \n         STRING \n         Yes \n         No \n     \n     \n         host \n         Host name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable. \n         If store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'. \n         STRING \n         Yes \n         No \n     \n     \n         port \n         The port which is used to create the connection. \n         '993' the default value is valid only if store is imap and ssl enable \n         INT \n         Yes \n         No \n     \n     \n         folder \n         Name of the folder to fetch email. \n         INBOX \n         STRING \n         Yes \n         No \n     \n     \n         search.term \n         Option which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol. \n         None \n         STRING \n         Yes \n         No \n     \n     \n         polling.interval \n         Interval that email source should poll the account to check for new mails arrivals in seconds. \n         600 \n         LONG \n         Yes \n         No \n     \n     \n         action.after.processed \n         Action that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE \n         NONE \n         STRING \n         Yes \n         No \n     \n     \n         folder.to.move \n         The name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move. \n         \n         STRING \n         No \n         No \n     \n     \n         content.type \n         Content type of the email. It can be either 'text/plain' or 'text/html.' \n         text/plain \n         STRING \n         Yes \n         No \n     \n     \n         ssl.enable \n         If it is 'true' then use a secure port to establish the connection. The possible values are 'true or false. \n         true \n         BOOL \n         Yes \n         No \n       System Parameters  \n     \n         Name \n         Description \n         Default Value \n         Possible Parameters \n     \n     \n         mail.imap.partialfetch \n         Controls whether the IMAP partial-fetch capability should be used \n         true \n         true or false \n     \n     \n         mail.imap.fetchsize \n         Partial fetch size in bytes. \n         16K \n         value in bytes \n     \n     \n         mail.imap.peek \n         If set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage. \n         false \n         true or false \n     \n     \n         mail.imap.connectiontimeout \n         Socket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket. \n         infinity timeout \n         Any Integer value \n     \n     \n         mail.imap.timeout \n         Socket read timeout value in milliseconds. This timeout is implemented by java.net.Socket. \n         infinity timeout \n         Any Integer value \n     \n     \n         mail.imap.writetimeout \n         Socket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection. \n         infinity timeout \n         Any Integer value \n     \n     \n         mail.imap.statuscachetimeout \n         Timeout value in milliseconds for cache of STATUS command response. \n         1000ms \n         Time out in miliseconds \n     \n     \n         mail.imap.appendbuffersize \n         Maximum size of a message to buffer in memory when appending to an IMAP folder. \n         None \n         Any Integer value \n     \n     \n         mail.imap.connectionpoolsize \n         Maximum number of available connections in the connection pool. \n         1 \n         Any Integer value \n     \n     \n         mail.imap.connectionpooltimeout \n         Timeout value in milliseconds for connection pool connections.  \n         45000ms \n         Any Integer \n     \n     \n         mail.imap.separatestoreconnection \n         Flag to indicate whether to use a dedicated store connection for store commands. \n         true \n         true or false \n     \n     \n         mail.imap.auth.login.disable \n         If true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command. \n         false \n         true or false \n     \n     \n         mail.imap.auth.plain.disable \n         If true, prevents use of the AUTHENTICATE PLAIN command. \n         false \n         true or false \n     \n     \n         mail.imap.auth.ntlm.disable \n         If true, prevents use of the AUTHENTICATE NTLM command. \n         false \n         true or false \n     \n     \n         mail.imap.proxyauth.user \n         If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property. \n         None \n         Valid string value \n     \n     \n         mail.imap.localaddress \n         Local address (host name) to bind to when creating the IMAP socket. \n         Defaults to the address picked by the Socket class. \n         Valid string value \n     \n     \n         mail.imap.localport \n         Local port number to bind to when creating the IMAP socket. \n         Defaults to the port number picked by the Socket class. \n         Valid String value \n     \n     \n         mail.imap.sasl.enable \n         If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. \n         false \n         true or false \n     \n     \n         mail.imap.sasl.mechanisms \n         A space or comma separated list of SASL mechanism names to try to use. \n         None \n         Valid string value \n     \n     \n         mail.imap.sasl.authorizationid \n         The authorization ID to use in the SASL authentication. \n         If not set, the authentication ID (user name) is used. \n         Valid string value \n     \n     \n         mail.imap.sasl.realm \n         The realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5. \n         None \n         Valid string value \n     \n     \n         mail.imap.auth.ntlm.domain \n         The NTLM authentication domain. \n         None \n         Valid string value \n     \n     \n         The NTLM authentication domain. \n         NTLM protocol-specific flags. \n         None \n         Valid integer value \n     \n     \n         mail.imap.socketFactory \n         If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets. \n         None \n         Valid SocketFactory \n     \n     \n         mail.imap.socketFactory.class \n         If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets. \n         None \n         Valid string \n     \n     \n         mail.imap.socketFactory.fallback \n         If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class.  \n         true \n         true or false \n     \n     \n         mail.imap.socketFactory.port \n         Specifies the port to connect to when using the specified socket factory. Default port is used when not set. \n         143 \n         Valid Integer \n     \n     \n         mail.imap.ssl.checkserveridentity \n         If set to true, check the server identity as specified by RFC 2595. \n         false \n         true or false \n     \n     \n         mail.imap.ssl.trust \n         If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. \n         None \n         Valid String \n     \n     \n         mail.imap.ssl.socketFactory \n         If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets. \n         None \n         SSL Socket Factory \n     \n     \n         mail.imap.ssl.socketFactory.class \n         If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets. \n         None \n         Valid String \n     \n     \n         mail.imap.ssl.socketFactory.port \n         Specifies the port to connect to when using the specified socket factory. \n         the default port will be used-993 \n         valid port number \n     \n     \n         mail.imap.ssl.protocols \n         Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. \n         None \n         Valid string \n     \n     \n         mail.imap.starttls.enable \n         If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. \n         false \n         true or false \n     \n     \n         mail.imap.socks.host \n         Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. \n         None \n         Valid String \n     \n     \n         mail.imap.socks.port \n         Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. \n         1080 \n         Valid String \n     \n     \n         mail.imap.minidletime \n         This property sets the delay in milliseconds. \n         10 milliseconds \n         time in seconds (Integer) \n     \n     \n         mail.imap.enableimapevents \n         Enable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string. \n         false \n         true or false \n     \n     \n         mail.imap.folder.class \n         Class name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store) \n         None \n         Valid String \n     \n     \n         mail.pop3.connectiontimeout \n         Socket connection timeout value in milliseconds. \n         Infinite timeout \n         Integer value \n     \n     \n         mail.pop3.timeout \n         Socket I/O timeout value in milliseconds.  \n         Infinite timeout \n         Integer value \n     \n     \n         mail.pop3.message.class \n         Class name of a subclass of com.sun.mail.pop3.POP3Message \n         None \n         Valid String \n     \n     \n         mail.pop3.localaddress \n         Local address (host name) to bind to when creating the POP3 socket. \n         Defaults to the address picked by the Socket class. \n         Valid String \n     \n     \n         mail.pop3.localport \n         Local port number to bind to when creating the POP3 socket. \n         Defaults to the port number picked by the Socket class. \n         Valid port number \n     \n     \n         mail.pop3.apop.enable \n         If set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password. \n         false \n         true or false \n     \n     \n         mail.pop3.socketFactory \n         If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets. \n         None \n         Socket Factory \n     \n     \n         mail.pop3.socketFactory.class \n         If set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets. \n         None \n         Valid String \n     \n     \n         mail.pop3.socketFactory.fallback \n         If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. \n         false \n         true or false \n     \n     \n         mail.pop3.socketFactory.port \n         Specifies the port to connect to when using the specified socket factory. \n         Default port \n         Valid port number \n     \n     \n         mail.pop3.ssl.checkserveridentity \n         If set to true, check the server identity as specified by RFC 2595.  \n         false \n         true or false \n     \n     \n         mail.pop3.ssl.trust \n         If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. \n         Depends on the certificate the server presents \n         Valid String \n     \n     \n         mail.pop3.ssl.socketFactory \n         If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. \n         None \n         SSL Socket Factory \n     \n     \n         mail.pop3.ssl.checkserveridentity \n         If set to true, check the server identity as specified by RFC 2595.  \n         false \n         true or false \n     \n     \n         mail.pop3.ssl.trust \n          If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.  \n         trust depends on the certificate the server presents. \n         Valid String \n     \n     \n         mail.pop3.ssl.socketFactory \n         If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. \n         None \n         SSL Socket Factory \n     \n     \n         mail.pop3.ssl.socketFactory.class \n         If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets.  \n         None \n         Valid String \n     \n     \n         mail.pop3.ssl.socketFactory.p \n         Specifies the port to connect to when using the specified socket factory. \n         995 \n         Valid Integer \n     \n     \n         mail.pop3.ssl.protocols \n         Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. \n         None \n         Valid String \n     \n     \n         mail.pop3.starttls.enable \n         If true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands \n         false \n         true or false \n     \n     \n         mail.pop3.starttls.required \n         If true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail. \n         false \n         true or false \n     \n     \n         mail.pop3.socks.host \n         Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. \n         None \n         Valid String \n     \n     \n         mail.pop3.socks.port \n         Specifies the port number for the SOCKS5 proxy server. \n         None \n         Valid String \n     \n     \n         mail.pop3.disabletop \n         If set to true, the POP3 TOP command will not be used to fetch message headers.  \n         false \n         true or false \n     \n     \n         mail.pop3.forgettopheaders \n         If set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command. \n         false \n         true or false \n     \n     \n         mail.pop3.filecache.enable \n         If set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. \n         false \n         true or false \n     \n     \n         mail.pop3.filecache.dir \n         If the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files. \n         None \n         Valid String \n     \n     \n         mail.pop3.cachewriteto \n         Controls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached. \n         false \n         true or false \n     \n     \n         mail.pop3.keepmessagecontent \n         If this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method).  \n         false \n         true or false \n       Examples  EXAMPLE 1  @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string);  Following example illustrates how to receive events in  xml  format using email source. In this example only mandatory parameters are defined in the  in the stream definition. For other parameters default values are taken. since search term is not defined, it poll and take all new messages in the inbox folder  EXAMPLE 2  @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string);  Following example illustrates how to receive events in  xml  format using email source. The email source polls the mail account in every 500 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term (email messages which come from from.account@. host name , contains  cc.account  in cc receipts list, and  Stream Processor  words in the mail subject) In the example, action after processes is defined as the  DELETE , so that after processing the event, corresponding mail is deleted from the mail folder.", 
            "title": "email (Source)"
        }, 
        {
            "location": "/api/1.0.0-M8/", 
            "text": "API Docs - v1.0.0-M8\n\n\nSink\n\n\nemail \n(Sink)\n\n\nThe email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters).\n\n\n\nSyntax\n\n\n@sink(type=\nemail\n, username=\nSTRING\n, address=\nSTRING\n, password=\nSTRING\n, host=\nSTRING\n, port=\nINT\n, ssl.enable=\nBOOL\n, auth=\nBOOL\n, content.type=\nSTRING\n, subject=\nSTRING\n, to=\nSTRING\n, cc=\nSTRING\n, bcc=\nSTRING\n, @map(...)))\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \nusername\n\n        \nUsername of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com).\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \naddress\n\n        \nAddress of the email account which is used to send emails.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \npassword\n\n        \nPassword of the email account.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \nhost\n\n        \nHost name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account.\n\n        \nsmtp.gmail.com\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nport\n\n        \nThe port which is used to create the connection.\n\n        \n'465' the default value is only valid is ssl enable\n\n        \nINT\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nssl.enable\n\n        \nWhether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection.\n\n        \ntrue\n\n        \nBOOL\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nauth\n\n        \nWhether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command.\n\n        \ntrue\n\n        \nBOOL\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \ncontent.type\n\n        \nContent type can be either 'text/plain' or 'text/html'.\n\n        \ntext/plain\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nsubject\n\n        \nSubject of the mail which has to be send.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nYes\n\n    \n\n    \n\n        \nto\n\n        \nAddress of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nYes\n\n    \n\n    \n\n        \ncc\n\n        \nAddress of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list.\n\n        \nNone\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nbcc\n\n        \nAddress of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list.\n\n        \nNone\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n\n\n\nSystem Parameters\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Parameters\n\n    \n\n    \n\n        \nmail.smtp.connectiontimeout\n\n        \nSocket connection timeout value in milliseconds. \n\n        \ninfinite timeout\n\n        \nAny Integer\n\n    \n\n    \n\n        \nmail.smtp.timeout\n\n        \nSocket I/O timeout value in milliseconds. \n\n        \ninfinite timeout\n\n        \nAny Integer\n\n    \n\n    \n\n        \nmail.smtp.from\n\n        \nEmail address to use for SMTP MAIL command. This sets the envelope return address.\n\n        \nDefaults to msg.getFrom() or InternetAddress.getLocalAddress().\n\n        \nValid email address\n\n    \n\n    \n\n        \nmail.smtp.localport\n\n        \nLocal port number to bind to when creating the SMTP socket.\n\n        \nDefaults to the port number picked by the Socket class.\n\n        \nAny Integer\n\n    \n\n    \n\n        \nmail.smtp.ehlo\n\n        \nIf false, do not attempt to sign on with the EHLO command.\n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.login.disable\n\n        \nIf true, prevents use of the AUTH LOGIN command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.plain.disable\n\n        \nIf true, prevents use of the AUTH PLAIN command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.digest-md5.disable\n\n        \nIf true, prevents use of the AUTH DIGEST-MD5 command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.ntlm.disable\n\n        \nIf true, prevents use of the AUTH NTLM command\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.ntlm.domain\n\n        \nThe NTLM authentication domain.\n\n        \nNone\n\n        \nValid NTLM authentication domain name\n\n    \n\n    \n\n        \nmail.smtp.auth.ntlm.flags\n\n        \nNTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details.\n\n        \nNone\n\n        \nValid NTLM protocol-specific flags.\n\n    \n\n    \n\n        \nmail.smtp.dsn.notify\n\n        \nThe NOTIFY option to the RCPT command.\n\n        \nNone\n\n        \nEither NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas).\n\n    \n\n    \n\n        \nmail.smtp.dsn.ret\n\n        \nThe RET option to the MAIL command.\n\n        \nNone\n\n        \nEither FULL or HDRS.\n\n    \n\n    \n\n        \nmail.smtp.sendpartial\n\n        \nIf set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.sasl.enable\n\n        \nIf set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.sasl.mechanisms\n\n        \nA space or comma separated list of SASL mechanism names to try to use.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.sasl.authorizationid\n\n        \nThe authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used.\n\n        \nusername\n\n        \nValid ID\n\n    \n\n    \n\n        \nmail.smtp.sasl.realm\n\n        \nThe realm to use with DIGEST-MD5 authentication.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.quitwait\n\n        \nIf set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.reportsuccess\n\n        \nIf set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.socketFactory\n\n        \nIf set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets.\n\n        \nNone\n\n        \nSocket Factory\n\n    \n\n    \n\n        \nmail.smtp.socketFactory.class\n\n        \nIf set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.socketFactory.fallback\n\n        \nIf set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class.\n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.socketFactory.port\n\n        \nSpecifies the port to connect to when using the specified socket factory\n\n        \n25\n\n        \nValid port number\n\n    \n\n    \n\n        \nmail.smtp.ssl.protocols\n\n        \nSpecifies the SSL protocols that will be enabled for SSL connections.\n\n        \nNone\n\n        \nThe property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method.\n\n    \n\n    \n\n        \nmail.smtp.starttls.enable\n\n        \nIf true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.starttls.required\n\n        \nIf true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.socks.host\n\n        \nSpecifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.socks.port\n\n        \nSpecifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080.\n\n        \n1080\n\n        \nvalid port number\n\n    \n\n    \n\n        \nmail.smtp.auth.ntlm.disable\n\n        \nIf true, prevents use of the AUTH NTLM command\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.mailextension\n\n        \nExtension string to append to the MAIL command.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.userset\n\n        \nIf set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\n@sink(type='email', @map(type='json'), username='wso2', address='wso2@gmail.com',password='wso234',host='smtp.gmail.com',subject='Event from SP',to='towso2@gmail.com ,wso2two@gmail.com',cc='ccwso2@gmail.com')define stream inputStream (name string, age int, country string);\n\n\n\n\nFollowing example illustrates how to publish a event using email sink. As in the example, it publishes events come from the inputStream in json format through email to given 'to' and 'cc' recipients.The email is sent through wso2@gmail.com email account via secure connection.\n\n\n\nSource\n\n\nemail \n(Source)\n\n\nEmail source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store ,  https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters).\n\n\n\nSyntax\n\n\n@source(type=\nemail\n, username=\nSTRING\n, password=\nSTRING\n, store=\nSTRING\n, host=\nSTRING\n, port=\nINT\n, folder=\nSTRING\n, search.term=\nSTRING\n, polling.interval=\nLONG\n, action.after.processed=\nSTRING\n, folder.to.move=\nSTRING\n, content.type=\nSTRING\n, ssl.enable=\nBOOL\n, @map(...)))\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \nusername\n\n        \nuser name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \npassword\n\n        \npassword of the email account\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \nstore\n\n        \nStore type that used to receive emails. it can be either imap or pop3.\n\n        \nimap\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nhost\n\n        \nHost name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable.\n\n        \nIf store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'.\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nport\n\n        \nThe port which is used to create the connection.\n\n        \n'993' the default value is valid only if store is imap and ssl enable\n\n        \nINT\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nfolder\n\n        \nName of the folder to fetch email.\n\n        \nINBOX\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nsearch.term\n\n        \nOption which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol.\n\n        \nNone\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \npolling.interval\n\n        \nInterval that email source should poll the account to check for new mails arrivals in seconds.\n\n        \n600\n\n        \nLONG\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \naction.after.processed\n\n        \nAction that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE\n\n        \nNONE\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nfolder.to.move\n\n        \nThe name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \ncontent.type\n\n        \nContent type of the email. It can be either 'text/plain' or 'text/html.'\n\n        \ntext/plain\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nssl.enable\n\n        \nIf it is 'true' then use a secure port to establish the connection. The possible values are 'true or false.\n\n        \ntrue\n\n        \nBOOL\n\n        \nYes\n\n        \nNo\n\n    \n\n\n\n\nSystem Parameters\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Parameters\n\n    \n\n    \n\n        \nmail.imap.partialfetch\n\n        \nControls whether the IMAP partial-fetch capability should be used\n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.fetchsize\n\n        \nPartial fetch size in bytes.\n\n        \n16K\n\n        \nvalue in bytes\n\n    \n\n    \n\n        \nmail.imap.peek\n\n        \nIf set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.connectiontimeout\n\n        \nSocket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket.\n\n        \ninfinity timeout\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.timeout\n\n        \nSocket read timeout value in milliseconds. This timeout is implemented by java.net.Socket.\n\n        \ninfinity timeout\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.writetimeout\n\n        \nSocket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection.\n\n        \ninfinity timeout\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.statuscachetimeout\n\n        \nTimeout value in milliseconds for cache of STATUS command response.\n\n        \n1000ms\n\n        \nTime out in miliseconds\n\n    \n\n    \n\n        \nmail.imap.appendbuffersize\n\n        \nMaximum size of a message to buffer in memory when appending to an IMAP folder.\n\n        \nNone\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.connectionpoolsize\n\n        \nMaximum number of available connections in the connection pool.\n\n        \n1\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.connectionpooltimeout\n\n        \nTimeout value in milliseconds for connection pool connections. \n\n        \n45000ms\n\n        \nAny Integer\n\n    \n\n    \n\n        \nmail.imap.separatestoreconnection\n\n        \nFlag to indicate whether to use a dedicated store connection for store commands.\n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.auth.login.disable\n\n        \nIf true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.auth.plain.disable\n\n        \nIf true, prevents use of the AUTHENTICATE PLAIN command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.auth.ntlm.disable\n\n        \nIf true, prevents use of the AUTHENTICATE NTLM command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.proxyauth.user\n\n        \nIf the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property.\n\n        \nNone\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.localaddress\n\n        \nLocal address (host name) to bind to when creating the IMAP socket.\n\n        \nDefaults to the address picked by the Socket class.\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.localport\n\n        \nLocal port number to bind to when creating the IMAP socket.\n\n        \nDefaults to the port number picked by the Socket class.\n\n        \nValid String value\n\n    \n\n    \n\n        \nmail.imap.sasl.enable\n\n        \nIf set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.sasl.mechanisms\n\n        \nA space or comma separated list of SASL mechanism names to try to use.\n\n        \nNone\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.sasl.authorizationid\n\n        \nThe authorization ID to use in the SASL authentication.\n\n        \nIf not set, the authentication ID (user name) is used.\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.sasl.realm\n\n        \nThe realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5.\n\n        \nNone\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.auth.ntlm.domain\n\n        \nThe NTLM authentication domain.\n\n        \nNone\n\n        \nValid string value\n\n    \n\n    \n\n        \nThe NTLM authentication domain.\n\n        \nNTLM protocol-specific flags.\n\n        \nNone\n\n        \nValid integer value\n\n    \n\n    \n\n        \nmail.imap.socketFactory\n\n        \nIf set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets.\n\n        \nNone\n\n        \nValid SocketFactory\n\n    \n\n    \n\n        \nmail.imap.socketFactory.class\n\n        \nIf set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets.\n\n        \nNone\n\n        \nValid string\n\n    \n\n    \n\n        \nmail.imap.socketFactory.fallback\n\n        \nIf set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. \n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.socketFactory.port\n\n        \nSpecifies the port to connect to when using the specified socket factory. Default port is used when not set.\n\n        \n143\n\n        \nValid Integer\n\n    \n\n    \n\n        \nmail.imap.ssl.checkserveridentity\n\n        \nIf set to true, check the server identity as specified by RFC 2595.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.ssl.trust\n\n        \nIf set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '\n', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.imap.ssl.socketFactory\n\n        \nIf set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets.\n\n        \nNone\n\n        \nSSL Socket Factory\n\n    \n\n    \n\n        \nmail.imap.ssl.socketFactory.class\n\n        \nIf set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.imap.ssl.socketFactory.port\n\n        \nSpecifies the port to connect to when using the specified socket factory.\n\n        \nthe default port will be used-993\n\n        \nvalid port number\n\n    \n\n    \n\n        \nmail.imap.ssl.protocols\n\n        \nSpecifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method.\n\n        \nNone\n\n        \nValid string\n\n    \n\n    \n\n        \nmail.imap.starttls.enable\n\n        \nIf true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.socks.host\n\n        \nSpecifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.imap.socks.port\n\n        \nSpecifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080.\n\n        \n1080\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.imap.minidletime\n\n        \nThis property sets the delay in milliseconds.\n\n        \n10 milliseconds\n\n        \ntime in seconds (Integer)\n\n    \n\n    \n\n        \nmail.imap.enableimapevents\n\n        \nEnable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.folder.class\n\n        \nClass name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store)\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.connectiontimeout\n\n        \nSocket connection timeout value in milliseconds.\n\n        \nInfinite timeout\n\n        \nInteger value\n\n    \n\n    \n\n        \nmail.pop3.timeout\n\n        \nSocket I/O timeout value in milliseconds. \n\n        \nInfinite timeout\n\n        \nInteger value\n\n    \n\n    \n\n        \nmail.pop3.message.class\n\n        \nClass name of a subclass of com.sun.mail.pop3.POP3Message\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.localaddress\n\n        \nLocal address (host name) to bind to when creating the POP3 socket.\n\n        \nDefaults to the address picked by the Socket class.\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.localport\n\n        \nLocal port number to bind to when creating the POP3 socket.\n\n        \nDefaults to the port number picked by the Socket class.\n\n        \nValid port number\n\n    \n\n    \n\n        \nmail.pop3.apop.enable\n\n        \nIf set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.socketFactory\n\n        \nIf set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets.\n\n        \nNone\n\n        \nSocket Factory\n\n    \n\n    \n\n        \nmail.pop3.socketFactory.class\n\n        \nIf set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.socketFactory.fallback\n\n        \nIf set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.socketFactory.port\n\n        \nSpecifies the port to connect to when using the specified socket factory.\n\n        \nDefault port\n\n        \nValid port number\n\n    \n\n    \n\n        \nmail.pop3.ssl.checkserveridentity\n\n        \nIf set to true, check the server identity as specified by RFC 2595. \n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.ssl.trust\n\n        \nIf set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to '\n', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents.\n\n        \nDepends on the certificate the server presents\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.ssl.socketFactory\n\n        \nIf set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets.\n\n        \nNone\n\n        \nSSL Socket Factory\n\n    \n\n    \n\n        \nmail.pop3.ssl.checkserveridentity\n\n        \nIf set to true, check the server identity as specified by RFC 2595. \n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.ssl.trust\n\n        \n If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted. \n\n        \ntrust depends on the certificate the server presents.\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.ssl.socketFactory\n\n        \nIf set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets.\n\n        \nNone\n\n        \nSSL Socket Factory\n\n    \n\n    \n\n        \nmail.pop3.ssl.socketFactory.class\n\n        \nIf set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets. \n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.ssl.socketFactory.p\n\n        \nSpecifies the port to connect to when using the specified socket factory.\n\n        \n995\n\n        \nValid Integer\n\n    \n\n    \n\n        \nmail.pop3.ssl.protocols\n\n        \nSpecifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.starttls.enable\n\n        \nIf true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.starttls.required\n\n        \nIf true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.socks.host\n\n        \nSpecifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.socks.port\n\n        \nSpecifies the port number for the SOCKS5 proxy server.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.disabletop\n\n        \nIf set to true, the POP3 TOP command will not be used to fetch message headers. \n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.forgettopheaders\n\n        \nIf set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.filecache.enable\n\n        \nIf set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.filecache.dir\n\n        \nIf the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.cachewriteto\n\n        \nControls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.keepmessagecontent\n\n        \nIf this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method). \n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\n@source(type='email', @map(type='xml'), username='wso2mail', password='wso2Password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:das, from: wso2one@ , cc: wso2two, polling.interval='50000',action.after.processed='SEEN',content.type='text/html,)define stream inputStream (name string, age int, country string);\n\n\n\n\nFollowing example illustrates how to receive events in 'xml' format using email source. The email source polls the mail account in every 50 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term. In the example action after processes is defined as the 'SEEN', so that after processing the event, corresponding mail is mark as read.", 
            "title": "1.0.0-M8"
        }, 
        {
            "location": "/api/1.0.0-M8/#api-docs-v100-m8", 
            "text": "", 
            "title": "API Docs - v1.0.0-M8"
        }, 
        {
            "location": "/api/1.0.0-M8/#sink", 
            "text": "", 
            "title": "Sink"
        }, 
        {
            "location": "/api/1.0.0-M8/#email-sink", 
            "text": "The email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters).  Syntax  @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , @map(...)))  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         username \n         Username of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com). \n         \n         STRING \n         No \n         No \n     \n     \n         address \n         Address of the email account which is used to send emails. \n         \n         STRING \n         No \n         No \n     \n     \n         password \n         Password of the email account. \n         \n         STRING \n         No \n         No \n     \n     \n         host \n         Host name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account. \n         smtp.gmail.com \n         STRING \n         Yes \n         No \n     \n     \n         port \n         The port which is used to create the connection. \n         '465' the default value is only valid is ssl enable \n         INT \n         Yes \n         No \n     \n     \n         ssl.enable \n         Whether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection. \n         true \n         BOOL \n         Yes \n         No \n     \n     \n         auth \n         Whether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command. \n         true \n         BOOL \n         Yes \n         No \n     \n     \n         content.type \n         Content type can be either 'text/plain' or 'text/html'. \n         text/plain \n         STRING \n         Yes \n         No \n     \n     \n         subject \n         Subject of the mail which has to be send. \n         \n         STRING \n         No \n         Yes \n     \n     \n         to \n         Address of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list. \n         \n         STRING \n         No \n         Yes \n     \n     \n         cc \n         Address of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list. \n         None \n         STRING \n         Yes \n         No \n     \n     \n         bcc \n         Address of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list. \n         None \n         STRING \n         Yes \n         No \n       System Parameters  \n     \n         Name \n         Description \n         Default Value \n         Possible Parameters \n     \n     \n         mail.smtp.connectiontimeout \n         Socket connection timeout value in milliseconds.  \n         infinite timeout \n         Any Integer \n     \n     \n         mail.smtp.timeout \n         Socket I/O timeout value in milliseconds.  \n         infinite timeout \n         Any Integer \n     \n     \n         mail.smtp.from \n         Email address to use for SMTP MAIL command. This sets the envelope return address. \n         Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). \n         Valid email address \n     \n     \n         mail.smtp.localport \n         Local port number to bind to when creating the SMTP socket. \n         Defaults to the port number picked by the Socket class. \n         Any Integer \n     \n     \n         mail.smtp.ehlo \n         If false, do not attempt to sign on with the EHLO command. \n         true \n         true or false \n     \n     \n         mail.smtp.auth.login.disable \n         If true, prevents use of the AUTH LOGIN command. \n         false \n         true or false \n     \n     \n         mail.smtp.auth.plain.disable \n         If true, prevents use of the AUTH PLAIN command. \n         false \n         true or false \n     \n     \n         mail.smtp.auth.digest-md5.disable \n         If true, prevents use of the AUTH DIGEST-MD5 command. \n         false \n         true or false \n     \n     \n         mail.smtp.auth.ntlm.disable \n         If true, prevents use of the AUTH NTLM command \n         false \n         true or false \n     \n     \n         mail.smtp.auth.ntlm.domain \n         The NTLM authentication domain. \n         None \n         Valid NTLM authentication domain name \n     \n     \n         mail.smtp.auth.ntlm.flags \n         NTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details. \n         None \n         Valid NTLM protocol-specific flags. \n     \n     \n         mail.smtp.dsn.notify \n         The NOTIFY option to the RCPT command. \n         None \n         Either NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas). \n     \n     \n         mail.smtp.dsn.ret \n         The RET option to the MAIL command. \n         None \n         Either FULL or HDRS. \n     \n     \n         mail.smtp.sendpartial \n         If set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address. \n         false \n         true or false \n     \n     \n         mail.smtp.sasl.enable \n         If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. \n         false \n         true or false \n     \n     \n         mail.smtp.sasl.mechanisms \n         A space or comma separated list of SASL mechanism names to try to use. \n         None \n         \n     \n     \n         mail.smtp.sasl.authorizationid \n         The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. \n         username \n         Valid ID \n     \n     \n         mail.smtp.sasl.realm \n         The realm to use with DIGEST-MD5 authentication. \n         None \n         \n     \n     \n         mail.smtp.quitwait \n         If set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command. \n         false \n         true or false \n     \n     \n         mail.smtp.reportsuccess \n         If set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful. \n         false \n         true or false \n     \n     \n         mail.smtp.socketFactory \n         If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets. \n         None \n         Socket Factory \n     \n     \n         mail.smtp.socketFactory.class \n         If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets. \n         None \n         \n     \n     \n         mail.smtp.socketFactory.fallback \n         If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. \n         true \n         true or false \n     \n     \n         mail.smtp.socketFactory.port \n         Specifies the port to connect to when using the specified socket factory \n         25 \n         Valid port number \n     \n     \n         mail.smtp.ssl.protocols \n         Specifies the SSL protocols that will be enabled for SSL connections. \n         None \n         The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. \n     \n     \n         mail.smtp.starttls.enable \n         If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. \n         false \n         true or false \n     \n     \n         mail.smtp.starttls.required \n         If true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail. \n         false \n         true or false \n     \n     \n         mail.smtp.socks.host \n         Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. \n         None \n         \n     \n     \n         mail.smtp.socks.port \n         Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. \n         1080 \n         valid port number \n     \n     \n         mail.smtp.auth.ntlm.disable \n         If true, prevents use of the AUTH NTLM command \n         false \n         true or false \n     \n     \n         mail.smtp.mailextension \n         Extension string to append to the MAIL command. \n         None \n         \n     \n     \n         mail.smtp.userset \n         If set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue. \n         false \n         true or false \n       Examples  EXAMPLE 1  @sink(type='email', @map(type='json'), username='wso2', address='wso2@gmail.com',password='wso234',host='smtp.gmail.com',subject='Event from SP',to='towso2@gmail.com ,wso2two@gmail.com',cc='ccwso2@gmail.com')define stream inputStream (name string, age int, country string);  Following example illustrates how to publish a event using email sink. As in the example, it publishes events come from the inputStream in json format through email to given 'to' and 'cc' recipients.The email is sent through wso2@gmail.com email account via secure connection.", 
            "title": "email (Sink)"
        }, 
        {
            "location": "/api/1.0.0-M8/#source", 
            "text": "", 
            "title": "Source"
        }, 
        {
            "location": "/api/1.0.0-M8/#email-source", 
            "text": "Email source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store ,  https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters).  Syntax  @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...)))  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         username \n         user name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account. \n         \n         STRING \n         No \n         No \n     \n     \n         password \n         password of the email account \n         \n         STRING \n         No \n         No \n     \n     \n         store \n         Store type that used to receive emails. it can be either imap or pop3. \n         imap \n         STRING \n         Yes \n         No \n     \n     \n         host \n         Host name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable. \n         If store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'. \n         STRING \n         Yes \n         No \n     \n     \n         port \n         The port which is used to create the connection. \n         '993' the default value is valid only if store is imap and ssl enable \n         INT \n         Yes \n         No \n     \n     \n         folder \n         Name of the folder to fetch email. \n         INBOX \n         STRING \n         Yes \n         No \n     \n     \n         search.term \n         Option which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol. \n         None \n         STRING \n         Yes \n         No \n     \n     \n         polling.interval \n         Interval that email source should poll the account to check for new mails arrivals in seconds. \n         600 \n         LONG \n         Yes \n         No \n     \n     \n         action.after.processed \n         Action that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE \n         NONE \n         STRING \n         Yes \n         No \n     \n     \n         folder.to.move \n         The name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move. \n         \n         STRING \n         No \n         No \n     \n     \n         content.type \n         Content type of the email. It can be either 'text/plain' or 'text/html.' \n         text/plain \n         STRING \n         Yes \n         No \n     \n     \n         ssl.enable \n         If it is 'true' then use a secure port to establish the connection. The possible values are 'true or false. \n         true \n         BOOL \n         Yes \n         No \n       System Parameters  \n     \n         Name \n         Description \n         Default Value \n         Possible Parameters \n     \n     \n         mail.imap.partialfetch \n         Controls whether the IMAP partial-fetch capability should be used \n         true \n         true or false \n     \n     \n         mail.imap.fetchsize \n         Partial fetch size in bytes. \n         16K \n         value in bytes \n     \n     \n         mail.imap.peek \n         If set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage. \n         false \n         true or false \n     \n     \n         mail.imap.connectiontimeout \n         Socket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket. \n         infinity timeout \n         Any Integer value \n     \n     \n         mail.imap.timeout \n         Socket read timeout value in milliseconds. This timeout is implemented by java.net.Socket. \n         infinity timeout \n         Any Integer value \n     \n     \n         mail.imap.writetimeout \n         Socket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection. \n         infinity timeout \n         Any Integer value \n     \n     \n         mail.imap.statuscachetimeout \n         Timeout value in milliseconds for cache of STATUS command response. \n         1000ms \n         Time out in miliseconds \n     \n     \n         mail.imap.appendbuffersize \n         Maximum size of a message to buffer in memory when appending to an IMAP folder. \n         None \n         Any Integer value \n     \n     \n         mail.imap.connectionpoolsize \n         Maximum number of available connections in the connection pool. \n         1 \n         Any Integer value \n     \n     \n         mail.imap.connectionpooltimeout \n         Timeout value in milliseconds for connection pool connections.  \n         45000ms \n         Any Integer \n     \n     \n         mail.imap.separatestoreconnection \n         Flag to indicate whether to use a dedicated store connection for store commands. \n         true \n         true or false \n     \n     \n         mail.imap.auth.login.disable \n         If true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command. \n         false \n         true or false \n     \n     \n         mail.imap.auth.plain.disable \n         If true, prevents use of the AUTHENTICATE PLAIN command. \n         false \n         true or false \n     \n     \n         mail.imap.auth.ntlm.disable \n         If true, prevents use of the AUTHENTICATE NTLM command. \n         false \n         true or false \n     \n     \n         mail.imap.proxyauth.user \n         If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property. \n         None \n         Valid string value \n     \n     \n         mail.imap.localaddress \n         Local address (host name) to bind to when creating the IMAP socket. \n         Defaults to the address picked by the Socket class. \n         Valid string value \n     \n     \n         mail.imap.localport \n         Local port number to bind to when creating the IMAP socket. \n         Defaults to the port number picked by the Socket class. \n         Valid String value \n     \n     \n         mail.imap.sasl.enable \n         If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. \n         false \n         true or false \n     \n     \n         mail.imap.sasl.mechanisms \n         A space or comma separated list of SASL mechanism names to try to use. \n         None \n         Valid string value \n     \n     \n         mail.imap.sasl.authorizationid \n         The authorization ID to use in the SASL authentication. \n         If not set, the authentication ID (user name) is used. \n         Valid string value \n     \n     \n         mail.imap.sasl.realm \n         The realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5. \n         None \n         Valid string value \n     \n     \n         mail.imap.auth.ntlm.domain \n         The NTLM authentication domain. \n         None \n         Valid string value \n     \n     \n         The NTLM authentication domain. \n         NTLM protocol-specific flags. \n         None \n         Valid integer value \n     \n     \n         mail.imap.socketFactory \n         If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets. \n         None \n         Valid SocketFactory \n     \n     \n         mail.imap.socketFactory.class \n         If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets. \n         None \n         Valid string \n     \n     \n         mail.imap.socketFactory.fallback \n         If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class.  \n         true \n         true or false \n     \n     \n         mail.imap.socketFactory.port \n         Specifies the port to connect to when using the specified socket factory. Default port is used when not set. \n         143 \n         Valid Integer \n     \n     \n         mail.imap.ssl.checkserveridentity \n         If set to true, check the server identity as specified by RFC 2595. \n         false \n         true or false \n     \n     \n         mail.imap.ssl.trust \n         If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. \n         None \n         Valid String \n     \n     \n         mail.imap.ssl.socketFactory \n         If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets. \n         None \n         SSL Socket Factory \n     \n     \n         mail.imap.ssl.socketFactory.class \n         If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets. \n         None \n         Valid String \n     \n     \n         mail.imap.ssl.socketFactory.port \n         Specifies the port to connect to when using the specified socket factory. \n         the default port will be used-993 \n         valid port number \n     \n     \n         mail.imap.ssl.protocols \n         Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. \n         None \n         Valid string \n     \n     \n         mail.imap.starttls.enable \n         If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. \n         false \n         true or false \n     \n     \n         mail.imap.socks.host \n         Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. \n         None \n         Valid String \n     \n     \n         mail.imap.socks.port \n         Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. \n         1080 \n         Valid String \n     \n     \n         mail.imap.minidletime \n         This property sets the delay in milliseconds. \n         10 milliseconds \n         time in seconds (Integer) \n     \n     \n         mail.imap.enableimapevents \n         Enable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string. \n         false \n         true or false \n     \n     \n         mail.imap.folder.class \n         Class name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store) \n         None \n         Valid String \n     \n     \n         mail.pop3.connectiontimeout \n         Socket connection timeout value in milliseconds. \n         Infinite timeout \n         Integer value \n     \n     \n         mail.pop3.timeout \n         Socket I/O timeout value in milliseconds.  \n         Infinite timeout \n         Integer value \n     \n     \n         mail.pop3.message.class \n         Class name of a subclass of com.sun.mail.pop3.POP3Message \n         None \n         Valid String \n     \n     \n         mail.pop3.localaddress \n         Local address (host name) to bind to when creating the POP3 socket. \n         Defaults to the address picked by the Socket class. \n         Valid String \n     \n     \n         mail.pop3.localport \n         Local port number to bind to when creating the POP3 socket. \n         Defaults to the port number picked by the Socket class. \n         Valid port number \n     \n     \n         mail.pop3.apop.enable \n         If set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password. \n         false \n         true or false \n     \n     \n         mail.pop3.socketFactory \n         If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets. \n         None \n         Socket Factory \n     \n     \n         mail.pop3.socketFactory.class \n         If set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets. \n         None \n         Valid String \n     \n     \n         mail.pop3.socketFactory.fallback \n         If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. \n         false \n         true or false \n     \n     \n         mail.pop3.socketFactory.port \n         Specifies the port to connect to when using the specified socket factory. \n         Default port \n         Valid port number \n     \n     \n         mail.pop3.ssl.checkserveridentity \n         If set to true, check the server identity as specified by RFC 2595.  \n         false \n         true or false \n     \n     \n         mail.pop3.ssl.trust \n         If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. \n         Depends on the certificate the server presents \n         Valid String \n     \n     \n         mail.pop3.ssl.socketFactory \n         If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. \n         None \n         SSL Socket Factory \n     \n     \n         mail.pop3.ssl.checkserveridentity \n         If set to true, check the server identity as specified by RFC 2595.  \n         false \n         true or false \n     \n     \n         mail.pop3.ssl.trust \n          If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.  \n         trust depends on the certificate the server presents. \n         Valid String \n     \n     \n         mail.pop3.ssl.socketFactory \n         If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. \n         None \n         SSL Socket Factory \n     \n     \n         mail.pop3.ssl.socketFactory.class \n         If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets.  \n         None \n         Valid String \n     \n     \n         mail.pop3.ssl.socketFactory.p \n         Specifies the port to connect to when using the specified socket factory. \n         995 \n         Valid Integer \n     \n     \n         mail.pop3.ssl.protocols \n         Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. \n         None \n         Valid String \n     \n     \n         mail.pop3.starttls.enable \n         If true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands \n         false \n         true or false \n     \n     \n         mail.pop3.starttls.required \n         If true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail. \n         false \n         true or false \n     \n     \n         mail.pop3.socks.host \n         Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. \n         None \n         Valid String \n     \n     \n         mail.pop3.socks.port \n         Specifies the port number for the SOCKS5 proxy server. \n         None \n         Valid String \n     \n     \n         mail.pop3.disabletop \n         If set to true, the POP3 TOP command will not be used to fetch message headers.  \n         false \n         true or false \n     \n     \n         mail.pop3.forgettopheaders \n         If set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command. \n         false \n         true or false \n     \n     \n         mail.pop3.filecache.enable \n         If set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. \n         false \n         true or false \n     \n     \n         mail.pop3.filecache.dir \n         If the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files. \n         None \n         Valid String \n     \n     \n         mail.pop3.cachewriteto \n         Controls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached. \n         false \n         true or false \n     \n     \n         mail.pop3.keepmessagecontent \n         If this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method).  \n         false \n         true or false \n       Examples  EXAMPLE 1  @source(type='email', @map(type='xml'), username='wso2mail', password='wso2Password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:das, from: wso2one@ , cc: wso2two, polling.interval='50000',action.after.processed='SEEN',content.type='text/html,)define stream inputStream (name string, age int, country string);  Following example illustrates how to receive events in 'xml' format using email source. The email source polls the mail account in every 50 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term. In the example action after processes is defined as the 'SEEN', so that after processing the event, corresponding mail is mark as read.", 
            "title": "email (Source)"
        }, 
        {
            "location": "/api/1.0.0-M7/", 
            "text": "API Docs - v1.0.0-M7\n\n\nSource\n\n\nemail \n(Source)\n\n\nEmail source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store ,  https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters).\n\n\n\nSyntax\n\n\n@source(type=\nemail\n, username=\nSTRING\n, password=\nSTRING\n, store=\nSTRING\n, host=\nSTRING\n, port=\nINT\n, folder=\nSTRING\n, search.term=\nSTRING\n, polling.interval=\nLONG\n, action.after.processed=\nSTRING\n, folder.to.move=\nSTRING\n, content.type=\nSTRING\n, ssl.enable=\nBOOL\n, @map(...)))\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \nusername\n\n        \nuser name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \npassword\n\n        \npassword of the email account\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \nstore\n\n        \nStore type that used to receive emails. it can be either imap or pop3.\n\n        \nimap\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nhost\n\n        \nHost name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable.\n\n        \nIf store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'.\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nport\n\n        \nThe port which is used to create the connection.\n\n        \n'993' the default value is valid only if store is imap and ssl enable\n\n        \nINT\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nfolder\n\n        \nName of the folder to fetch email.\n\n        \nINBOX\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nsearch.term\n\n        \nOption which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol.\n\n        \nNone\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \npolling.interval\n\n        \nInterval that email source should poll the account to check for new mails arrivals in seconds.\n\n        \n600\n\n        \nLONG\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \naction.after.processed\n\n        \nAction that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE\n\n        \nNONE\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nfolder.to.move\n\n        \nThe name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \ncontent.type\n\n        \nContent type of the email. It can be either 'text/plain' or 'text/html.'\n\n        \ntext/plain\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nssl.enable\n\n        \nIf it is 'true' then use a secure port to establish the connection. The possible values are 'true or false.\n\n        \ntrue\n\n        \nBOOL\n\n        \nYes\n\n        \nNo\n\n    \n\n\n\n\nSystem Parameters\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Parameters\n\n    \n\n    \n\n        \nmail.imap.partialfetch\n\n        \nControls whether the IMAP partial-fetch capability should be used\n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.fetchsize\n\n        \nPartial fetch size in bytes.\n\n        \n16K\n\n        \nvalue in bytes\n\n    \n\n    \n\n        \nmail.imap.peek\n\n        \nIf set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.connectiontimeout\n\n        \nSocket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket.\n\n        \ninfinity timeout\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.timeout\n\n        \nSocket read timeout value in milliseconds. This timeout is implemented by java.net.Socket.\n\n        \ninfinity timeout\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.writetimeout\n\n        \nSocket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection.\n\n        \ninfinity timeout\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.statuscachetimeout\n\n        \nTimeout value in milliseconds for cache of STATUS command response.\n\n        \n1000ms\n\n        \nTime out in miliseconds\n\n    \n\n    \n\n        \nmail.imap.appendbuffersize\n\n        \nMaximum size of a message to buffer in memory when appending to an IMAP folder.\n\n        \nNone\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.connectionpoolsize\n\n        \nMaximum number of available connections in the connection pool.\n\n        \n1\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.connectionpooltimeout\n\n        \nTimeout value in milliseconds for connection pool connections. \n\n        \n45000ms\n\n        \nAny Integer\n\n    \n\n    \n\n        \nmail.imap.separatestoreconnection\n\n        \nFlag to indicate whether to use a dedicated store connection for store commands.\n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.auth.login.disable\n\n        \nIf true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.auth.plain.disable\n\n        \nIf true, prevents use of the AUTHENTICATE PLAIN command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.auth.ntlm.disable\n\n        \nIf true, prevents use of the AUTHENTICATE NTLM command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.proxyauth.user\n\n        \nIf the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property.\n\n        \nNone\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.localaddress\n\n        \nLocal address (host name) to bind to when creating the IMAP socket.\n\n        \nDefaults to the address picked by the Socket class.\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.localport\n\n        \nLocal port number to bind to when creating the IMAP socket.\n\n        \nDefaults to the port number picked by the Socket class.\n\n        \nValid String value\n\n    \n\n    \n\n        \nmail.imap.sasl.enable\n\n        \nIf set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.sasl.mechanisms\n\n        \nA space or comma separated list of SASL mechanism names to try to use.\n\n        \nNone\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.sasl.authorizationid\n\n        \nThe authorization ID to use in the SASL authentication.\n\n        \nIf not set, the authentication ID (user name) is used.\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.sasl.realm\n\n        \nThe realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5.\n\n        \nNone\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.auth.ntlm.domain\n\n        \nThe NTLM authentication domain.\n\n        \nNone\n\n        \nValid string value\n\n    \n\n    \n\n        \nThe NTLM authentication domain.\n\n        \nNTLM protocol-specific flags.\n\n        \nNone\n\n        \nValid integer value\n\n    \n\n    \n\n        \nmail.imap.socketFactory\n\n        \nIf set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets.\n\n        \nNone\n\n        \nValid SocketFactory\n\n    \n\n    \n\n        \nmail.imap.socketFactory.class\n\n        \nIf set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets.\n\n        \nNone\n\n        \nValid string\n\n    \n\n    \n\n        \nmail.imap.socketFactory.fallback\n\n        \nIf set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. \n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.socketFactory.port\n\n        \nSpecifies the port to connect to when using the specified socket factory. Default port is used when not set.\n\n        \n143\n\n        \nValid Integer\n\n    \n\n    \n\n        \nmail.imap.ssl.checkserveridentity\n\n        \nIf set to true, check the server identity as specified by RFC 2595.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.ssl.trust\n\n        \nIf set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '\n', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.imap.ssl.socketFactory\n\n        \nIf set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets.\n\n        \nNone\n\n        \nSSL Socket Factory\n\n    \n\n    \n\n        \nmail.imap.ssl.socketFactory.class\n\n        \nIf set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.imap.ssl.socketFactory.port\n\n        \nSpecifies the port to connect to when using the specified socket factory.\n\n        \nthe default port will be used-993\n\n        \nvalid port number\n\n    \n\n    \n\n        \nmail.imap.ssl.protocols\n\n        \nSpecifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method.\n\n        \nNone\n\n        \nValid string\n\n    \n\n    \n\n        \nmail.imap.starttls.enable\n\n        \nIf true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.socks.host\n\n        \nSpecifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.imap.socks.port\n\n        \nSpecifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080.\n\n        \n1080\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.imap.minidletime\n\n        \nThis property sets the delay in milliseconds.\n\n        \n10 milliseconds\n\n        \ntime in seconds (Integer)\n\n    \n\n    \n\n        \nmail.imap.enableimapevents\n\n        \nEnable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.folder.class\n\n        \nClass name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store)\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.connectiontimeout\n\n        \nSocket connection timeout value in milliseconds.\n\n        \nInfinite timeout\n\n        \nInteger value\n\n    \n\n    \n\n        \nmail.pop3.timeout\n\n        \nSocket I/O timeout value in milliseconds. \n\n        \nInfinite timeout\n\n        \nInteger value\n\n    \n\n    \n\n        \nmail.pop3.message.class\n\n        \nClass name of a subclass of com.sun.mail.pop3.POP3Message\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.localaddress\n\n        \nLocal address (host name) to bind to when creating the POP3 socket.\n\n        \nDefaults to the address picked by the Socket class.\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.localport\n\n        \nLocal port number to bind to when creating the POP3 socket.\n\n        \nDefaults to the port number picked by the Socket class.\n\n        \nValid port number\n\n    \n\n    \n\n        \nmail.pop3.apop.enable\n\n        \nIf set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.socketFactory\n\n        \nIf set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets.\n\n        \nNone\n\n        \nSocket Factory\n\n    \n\n    \n\n        \nmail.pop3.socketFactory.class\n\n        \nIf set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.socketFactory.fallback\n\n        \nIf set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.socketFactory.port\n\n        \nSpecifies the port to connect to when using the specified socket factory.\n\n        \nDefault port\n\n        \nValid port number\n\n    \n\n    \n\n        \nmail.pop3.ssl.checkserveridentity\n\n        \nIf set to true, check the server identity as specified by RFC 2595. \n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.ssl.trust\n\n        \nIf set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to '\n', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents.\n\n        \nDepends on the certificate the server presents\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.ssl.socketFactory\n\n        \nIf set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets.\n\n        \nNone\n\n        \nSSL Socket Factory\n\n    \n\n    \n\n        \nmail.pop3.ssl.checkserveridentity\n\n        \nIf set to true, check the server identity as specified by RFC 2595. \n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.ssl.trust\n\n        \n If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted. \n\n        \ntrust depends on the certificate the server presents.\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.ssl.socketFactory\n\n        \nIf set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets.\n\n        \nNone\n\n        \nSSL Socket Factory\n\n    \n\n    \n\n        \nmail.pop3.ssl.socketFactory.class\n\n        \nIf set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets. \n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.ssl.socketFactory.p\n\n        \nSpecifies the port to connect to when using the specified socket factory.\n\n        \n995\n\n        \nValid Integer\n\n    \n\n    \n\n        \nmail.pop3.ssl.protocols\n\n        \nSpecifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.starttls.enable\n\n        \nIf true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.starttls.required\n\n        \nIf true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.socks.host\n\n        \nSpecifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.socks.port\n\n        \nSpecifies the port number for the SOCKS5 proxy server.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.disabletop\n\n        \nIf set to true, the POP3 TOP command will not be used to fetch message headers. \n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.forgettopheaders\n\n        \nIf set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.filecache.enable\n\n        \nIf set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.filecache.dir\n\n        \nIf the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.cachewriteto\n\n        \nControls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.keepmessagecontent\n\n        \nIf this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method). \n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\n@source(type='email', @map(type='xml'), username='wso2mail', password='wso2Password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:das, from: wso2one@ , cc: wso2two, polling.interval='50000',action.after.processed='SEEN',content.type='text/html,)define stream inputStream (name string, age int, country string);\n\n\n\n\nFollowing example illustrates how to receive events in 'xml' format using email source. The email source polls the mail account in every 50 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term. In the example action after processes is defined as the 'SEEN', so that after processing the event, corresponding mail is mark as read.\n\n\n\nSink\n\n\nemail \n(Sink)\n\n\nThe email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters).\n\n\n\nSyntax\n\n\n@sink(type=\nemail\n, username=\nSTRING\n, address=\nSTRING\n, password=\nSTRING\n, host=\nSTRING\n, port=\nINT\n, ssl.enable=\nBOOL\n, auth=\nBOOL\n, content.type=\nSTRING\n, subject=\nSTRING\n, to=\nSTRING\n, cc=\nSTRING\n, bcc=\nSTRING\n, @map(...)))\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \nusername\n\n        \nUsername of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com).\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \naddress\n\n        \nAddress of the email account which is used to send emails.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \npassword\n\n        \nPassword of the email account.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \nhost\n\n        \nHost name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account.\n\n        \nsmtp.gmail.com\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nport\n\n        \nThe port which is used to create the connection.\n\n        \n'465' the default value is only valid is ssl enable\n\n        \nINT\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nssl.enable\n\n        \nWhether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection.\n\n        \ntrue\n\n        \nBOOL\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nauth\n\n        \nWhether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command.\n\n        \ntrue\n\n        \nBOOL\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \ncontent.type\n\n        \nContent type can be either 'text/plain' or 'text/html'.\n\n        \ntext/plain\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nsubject\n\n        \nSubject of the mail which has to be send.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nYes\n\n    \n\n    \n\n        \nto\n\n        \nAddress of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nYes\n\n    \n\n    \n\n        \ncc\n\n        \nAddress of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list.\n\n        \nNone\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nbcc\n\n        \nAddress of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list.\n\n        \nNone\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n\n\n\nSystem Parameters\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Parameters\n\n    \n\n    \n\n        \nmail.smtp.connectiontimeout\n\n        \nSocket connection timeout value in milliseconds. \n\n        \ninfinite timeout\n\n        \nAny Integer\n\n    \n\n    \n\n        \nmail.smtp.timeout\n\n        \nSocket I/O timeout value in milliseconds. \n\n        \ninfinite timeout\n\n        \nAny Integer\n\n    \n\n    \n\n        \nmail.smtp.from\n\n        \nEmail address to use for SMTP MAIL command. This sets the envelope return address.\n\n        \nDefaults to msg.getFrom() or InternetAddress.getLocalAddress().\n\n        \nValid email address\n\n    \n\n    \n\n        \nmail.smtp.localport\n\n        \nLocal port number to bind to when creating the SMTP socket.\n\n        \nDefaults to the port number picked by the Socket class.\n\n        \nAny Integer\n\n    \n\n    \n\n        \nmail.smtp.ehlo\n\n        \nIf false, do not attempt to sign on with the EHLO command.\n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.login.disable\n\n        \nIf true, prevents use of the AUTH LOGIN command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.plain.disable\n\n        \nIf true, prevents use of the AUTH PLAIN command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.digest-md5.disable\n\n        \nIf true, prevents use of the AUTH DIGEST-MD5 command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.ntlm.disable\n\n        \nIf true, prevents use of the AUTH NTLM command\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.ntlm.domain\n\n        \nThe NTLM authentication domain.\n\n        \nNone\n\n        \nValid NTLM authentication domain name\n\n    \n\n    \n\n        \nmail.smtp.auth.ntlm.flags\n\n        \nNTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details.\n\n        \nNone\n\n        \nValid NTLM protocol-specific flags.\n\n    \n\n    \n\n        \nmail.smtp.dsn.notify\n\n        \nThe NOTIFY option to the RCPT command.\n\n        \nNone\n\n        \nEither NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas).\n\n    \n\n    \n\n        \nmail.smtp.dsn.ret\n\n        \nThe RET option to the MAIL command.\n\n        \nNone\n\n        \nEither FULL or HDRS.\n\n    \n\n    \n\n        \nmail.smtp.sendpartial\n\n        \nIf set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.sasl.enable\n\n        \nIf set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.sasl.mechanisms\n\n        \nA space or comma separated list of SASL mechanism names to try to use.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.sasl.authorizationid\n\n        \nThe authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used.\n\n        \nusername\n\n        \nValid ID\n\n    \n\n    \n\n        \nmail.smtp.sasl.realm\n\n        \nThe realm to use with DIGEST-MD5 authentication.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.quitwait\n\n        \nIf set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.reportsuccess\n\n        \nIf set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.socketFactory\n\n        \nIf set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets.\n\n        \nNone\n\n        \nSocket Factory\n\n    \n\n    \n\n        \nmail.smtp.socketFactory.class\n\n        \nIf set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.socketFactory.fallback\n\n        \nIf set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class.\n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.socketFactory.port\n\n        \nSpecifies the port to connect to when using the specified socket factory\n\n        \n25\n\n        \nValid port number\n\n    \n\n    \n\n        \nmail.smtp.ssl.protocols\n\n        \nSpecifies the SSL protocols that will be enabled for SSL connections.\n\n        \nNone\n\n        \nThe property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method.\n\n    \n\n    \n\n        \nmail.smtp.starttls.enable\n\n        \nIf true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.starttls.required\n\n        \nIf true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.socks.host\n\n        \nSpecifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.socks.port\n\n        \nSpecifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080.\n\n        \n1080\n\n        \nvalid port number\n\n    \n\n    \n\n        \nmail.smtp.auth.ntlm.disable\n\n        \nIf true, prevents use of the AUTH NTLM command\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.mailextension\n\n        \nExtension string to append to the MAIL command.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.userset\n\n        \nIf set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\n@sink(type='email', @map(type='json'), username='wso2', address='wso2@gmail.com',password='wso234',host='smtp.gmail.com',subject='Event from SP',to='towso2@gmail.com ,wso2two@gmail.com',cc='ccwso2@gmail.com')define stream inputStream (name string, age int, country string);\n\n\n\n\nFollowing example illustrates how to publish a event using email sink. As in the example, it publishes events come from the inputStream in json format through email to given 'to' and 'cc' recipients.The email is sent through wso2@gmail.com email account via secure connection.", 
            "title": "1.0.0-M7"
        }, 
        {
            "location": "/api/1.0.0-M7/#api-docs-v100-m7", 
            "text": "", 
            "title": "API Docs - v1.0.0-M7"
        }, 
        {
            "location": "/api/1.0.0-M7/#source", 
            "text": "", 
            "title": "Source"
        }, 
        {
            "location": "/api/1.0.0-M7/#email-source", 
            "text": "Email source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store ,  https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters).  Syntax  @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...)))  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         username \n         user name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account. \n         \n         STRING \n         No \n         No \n     \n     \n         password \n         password of the email account \n         \n         STRING \n         No \n         No \n     \n     \n         store \n         Store type that used to receive emails. it can be either imap or pop3. \n         imap \n         STRING \n         Yes \n         No \n     \n     \n         host \n         Host name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable. \n         If store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'. \n         STRING \n         Yes \n         No \n     \n     \n         port \n         The port which is used to create the connection. \n         '993' the default value is valid only if store is imap and ssl enable \n         INT \n         Yes \n         No \n     \n     \n         folder \n         Name of the folder to fetch email. \n         INBOX \n         STRING \n         Yes \n         No \n     \n     \n         search.term \n         Option which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol. \n         None \n         STRING \n         Yes \n         No \n     \n     \n         polling.interval \n         Interval that email source should poll the account to check for new mails arrivals in seconds. \n         600 \n         LONG \n         Yes \n         No \n     \n     \n         action.after.processed \n         Action that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE \n         NONE \n         STRING \n         Yes \n         No \n     \n     \n         folder.to.move \n         The name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move. \n         \n         STRING \n         No \n         No \n     \n     \n         content.type \n         Content type of the email. It can be either 'text/plain' or 'text/html.' \n         text/plain \n         STRING \n         Yes \n         No \n     \n     \n         ssl.enable \n         If it is 'true' then use a secure port to establish the connection. The possible values are 'true or false. \n         true \n         BOOL \n         Yes \n         No \n       System Parameters  \n     \n         Name \n         Description \n         Default Value \n         Possible Parameters \n     \n     \n         mail.imap.partialfetch \n         Controls whether the IMAP partial-fetch capability should be used \n         true \n         true or false \n     \n     \n         mail.imap.fetchsize \n         Partial fetch size in bytes. \n         16K \n         value in bytes \n     \n     \n         mail.imap.peek \n         If set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage. \n         false \n         true or false \n     \n     \n         mail.imap.connectiontimeout \n         Socket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket. \n         infinity timeout \n         Any Integer value \n     \n     \n         mail.imap.timeout \n         Socket read timeout value in milliseconds. This timeout is implemented by java.net.Socket. \n         infinity timeout \n         Any Integer value \n     \n     \n         mail.imap.writetimeout \n         Socket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection. \n         infinity timeout \n         Any Integer value \n     \n     \n         mail.imap.statuscachetimeout \n         Timeout value in milliseconds for cache of STATUS command response. \n         1000ms \n         Time out in miliseconds \n     \n     \n         mail.imap.appendbuffersize \n         Maximum size of a message to buffer in memory when appending to an IMAP folder. \n         None \n         Any Integer value \n     \n     \n         mail.imap.connectionpoolsize \n         Maximum number of available connections in the connection pool. \n         1 \n         Any Integer value \n     \n     \n         mail.imap.connectionpooltimeout \n         Timeout value in milliseconds for connection pool connections.  \n         45000ms \n         Any Integer \n     \n     \n         mail.imap.separatestoreconnection \n         Flag to indicate whether to use a dedicated store connection for store commands. \n         true \n         true or false \n     \n     \n         mail.imap.auth.login.disable \n         If true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command. \n         false \n         true or false \n     \n     \n         mail.imap.auth.plain.disable \n         If true, prevents use of the AUTHENTICATE PLAIN command. \n         false \n         true or false \n     \n     \n         mail.imap.auth.ntlm.disable \n         If true, prevents use of the AUTHENTICATE NTLM command. \n         false \n         true or false \n     \n     \n         mail.imap.proxyauth.user \n         If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property. \n         None \n         Valid string value \n     \n     \n         mail.imap.localaddress \n         Local address (host name) to bind to when creating the IMAP socket. \n         Defaults to the address picked by the Socket class. \n         Valid string value \n     \n     \n         mail.imap.localport \n         Local port number to bind to when creating the IMAP socket. \n         Defaults to the port number picked by the Socket class. \n         Valid String value \n     \n     \n         mail.imap.sasl.enable \n         If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. \n         false \n         true or false \n     \n     \n         mail.imap.sasl.mechanisms \n         A space or comma separated list of SASL mechanism names to try to use. \n         None \n         Valid string value \n     \n     \n         mail.imap.sasl.authorizationid \n         The authorization ID to use in the SASL authentication. \n         If not set, the authentication ID (user name) is used. \n         Valid string value \n     \n     \n         mail.imap.sasl.realm \n         The realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5. \n         None \n         Valid string value \n     \n     \n         mail.imap.auth.ntlm.domain \n         The NTLM authentication domain. \n         None \n         Valid string value \n     \n     \n         The NTLM authentication domain. \n         NTLM protocol-specific flags. \n         None \n         Valid integer value \n     \n     \n         mail.imap.socketFactory \n         If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets. \n         None \n         Valid SocketFactory \n     \n     \n         mail.imap.socketFactory.class \n         If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets. \n         None \n         Valid string \n     \n     \n         mail.imap.socketFactory.fallback \n         If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class.  \n         true \n         true or false \n     \n     \n         mail.imap.socketFactory.port \n         Specifies the port to connect to when using the specified socket factory. Default port is used when not set. \n         143 \n         Valid Integer \n     \n     \n         mail.imap.ssl.checkserveridentity \n         If set to true, check the server identity as specified by RFC 2595. \n         false \n         true or false \n     \n     \n         mail.imap.ssl.trust \n         If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. \n         None \n         Valid String \n     \n     \n         mail.imap.ssl.socketFactory \n         If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets. \n         None \n         SSL Socket Factory \n     \n     \n         mail.imap.ssl.socketFactory.class \n         If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets. \n         None \n         Valid String \n     \n     \n         mail.imap.ssl.socketFactory.port \n         Specifies the port to connect to when using the specified socket factory. \n         the default port will be used-993 \n         valid port number \n     \n     \n         mail.imap.ssl.protocols \n         Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. \n         None \n         Valid string \n     \n     \n         mail.imap.starttls.enable \n         If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. \n         false \n         true or false \n     \n     \n         mail.imap.socks.host \n         Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. \n         None \n         Valid String \n     \n     \n         mail.imap.socks.port \n         Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. \n         1080 \n         Valid String \n     \n     \n         mail.imap.minidletime \n         This property sets the delay in milliseconds. \n         10 milliseconds \n         time in seconds (Integer) \n     \n     \n         mail.imap.enableimapevents \n         Enable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string. \n         false \n         true or false \n     \n     \n         mail.imap.folder.class \n         Class name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store) \n         None \n         Valid String \n     \n     \n         mail.pop3.connectiontimeout \n         Socket connection timeout value in milliseconds. \n         Infinite timeout \n         Integer value \n     \n     \n         mail.pop3.timeout \n         Socket I/O timeout value in milliseconds.  \n         Infinite timeout \n         Integer value \n     \n     \n         mail.pop3.message.class \n         Class name of a subclass of com.sun.mail.pop3.POP3Message \n         None \n         Valid String \n     \n     \n         mail.pop3.localaddress \n         Local address (host name) to bind to when creating the POP3 socket. \n         Defaults to the address picked by the Socket class. \n         Valid String \n     \n     \n         mail.pop3.localport \n         Local port number to bind to when creating the POP3 socket. \n         Defaults to the port number picked by the Socket class. \n         Valid port number \n     \n     \n         mail.pop3.apop.enable \n         If set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password. \n         false \n         true or false \n     \n     \n         mail.pop3.socketFactory \n         If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets. \n         None \n         Socket Factory \n     \n     \n         mail.pop3.socketFactory.class \n         If set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets. \n         None \n         Valid String \n     \n     \n         mail.pop3.socketFactory.fallback \n         If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. \n         false \n         true or false \n     \n     \n         mail.pop3.socketFactory.port \n         Specifies the port to connect to when using the specified socket factory. \n         Default port \n         Valid port number \n     \n     \n         mail.pop3.ssl.checkserveridentity \n         If set to true, check the server identity as specified by RFC 2595.  \n         false \n         true or false \n     \n     \n         mail.pop3.ssl.trust \n         If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. \n         Depends on the certificate the server presents \n         Valid String \n     \n     \n         mail.pop3.ssl.socketFactory \n         If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. \n         None \n         SSL Socket Factory \n     \n     \n         mail.pop3.ssl.checkserveridentity \n         If set to true, check the server identity as specified by RFC 2595.  \n         false \n         true or false \n     \n     \n         mail.pop3.ssl.trust \n          If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.  \n         trust depends on the certificate the server presents. \n         Valid String \n     \n     \n         mail.pop3.ssl.socketFactory \n         If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. \n         None \n         SSL Socket Factory \n     \n     \n         mail.pop3.ssl.socketFactory.class \n         If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets.  \n         None \n         Valid String \n     \n     \n         mail.pop3.ssl.socketFactory.p \n         Specifies the port to connect to when using the specified socket factory. \n         995 \n         Valid Integer \n     \n     \n         mail.pop3.ssl.protocols \n         Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. \n         None \n         Valid String \n     \n     \n         mail.pop3.starttls.enable \n         If true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands \n         false \n         true or false \n     \n     \n         mail.pop3.starttls.required \n         If true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail. \n         false \n         true or false \n     \n     \n         mail.pop3.socks.host \n         Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. \n         None \n         Valid String \n     \n     \n         mail.pop3.socks.port \n         Specifies the port number for the SOCKS5 proxy server. \n         None \n         Valid String \n     \n     \n         mail.pop3.disabletop \n         If set to true, the POP3 TOP command will not be used to fetch message headers.  \n         false \n         true or false \n     \n     \n         mail.pop3.forgettopheaders \n         If set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command. \n         false \n         true or false \n     \n     \n         mail.pop3.filecache.enable \n         If set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. \n         false \n         true or false \n     \n     \n         mail.pop3.filecache.dir \n         If the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files. \n         None \n         Valid String \n     \n     \n         mail.pop3.cachewriteto \n         Controls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached. \n         false \n         true or false \n     \n     \n         mail.pop3.keepmessagecontent \n         If this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method).  \n         false \n         true or false \n       Examples  EXAMPLE 1  @source(type='email', @map(type='xml'), username='wso2mail', password='wso2Password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:das, from: wso2one@ , cc: wso2two, polling.interval='50000',action.after.processed='SEEN',content.type='text/html,)define stream inputStream (name string, age int, country string);  Following example illustrates how to receive events in 'xml' format using email source. The email source polls the mail account in every 50 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term. In the example action after processes is defined as the 'SEEN', so that after processing the event, corresponding mail is mark as read.", 
            "title": "email (Source)"
        }, 
        {
            "location": "/api/1.0.0-M7/#sink", 
            "text": "", 
            "title": "Sink"
        }, 
        {
            "location": "/api/1.0.0-M7/#email-sink", 
            "text": "The email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters).  Syntax  @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , @map(...)))  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         username \n         Username of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com). \n         \n         STRING \n         No \n         No \n     \n     \n         address \n         Address of the email account which is used to send emails. \n         \n         STRING \n         No \n         No \n     \n     \n         password \n         Password of the email account. \n         \n         STRING \n         No \n         No \n     \n     \n         host \n         Host name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account. \n         smtp.gmail.com \n         STRING \n         Yes \n         No \n     \n     \n         port \n         The port which is used to create the connection. \n         '465' the default value is only valid is ssl enable \n         INT \n         Yes \n         No \n     \n     \n         ssl.enable \n         Whether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection. \n         true \n         BOOL \n         Yes \n         No \n     \n     \n         auth \n         Whether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command. \n         true \n         BOOL \n         Yes \n         No \n     \n     \n         content.type \n         Content type can be either 'text/plain' or 'text/html'. \n         text/plain \n         STRING \n         Yes \n         No \n     \n     \n         subject \n         Subject of the mail which has to be send. \n         \n         STRING \n         No \n         Yes \n     \n     \n         to \n         Address of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list. \n         \n         STRING \n         No \n         Yes \n     \n     \n         cc \n         Address of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list. \n         None \n         STRING \n         Yes \n         No \n     \n     \n         bcc \n         Address of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list. \n         None \n         STRING \n         Yes \n         No \n       System Parameters  \n     \n         Name \n         Description \n         Default Value \n         Possible Parameters \n     \n     \n         mail.smtp.connectiontimeout \n         Socket connection timeout value in milliseconds.  \n         infinite timeout \n         Any Integer \n     \n     \n         mail.smtp.timeout \n         Socket I/O timeout value in milliseconds.  \n         infinite timeout \n         Any Integer \n     \n     \n         mail.smtp.from \n         Email address to use for SMTP MAIL command. This sets the envelope return address. \n         Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). \n         Valid email address \n     \n     \n         mail.smtp.localport \n         Local port number to bind to when creating the SMTP socket. \n         Defaults to the port number picked by the Socket class. \n         Any Integer \n     \n     \n         mail.smtp.ehlo \n         If false, do not attempt to sign on with the EHLO command. \n         true \n         true or false \n     \n     \n         mail.smtp.auth.login.disable \n         If true, prevents use of the AUTH LOGIN command. \n         false \n         true or false \n     \n     \n         mail.smtp.auth.plain.disable \n         If true, prevents use of the AUTH PLAIN command. \n         false \n         true or false \n     \n     \n         mail.smtp.auth.digest-md5.disable \n         If true, prevents use of the AUTH DIGEST-MD5 command. \n         false \n         true or false \n     \n     \n         mail.smtp.auth.ntlm.disable \n         If true, prevents use of the AUTH NTLM command \n         false \n         true or false \n     \n     \n         mail.smtp.auth.ntlm.domain \n         The NTLM authentication domain. \n         None \n         Valid NTLM authentication domain name \n     \n     \n         mail.smtp.auth.ntlm.flags \n         NTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details. \n         None \n         Valid NTLM protocol-specific flags. \n     \n     \n         mail.smtp.dsn.notify \n         The NOTIFY option to the RCPT command. \n         None \n         Either NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas). \n     \n     \n         mail.smtp.dsn.ret \n         The RET option to the MAIL command. \n         None \n         Either FULL or HDRS. \n     \n     \n         mail.smtp.sendpartial \n         If set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address. \n         false \n         true or false \n     \n     \n         mail.smtp.sasl.enable \n         If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. \n         false \n         true or false \n     \n     \n         mail.smtp.sasl.mechanisms \n         A space or comma separated list of SASL mechanism names to try to use. \n         None \n         \n     \n     \n         mail.smtp.sasl.authorizationid \n         The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. \n         username \n         Valid ID \n     \n     \n         mail.smtp.sasl.realm \n         The realm to use with DIGEST-MD5 authentication. \n         None \n         \n     \n     \n         mail.smtp.quitwait \n         If set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command. \n         false \n         true or false \n     \n     \n         mail.smtp.reportsuccess \n         If set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful. \n         false \n         true or false \n     \n     \n         mail.smtp.socketFactory \n         If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets. \n         None \n         Socket Factory \n     \n     \n         mail.smtp.socketFactory.class \n         If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets. \n         None \n         \n     \n     \n         mail.smtp.socketFactory.fallback \n         If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. \n         true \n         true or false \n     \n     \n         mail.smtp.socketFactory.port \n         Specifies the port to connect to when using the specified socket factory \n         25 \n         Valid port number \n     \n     \n         mail.smtp.ssl.protocols \n         Specifies the SSL protocols that will be enabled for SSL connections. \n         None \n         The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. \n     \n     \n         mail.smtp.starttls.enable \n         If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. \n         false \n         true or false \n     \n     \n         mail.smtp.starttls.required \n         If true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail. \n         false \n         true or false \n     \n     \n         mail.smtp.socks.host \n         Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. \n         None \n         \n     \n     \n         mail.smtp.socks.port \n         Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. \n         1080 \n         valid port number \n     \n     \n         mail.smtp.auth.ntlm.disable \n         If true, prevents use of the AUTH NTLM command \n         false \n         true or false \n     \n     \n         mail.smtp.mailextension \n         Extension string to append to the MAIL command. \n         None \n         \n     \n     \n         mail.smtp.userset \n         If set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue. \n         false \n         true or false \n       Examples  EXAMPLE 1  @sink(type='email', @map(type='json'), username='wso2', address='wso2@gmail.com',password='wso234',host='smtp.gmail.com',subject='Event from SP',to='towso2@gmail.com ,wso2two@gmail.com',cc='ccwso2@gmail.com')define stream inputStream (name string, age int, country string);  Following example illustrates how to publish a event using email sink. As in the example, it publishes events come from the inputStream in json format through email to given 'to' and 'cc' recipients.The email is sent through wso2@gmail.com email account via secure connection.", 
            "title": "email (Sink)"
        }, 
        {
            "location": "/api/1.0.0-M6/", 
            "text": "API Docs - v1.0.0-M6\n\n\nSource\n\n\nemail \n(Source)\n\n\nEmail source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store ,  https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters).\n\n\n\nSyntax\n\n\n@source(type=\nemail\n, username=\nSTRING\n, password=\nSTRING\n, store=\nSTRING\n, host=\nSTRING\n, port=\nINT\n, folder=\nSTRING\n, search.term=\nSTRING\n, polling.interval=\nLONG\n, action.after.processed=\nSTRING\n, folder.to.move=\nSTRING\n, content.type=\nSTRING\n, ssl.enable=\nBOOL\n, @map(...)))\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \nusername\n\n        \nuser name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \npassword\n\n        \npassword of the email account\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \nstore\n\n        \nStore type that used to receive emails. it can be either imap or pop3.\n\n        \nimap\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nhost\n\n        \nHost name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable.\n\n        \nIf store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'.\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nport\n\n        \nThe port which is used to create the connection.\n\n        \n'993' the default value is valid only if store is imap and ssl enable\n\n        \nINT\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nfolder\n\n        \nName of the folder to fetch email.\n\n        \nINBOX\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nsearch.term\n\n        \nOption which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol.\n\n        \nNone\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \npolling.interval\n\n        \nInterval that email source should poll the account to check for new mails arrivals in seconds.\n\n        \n600\n\n        \nLONG\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \naction.after.processed\n\n        \nAction that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE\n\n        \nNONE\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nfolder.to.move\n\n        \nThe name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \ncontent.type\n\n        \nContent type of the email. It can be either 'text/plain' or 'text/html.'\n\n        \ntext/plain\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nssl.enable\n\n        \nIf it is 'true' then use a secure port to establish the connection. The possible values are 'true or false.\n\n        \ntrue\n\n        \nBOOL\n\n        \nYes\n\n        \nNo\n\n    \n\n\n\n\nSystem Parameters\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Parameters\n\n    \n\n    \n\n        \nmail.imap.partialfetch\n\n        \nControls whether the IMAP partial-fetch capability should be used\n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.fetchsize\n\n        \nPartial fetch size in bytes.\n\n        \n16K\n\n        \nvalue in bytes\n\n    \n\n    \n\n        \nmail.imap.peek\n\n        \nIf set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.connectiontimeout\n\n        \nSocket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket.\n\n        \ninfinity timeout\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.timeout\n\n        \nSocket read timeout value in milliseconds. This timeout is implemented by java.net.Socket.\n\n        \ninfinity timeout\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.writetimeout\n\n        \nSocket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection.\n\n        \ninfinity timeout\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.statuscachetimeout\n\n        \nTimeout value in milliseconds for cache of STATUS command response.\n\n        \n1000ms\n\n        \nTime out in miliseconds\n\n    \n\n    \n\n        \nmail.imap.appendbuffersize\n\n        \nMaximum size of a message to buffer in memory when appending to an IMAP folder.\n\n        \nNone\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.connectionpoolsize\n\n        \nMaximum number of available connections in the connection pool.\n\n        \n1\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.connectionpooltimeout\n\n        \nTimeout value in milliseconds for connection pool connections. \n\n        \n45000ms\n\n        \nAny Integer\n\n    \n\n    \n\n        \nmail.imap.separatestoreconnection\n\n        \nFlag to indicate whether to use a dedicated store connection for store commands.\n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.auth.login.disable\n\n        \nIf true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.auth.plain.disable\n\n        \nIf true, prevents use of the AUTHENTICATE PLAIN command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.auth.ntlm.disable\n\n        \nIf true, prevents use of the AUTHENTICATE NTLM command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.proxyauth.user\n\n        \nIf the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property.\n\n        \nNone\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.localaddress\n\n        \nLocal address (host name) to bind to when creating the IMAP socket.\n\n        \nDefaults to the address picked by the Socket class.\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.localport\n\n        \nLocal port number to bind to when creating the IMAP socket.\n\n        \nDefaults to the port number picked by the Socket class.\n\n        \nValid String value\n\n    \n\n    \n\n        \nmail.imap.sasl.enable\n\n        \nIf set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.sasl.mechanisms\n\n        \nA space or comma separated list of SASL mechanism names to try to use.\n\n        \nNone\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.sasl.authorizationid\n\n        \nThe authorization ID to use in the SASL authentication.\n\n        \nIf not set, the authentication ID (user name) is used.\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.sasl.realm\n\n        \nThe realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5.\n\n        \nNone\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.auth.ntlm.domain\n\n        \nThe NTLM authentication domain.\n\n        \nNone\n\n        \nValid string value\n\n    \n\n    \n\n        \nThe NTLM authentication domain.\n\n        \nNTLM protocol-specific flags.\n\n        \nNone\n\n        \nValid integer value\n\n    \n\n    \n\n        \nmail.imap.socketFactory\n\n        \nIf set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets.\n\n        \nNone\n\n        \nValid SocketFactory\n\n    \n\n    \n\n        \nmail.imap.socketFactory.class\n\n        \nIf set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets.\n\n        \nNone\n\n        \nValid string\n\n    \n\n    \n\n        \nmail.imap.socketFactory.fallback\n\n        \nIf set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. \n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.socketFactory.port\n\n        \nSpecifies the port to connect to when using the specified socket factory. Default port is used when not set.\n\n        \n143\n\n        \nValid Integer\n\n    \n\n    \n\n        \nmail.imap.ssl.checkserveridentity\n\n        \nIf set to true, check the server identity as specified by RFC 2595.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.ssl.trust\n\n        \nIf set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '\n', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.imap.ssl.socketFactory\n\n        \nIf set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets.\n\n        \nNone\n\n        \nSSL Socket Factory\n\n    \n\n    \n\n        \nmail.imap.ssl.socketFactory.class\n\n        \nIf set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.imap.ssl.socketFactory.port\n\n        \nSpecifies the port to connect to when using the specified socket factory.\n\n        \nthe default port will be used-993\n\n        \nvalid port number\n\n    \n\n    \n\n        \nmail.imap.ssl.protocols\n\n        \nSpecifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method.\n\n        \nNone\n\n        \nValid string\n\n    \n\n    \n\n        \nmail.imap.starttls.enable\n\n        \nIf true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.socks.host\n\n        \nSpecifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.imap.socks.port\n\n        \nSpecifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080.\n\n        \n1080\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.imap.minidletime\n\n        \nThis property sets the delay in milliseconds.\n\n        \n10 milliseconds\n\n        \ntime in seconds (Integer)\n\n    \n\n    \n\n        \nmail.imap.enableimapevents\n\n        \nEnable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.folder.class\n\n        \nClass name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store)\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.connectiontimeout\n\n        \nSocket connection timeout value in milliseconds.\n\n        \nInfinite timeout\n\n        \nInteger value\n\n    \n\n    \n\n        \nmail.pop3.timeout\n\n        \nSocket I/O timeout value in milliseconds. \n\n        \nInfinite timeout\n\n        \nInteger value\n\n    \n\n    \n\n        \nmail.pop3.message.class\n\n        \nClass name of a subclass of com.sun.mail.pop3.POP3Message\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.localaddress\n\n        \nLocal address (host name) to bind to when creating the POP3 socket.\n\n        \nDefaults to the address picked by the Socket class.\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.localport\n\n        \nLocal port number to bind to when creating the POP3 socket.\n\n        \nDefaults to the port number picked by the Socket class.\n\n        \nValid port number\n\n    \n\n    \n\n        \nmail.pop3.apop.enable\n\n        \nIf set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.socketFactory\n\n        \nIf set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets.\n\n        \nNone\n\n        \nSocket Factory\n\n    \n\n    \n\n        \nmail.pop3.socketFactory.class\n\n        \nIf set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.socketFactory.fallback\n\n        \nIf set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.socketFactory.port\n\n        \nSpecifies the port to connect to when using the specified socket factory.\n\n        \nDefault port\n\n        \nValid port number\n\n    \n\n    \n\n        \nmail.pop3.ssl.checkserveridentity\n\n        \nIf set to true, check the server identity as specified by RFC 2595. \n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.ssl.trust\n\n        \nIf set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to '\n', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents.\n\n        \nDepends on the certificate the server presents\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.ssl.socketFactory\n\n        \nIf set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets.\n\n        \nNone\n\n        \nSSL Socket Factory\n\n    \n\n    \n\n        \nmail.pop3.ssl.checkserveridentity\n\n        \nIf set to true, check the server identity as specified by RFC 2595. \n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.ssl.trust\n\n        \n If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted. \n\n        \ntrust depends on the certificate the server presents.\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.ssl.socketFactory\n\n        \nIf set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets.\n\n        \nNone\n\n        \nSSL Socket Factory\n\n    \n\n    \n\n        \nmail.pop3.ssl.socketFactory.class\n\n        \nIf set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets. \n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.ssl.socketFactory.p\n\n        \nSpecifies the port to connect to when using the specified socket factory.\n\n        \n995\n\n        \nValid Integer\n\n    \n\n    \n\n        \nmail.pop3.ssl.protocols\n\n        \nSpecifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.starttls.enable\n\n        \nIf true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.starttls.required\n\n        \nIf true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.socks.host\n\n        \nSpecifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.socks.port\n\n        \nSpecifies the port number for the SOCKS5 proxy server.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.disabletop\n\n        \nIf set to true, the POP3 TOP command will not be used to fetch message headers. \n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.forgettopheaders\n\n        \nIf set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.filecache.enable\n\n        \nIf set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.filecache.dir\n\n        \nIf the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.cachewriteto\n\n        \nControls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.keepmessagecontent\n\n        \nIf this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method). \n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\n@source(type='email', @map(type='xml'), username='wso2mail', password='wso2Password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:das, from: wso2one@ , cc: wso2two, polling.interval='50000',action.after.processed='SEEN',content.type='text/html,)define stream inputStream (name string, age int, country string);\n\n\n\n\nFollowing example illustrates how to receive events in 'xml' format using email source. The email source polls the mail account in every 50 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term. In the example action after processes is defined as the 'SEEN', so that after processing the event, corresponding mail is mark as read.\n\n\n\nSink\n\n\nemail \n(Sink)\n\n\nThe email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters).\n\n\n\nSyntax\n\n\n@sink(type=\nemail\n, username=\nSTRING\n, address=\nSTRING\n, password=\nSTRING\n, host=\nSTRING\n, port=\nINT\n, ssl.enable=\nBOOL\n, auth=\nBOOL\n, content.type=\nSTRING\n, subject=\nSTRING\n, to=\nSTRING\n, cc=\nSTRING\n, bcc=\nSTRING\n, @map(...)))\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \nusername\n\n        \nUsername of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com).\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \naddress\n\n        \nAddress of the email account which is used to send emails.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \npassword\n\n        \nPassword of the email account.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \nhost\n\n        \nHost name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account.\n\n        \nsmtp.gmail.com\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nport\n\n        \nThe port which is used to create the connection.\n\n        \n'465' the default value is only valid is ssl enable\n\n        \nINT\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nssl.enable\n\n        \nWhether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection.\n\n        \ntrue\n\n        \nBOOL\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nauth\n\n        \nWhether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command.\n\n        \ntrue\n\n        \nBOOL\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \ncontent.type\n\n        \nContent type can be either 'text/plain' or 'text/html'.\n\n        \ntext/plain\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nsubject\n\n        \nSubject of the mail which has to be send.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nYes\n\n    \n\n    \n\n        \nto\n\n        \nAddress of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nYes\n\n    \n\n    \n\n        \ncc\n\n        \nAddress of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list.\n\n        \nNone\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nbcc\n\n        \nAddress of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list.\n\n        \nNone\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n\n\n\nSystem Parameters\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Parameters\n\n    \n\n    \n\n        \nmail.smtp.connectiontimeout\n\n        \nSocket connection timeout value in milliseconds. \n\n        \ninfinite timeout\n\n        \nAny Integer\n\n    \n\n    \n\n        \nmail.smtp.timeout\n\n        \nSocket I/O timeout value in milliseconds. \n\n        \ninfinite timeout\n\n        \nAny Integer\n\n    \n\n    \n\n        \nmail.smtp.from\n\n        \nEmail address to use for SMTP MAIL command. This sets the envelope return address.\n\n        \nDefaults to msg.getFrom() or InternetAddress.getLocalAddress().\n\n        \nValid email address\n\n    \n\n    \n\n        \nmail.smtp.localport\n\n        \nLocal port number to bind to when creating the SMTP socket.\n\n        \nDefaults to the port number picked by the Socket class.\n\n        \nAny Integer\n\n    \n\n    \n\n        \nmail.smtp.ehlo\n\n        \nIf false, do not attempt to sign on with the EHLO command.\n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.login.disable\n\n        \nIf true, prevents use of the AUTH LOGIN command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.plain.disable\n\n        \nIf true, prevents use of the AUTH PLAIN command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.digest-md5.disable\n\n        \nIf true, prevents use of the AUTH DIGEST-MD5 command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.ntlm.disable\n\n        \nIf true, prevents use of the AUTH NTLM command\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.ntlm.domain\n\n        \nThe NTLM authentication domain.\n\n        \nNone\n\n        \nValid NTLM authentication domain name\n\n    \n\n    \n\n        \nmail.smtp.auth.ntlm.flags\n\n        \nNTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details.\n\n        \nNone\n\n        \nValid NTLM protocol-specific flags.\n\n    \n\n    \n\n        \nmail.smtp.dsn.notify\n\n        \nThe NOTIFY option to the RCPT command.\n\n        \nNone\n\n        \nEither NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas).\n\n    \n\n    \n\n        \nmail.smtp.dsn.ret\n\n        \nThe RET option to the MAIL command.\n\n        \nNone\n\n        \nEither FULL or HDRS.\n\n    \n\n    \n\n        \nmail.smtp.sendpartial\n\n        \nIf set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.sasl.enable\n\n        \nIf set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.sasl.mechanisms\n\n        \nA space or comma separated list of SASL mechanism names to try to use.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.sasl.authorizationid\n\n        \nThe authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used.\n\n        \nusername\n\n        \nValid ID\n\n    \n\n    \n\n        \nmail.smtp.sasl.realm\n\n        \nThe realm to use with DIGEST-MD5 authentication.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.quitwait\n\n        \nIf set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.reportsuccess\n\n        \nIf set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.socketFactory\n\n        \nIf set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets.\n\n        \nNone\n\n        \nSocket Factory\n\n    \n\n    \n\n        \nmail.smtp.socketFactory.class\n\n        \nIf set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.socketFactory.fallback\n\n        \nIf set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class.\n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.socketFactory.port\n\n        \nSpecifies the port to connect to when using the specified socket factory\n\n        \n25\n\n        \nValid port number\n\n    \n\n    \n\n        \nmail.smtp.ssl.protocols\n\n        \nSpecifies the SSL protocols that will be enabled for SSL connections.\n\n        \nNone\n\n        \nThe property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method.\n\n    \n\n    \n\n        \nmail.smtp.starttls.enable\n\n        \nIf true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.starttls.required\n\n        \nIf true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.socks.host\n\n        \nSpecifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.socks.port\n\n        \nSpecifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080.\n\n        \n1080\n\n        \nvalid port number\n\n    \n\n    \n\n        \nmail.smtp.auth.ntlm.disable\n\n        \nIf true, prevents use of the AUTH NTLM command\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.mailextension\n\n        \nExtension string to append to the MAIL command.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.userset\n\n        \nIf set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\n@sink(type='email', @map(type='json'), username='wso2', address='wso2@gmail.com',password='wso234',host='smtp.gmail.com',subject='Event from SP',to='towso2@gmail.com ,wso2two@gmail.com',cc='ccwso2@gmail.com')define stream inputStream (name string, age int, country string);\n\n\n\n\nFollowing example illustrates how to publish a event using email sink. As in the example, it publishes events come from the inputStream in json format through email to given 'to' and 'cc' recipients.The email is sent through wso2@gmail.com email account via secure connection.", 
            "title": "1.0.0-M6"
        }, 
        {
            "location": "/api/1.0.0-M6/#api-docs-v100-m6", 
            "text": "", 
            "title": "API Docs - v1.0.0-M6"
        }, 
        {
            "location": "/api/1.0.0-M6/#source", 
            "text": "", 
            "title": "Source"
        }, 
        {
            "location": "/api/1.0.0-M6/#email-source", 
            "text": "Email source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store ,  https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters).  Syntax  @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...)))  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         username \n         user name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account. \n         \n         STRING \n         No \n         No \n     \n     \n         password \n         password of the email account \n         \n         STRING \n         No \n         No \n     \n     \n         store \n         Store type that used to receive emails. it can be either imap or pop3. \n         imap \n         STRING \n         Yes \n         No \n     \n     \n         host \n         Host name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable. \n         If store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'. \n         STRING \n         Yes \n         No \n     \n     \n         port \n         The port which is used to create the connection. \n         '993' the default value is valid only if store is imap and ssl enable \n         INT \n         Yes \n         No \n     \n     \n         folder \n         Name of the folder to fetch email. \n         INBOX \n         STRING \n         Yes \n         No \n     \n     \n         search.term \n         Option which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol. \n         None \n         STRING \n         Yes \n         No \n     \n     \n         polling.interval \n         Interval that email source should poll the account to check for new mails arrivals in seconds. \n         600 \n         LONG \n         Yes \n         No \n     \n     \n         action.after.processed \n         Action that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE \n         NONE \n         STRING \n         Yes \n         No \n     \n     \n         folder.to.move \n         The name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move. \n         \n         STRING \n         No \n         No \n     \n     \n         content.type \n         Content type of the email. It can be either 'text/plain' or 'text/html.' \n         text/plain \n         STRING \n         Yes \n         No \n     \n     \n         ssl.enable \n         If it is 'true' then use a secure port to establish the connection. The possible values are 'true or false. \n         true \n         BOOL \n         Yes \n         No \n       System Parameters  \n     \n         Name \n         Description \n         Default Value \n         Possible Parameters \n     \n     \n         mail.imap.partialfetch \n         Controls whether the IMAP partial-fetch capability should be used \n         true \n         true or false \n     \n     \n         mail.imap.fetchsize \n         Partial fetch size in bytes. \n         16K \n         value in bytes \n     \n     \n         mail.imap.peek \n         If set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage. \n         false \n         true or false \n     \n     \n         mail.imap.connectiontimeout \n         Socket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket. \n         infinity timeout \n         Any Integer value \n     \n     \n         mail.imap.timeout \n         Socket read timeout value in milliseconds. This timeout is implemented by java.net.Socket. \n         infinity timeout \n         Any Integer value \n     \n     \n         mail.imap.writetimeout \n         Socket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection. \n         infinity timeout \n         Any Integer value \n     \n     \n         mail.imap.statuscachetimeout \n         Timeout value in milliseconds for cache of STATUS command response. \n         1000ms \n         Time out in miliseconds \n     \n     \n         mail.imap.appendbuffersize \n         Maximum size of a message to buffer in memory when appending to an IMAP folder. \n         None \n         Any Integer value \n     \n     \n         mail.imap.connectionpoolsize \n         Maximum number of available connections in the connection pool. \n         1 \n         Any Integer value \n     \n     \n         mail.imap.connectionpooltimeout \n         Timeout value in milliseconds for connection pool connections.  \n         45000ms \n         Any Integer \n     \n     \n         mail.imap.separatestoreconnection \n         Flag to indicate whether to use a dedicated store connection for store commands. \n         true \n         true or false \n     \n     \n         mail.imap.auth.login.disable \n         If true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command. \n         false \n         true or false \n     \n     \n         mail.imap.auth.plain.disable \n         If true, prevents use of the AUTHENTICATE PLAIN command. \n         false \n         true or false \n     \n     \n         mail.imap.auth.ntlm.disable \n         If true, prevents use of the AUTHENTICATE NTLM command. \n         false \n         true or false \n     \n     \n         mail.imap.proxyauth.user \n         If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property. \n         None \n         Valid string value \n     \n     \n         mail.imap.localaddress \n         Local address (host name) to bind to when creating the IMAP socket. \n         Defaults to the address picked by the Socket class. \n         Valid string value \n     \n     \n         mail.imap.localport \n         Local port number to bind to when creating the IMAP socket. \n         Defaults to the port number picked by the Socket class. \n         Valid String value \n     \n     \n         mail.imap.sasl.enable \n         If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. \n         false \n         true or false \n     \n     \n         mail.imap.sasl.mechanisms \n         A space or comma separated list of SASL mechanism names to try to use. \n         None \n         Valid string value \n     \n     \n         mail.imap.sasl.authorizationid \n         The authorization ID to use in the SASL authentication. \n         If not set, the authentication ID (user name) is used. \n         Valid string value \n     \n     \n         mail.imap.sasl.realm \n         The realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5. \n         None \n         Valid string value \n     \n     \n         mail.imap.auth.ntlm.domain \n         The NTLM authentication domain. \n         None \n         Valid string value \n     \n     \n         The NTLM authentication domain. \n         NTLM protocol-specific flags. \n         None \n         Valid integer value \n     \n     \n         mail.imap.socketFactory \n         If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets. \n         None \n         Valid SocketFactory \n     \n     \n         mail.imap.socketFactory.class \n         If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets. \n         None \n         Valid string \n     \n     \n         mail.imap.socketFactory.fallback \n         If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class.  \n         true \n         true or false \n     \n     \n         mail.imap.socketFactory.port \n         Specifies the port to connect to when using the specified socket factory. Default port is used when not set. \n         143 \n         Valid Integer \n     \n     \n         mail.imap.ssl.checkserveridentity \n         If set to true, check the server identity as specified by RFC 2595. \n         false \n         true or false \n     \n     \n         mail.imap.ssl.trust \n         If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. \n         None \n         Valid String \n     \n     \n         mail.imap.ssl.socketFactory \n         If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets. \n         None \n         SSL Socket Factory \n     \n     \n         mail.imap.ssl.socketFactory.class \n         If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets. \n         None \n         Valid String \n     \n     \n         mail.imap.ssl.socketFactory.port \n         Specifies the port to connect to when using the specified socket factory. \n         the default port will be used-993 \n         valid port number \n     \n     \n         mail.imap.ssl.protocols \n         Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. \n         None \n         Valid string \n     \n     \n         mail.imap.starttls.enable \n         If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. \n         false \n         true or false \n     \n     \n         mail.imap.socks.host \n         Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. \n         None \n         Valid String \n     \n     \n         mail.imap.socks.port \n         Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. \n         1080 \n         Valid String \n     \n     \n         mail.imap.minidletime \n         This property sets the delay in milliseconds. \n         10 milliseconds \n         time in seconds (Integer) \n     \n     \n         mail.imap.enableimapevents \n         Enable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string. \n         false \n         true or false \n     \n     \n         mail.imap.folder.class \n         Class name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store) \n         None \n         Valid String \n     \n     \n         mail.pop3.connectiontimeout \n         Socket connection timeout value in milliseconds. \n         Infinite timeout \n         Integer value \n     \n     \n         mail.pop3.timeout \n         Socket I/O timeout value in milliseconds.  \n         Infinite timeout \n         Integer value \n     \n     \n         mail.pop3.message.class \n         Class name of a subclass of com.sun.mail.pop3.POP3Message \n         None \n         Valid String \n     \n     \n         mail.pop3.localaddress \n         Local address (host name) to bind to when creating the POP3 socket. \n         Defaults to the address picked by the Socket class. \n         Valid String \n     \n     \n         mail.pop3.localport \n         Local port number to bind to when creating the POP3 socket. \n         Defaults to the port number picked by the Socket class. \n         Valid port number \n     \n     \n         mail.pop3.apop.enable \n         If set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password. \n         false \n         true or false \n     \n     \n         mail.pop3.socketFactory \n         If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets. \n         None \n         Socket Factory \n     \n     \n         mail.pop3.socketFactory.class \n         If set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets. \n         None \n         Valid String \n     \n     \n         mail.pop3.socketFactory.fallback \n         If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. \n         false \n         true or false \n     \n     \n         mail.pop3.socketFactory.port \n         Specifies the port to connect to when using the specified socket factory. \n         Default port \n         Valid port number \n     \n     \n         mail.pop3.ssl.checkserveridentity \n         If set to true, check the server identity as specified by RFC 2595.  \n         false \n         true or false \n     \n     \n         mail.pop3.ssl.trust \n         If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. \n         Depends on the certificate the server presents \n         Valid String \n     \n     \n         mail.pop3.ssl.socketFactory \n         If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. \n         None \n         SSL Socket Factory \n     \n     \n         mail.pop3.ssl.checkserveridentity \n         If set to true, check the server identity as specified by RFC 2595.  \n         false \n         true or false \n     \n     \n         mail.pop3.ssl.trust \n          If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.  \n         trust depends on the certificate the server presents. \n         Valid String \n     \n     \n         mail.pop3.ssl.socketFactory \n         If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. \n         None \n         SSL Socket Factory \n     \n     \n         mail.pop3.ssl.socketFactory.class \n         If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets.  \n         None \n         Valid String \n     \n     \n         mail.pop3.ssl.socketFactory.p \n         Specifies the port to connect to when using the specified socket factory. \n         995 \n         Valid Integer \n     \n     \n         mail.pop3.ssl.protocols \n         Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. \n         None \n         Valid String \n     \n     \n         mail.pop3.starttls.enable \n         If true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands \n         false \n         true or false \n     \n     \n         mail.pop3.starttls.required \n         If true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail. \n         false \n         true or false \n     \n     \n         mail.pop3.socks.host \n         Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. \n         None \n         Valid String \n     \n     \n         mail.pop3.socks.port \n         Specifies the port number for the SOCKS5 proxy server. \n         None \n         Valid String \n     \n     \n         mail.pop3.disabletop \n         If set to true, the POP3 TOP command will not be used to fetch message headers.  \n         false \n         true or false \n     \n     \n         mail.pop3.forgettopheaders \n         If set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command. \n         false \n         true or false \n     \n     \n         mail.pop3.filecache.enable \n         If set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. \n         false \n         true or false \n     \n     \n         mail.pop3.filecache.dir \n         If the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files. \n         None \n         Valid String \n     \n     \n         mail.pop3.cachewriteto \n         Controls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached. \n         false \n         true or false \n     \n     \n         mail.pop3.keepmessagecontent \n         If this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method).  \n         false \n         true or false \n       Examples  EXAMPLE 1  @source(type='email', @map(type='xml'), username='wso2mail', password='wso2Password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:das, from: wso2one@ , cc: wso2two, polling.interval='50000',action.after.processed='SEEN',content.type='text/html,)define stream inputStream (name string, age int, country string);  Following example illustrates how to receive events in 'xml' format using email source. The email source polls the mail account in every 50 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term. In the example action after processes is defined as the 'SEEN', so that after processing the event, corresponding mail is mark as read.", 
            "title": "email (Source)"
        }, 
        {
            "location": "/api/1.0.0-M6/#sink", 
            "text": "", 
            "title": "Sink"
        }, 
        {
            "location": "/api/1.0.0-M6/#email-sink", 
            "text": "The email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters).  Syntax  @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , @map(...)))  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         username \n         Username of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com). \n         \n         STRING \n         No \n         No \n     \n     \n         address \n         Address of the email account which is used to send emails. \n         \n         STRING \n         No \n         No \n     \n     \n         password \n         Password of the email account. \n         \n         STRING \n         No \n         No \n     \n     \n         host \n         Host name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account. \n         smtp.gmail.com \n         STRING \n         Yes \n         No \n     \n     \n         port \n         The port which is used to create the connection. \n         '465' the default value is only valid is ssl enable \n         INT \n         Yes \n         No \n     \n     \n         ssl.enable \n         Whether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection. \n         true \n         BOOL \n         Yes \n         No \n     \n     \n         auth \n         Whether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command. \n         true \n         BOOL \n         Yes \n         No \n     \n     \n         content.type \n         Content type can be either 'text/plain' or 'text/html'. \n         text/plain \n         STRING \n         Yes \n         No \n     \n     \n         subject \n         Subject of the mail which has to be send. \n         \n         STRING \n         No \n         Yes \n     \n     \n         to \n         Address of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list. \n         \n         STRING \n         No \n         Yes \n     \n     \n         cc \n         Address of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list. \n         None \n         STRING \n         Yes \n         No \n     \n     \n         bcc \n         Address of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list. \n         None \n         STRING \n         Yes \n         No \n       System Parameters  \n     \n         Name \n         Description \n         Default Value \n         Possible Parameters \n     \n     \n         mail.smtp.connectiontimeout \n         Socket connection timeout value in milliseconds.  \n         infinite timeout \n         Any Integer \n     \n     \n         mail.smtp.timeout \n         Socket I/O timeout value in milliseconds.  \n         infinite timeout \n         Any Integer \n     \n     \n         mail.smtp.from \n         Email address to use for SMTP MAIL command. This sets the envelope return address. \n         Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). \n         Valid email address \n     \n     \n         mail.smtp.localport \n         Local port number to bind to when creating the SMTP socket. \n         Defaults to the port number picked by the Socket class. \n         Any Integer \n     \n     \n         mail.smtp.ehlo \n         If false, do not attempt to sign on with the EHLO command. \n         true \n         true or false \n     \n     \n         mail.smtp.auth.login.disable \n         If true, prevents use of the AUTH LOGIN command. \n         false \n         true or false \n     \n     \n         mail.smtp.auth.plain.disable \n         If true, prevents use of the AUTH PLAIN command. \n         false \n         true or false \n     \n     \n         mail.smtp.auth.digest-md5.disable \n         If true, prevents use of the AUTH DIGEST-MD5 command. \n         false \n         true or false \n     \n     \n         mail.smtp.auth.ntlm.disable \n         If true, prevents use of the AUTH NTLM command \n         false \n         true or false \n     \n     \n         mail.smtp.auth.ntlm.domain \n         The NTLM authentication domain. \n         None \n         Valid NTLM authentication domain name \n     \n     \n         mail.smtp.auth.ntlm.flags \n         NTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details. \n         None \n         Valid NTLM protocol-specific flags. \n     \n     \n         mail.smtp.dsn.notify \n         The NOTIFY option to the RCPT command. \n         None \n         Either NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas). \n     \n     \n         mail.smtp.dsn.ret \n         The RET option to the MAIL command. \n         None \n         Either FULL or HDRS. \n     \n     \n         mail.smtp.sendpartial \n         If set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address. \n         false \n         true or false \n     \n     \n         mail.smtp.sasl.enable \n         If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. \n         false \n         true or false \n     \n     \n         mail.smtp.sasl.mechanisms \n         A space or comma separated list of SASL mechanism names to try to use. \n         None \n         \n     \n     \n         mail.smtp.sasl.authorizationid \n         The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. \n         username \n         Valid ID \n     \n     \n         mail.smtp.sasl.realm \n         The realm to use with DIGEST-MD5 authentication. \n         None \n         \n     \n     \n         mail.smtp.quitwait \n         If set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command. \n         false \n         true or false \n     \n     \n         mail.smtp.reportsuccess \n         If set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful. \n         false \n         true or false \n     \n     \n         mail.smtp.socketFactory \n         If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets. \n         None \n         Socket Factory \n     \n     \n         mail.smtp.socketFactory.class \n         If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets. \n         None \n         \n     \n     \n         mail.smtp.socketFactory.fallback \n         If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. \n         true \n         true or false \n     \n     \n         mail.smtp.socketFactory.port \n         Specifies the port to connect to when using the specified socket factory \n         25 \n         Valid port number \n     \n     \n         mail.smtp.ssl.protocols \n         Specifies the SSL protocols that will be enabled for SSL connections. \n         None \n         The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. \n     \n     \n         mail.smtp.starttls.enable \n         If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. \n         false \n         true or false \n     \n     \n         mail.smtp.starttls.required \n         If true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail. \n         false \n         true or false \n     \n     \n         mail.smtp.socks.host \n         Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. \n         None \n         \n     \n     \n         mail.smtp.socks.port \n         Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. \n         1080 \n         valid port number \n     \n     \n         mail.smtp.auth.ntlm.disable \n         If true, prevents use of the AUTH NTLM command \n         false \n         true or false \n     \n     \n         mail.smtp.mailextension \n         Extension string to append to the MAIL command. \n         None \n         \n     \n     \n         mail.smtp.userset \n         If set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue. \n         false \n         true or false \n       Examples  EXAMPLE 1  @sink(type='email', @map(type='json'), username='wso2', address='wso2@gmail.com',password='wso234',host='smtp.gmail.com',subject='Event from SP',to='towso2@gmail.com ,wso2two@gmail.com',cc='ccwso2@gmail.com')define stream inputStream (name string, age int, country string);  Following example illustrates how to publish a event using email sink. As in the example, it publishes events come from the inputStream in json format through email to given 'to' and 'cc' recipients.The email is sent through wso2@gmail.com email account via secure connection.", 
            "title": "email (Sink)"
        }, 
        {
            "location": "/api/1.0.0/", 
            "text": "API Docs - v1.0.0\n\n\nSink\n\n\nemail \n(Sink)\n\n\nThe email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters).\n\n\n\nSyntax\n\n\n@sink(type=\nemail\n, username=\nSTRING\n, address=\nSTRING\n, password=\nSTRING\n, host=\nSTRING\n, port=\nINT\n, ssl.enable=\nBOOL\n, auth=\nBOOL\n, content.type=\nSTRING\n, subject=\nSTRING\n, to=\nSTRING\n, cc=\nSTRING\n, bcc=\nSTRING\n, @map(...)))\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \nusername\n\n        \nUsername of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com).\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \naddress\n\n        \nAddress of the email account which is used to send emails.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \npassword\n\n        \nPassword of the email account.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \nhost\n\n        \nHost name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account.\n\n        \nsmtp.gmail.com\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nport\n\n        \nThe port which is used to create the connection.\n\n        \n'465' the default value is only valid is ssl enable\n\n        \nINT\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nssl.enable\n\n        \nWhether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection.\n\n        \ntrue\n\n        \nBOOL\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nauth\n\n        \nWhether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command.\n\n        \ntrue\n\n        \nBOOL\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \ncontent.type\n\n        \nContent type can be either 'text/plain' or 'text/html'.\n\n        \ntext/plain\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nsubject\n\n        \nSubject of the mail which has to be send.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nYes\n\n    \n\n    \n\n        \nto\n\n        \nAddress of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nYes\n\n    \n\n    \n\n        \ncc\n\n        \nAddress of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list.\n\n        \nNone\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nbcc\n\n        \nAddress of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list.\n\n        \nNone\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n\n\n\nSystem Parameters\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Parameters\n\n    \n\n    \n\n        \nmail.smtp.connectiontimeout\n\n        \nSocket connection timeout value in milliseconds. \n\n        \ninfinite timeout\n\n        \nAny Integer\n\n    \n\n    \n\n        \nmail.smtp.timeout\n\n        \nSocket I/O timeout value in milliseconds. \n\n        \ninfinite timeout\n\n        \nAny Integer\n\n    \n\n    \n\n        \nmail.smtp.from\n\n        \nEmail address to use for SMTP MAIL command. This sets the envelope return address.\n\n        \nDefaults to msg.getFrom() or InternetAddress.getLocalAddress().\n\n        \nValid email address\n\n    \n\n    \n\n        \nmail.smtp.localport\n\n        \nLocal port number to bind to when creating the SMTP socket.\n\n        \nDefaults to the port number picked by the Socket class.\n\n        \nAny Integer\n\n    \n\n    \n\n        \nmail.smtp.ehlo\n\n        \nIf false, do not attempt to sign on with the EHLO command.\n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.login.disable\n\n        \nIf true, prevents use of the AUTH LOGIN command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.plain.disable\n\n        \nIf true, prevents use of the AUTH PLAIN command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.digest-md5.disable\n\n        \nIf true, prevents use of the AUTH DIGEST-MD5 command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.ntlm.disable\n\n        \nIf true, prevents use of the AUTH NTLM command\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.ntlm.domain\n\n        \nThe NTLM authentication domain.\n\n        \nNone\n\n        \nValid NTLM authentication domain name\n\n    \n\n    \n\n        \nmail.smtp.auth.ntlm.flags\n\n        \nNTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details.\n\n        \nNone\n\n        \nValid NTLM protocol-specific flags.\n\n    \n\n    \n\n        \nmail.smtp.dsn.notify\n\n        \nThe NOTIFY option to the RCPT command.\n\n        \nNone\n\n        \nEither NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas).\n\n    \n\n    \n\n        \nmail.smtp.dsn.ret\n\n        \nThe RET option to the MAIL command.\n\n        \nNone\n\n        \nEither FULL or HDRS.\n\n    \n\n    \n\n        \nmail.smtp.sendpartial\n\n        \nIf set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.sasl.enable\n\n        \nIf set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.sasl.mechanisms\n\n        \nA space or comma separated list of SASL mechanism names to try to use.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.sasl.authorizationid\n\n        \nThe authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used.\n\n        \nusername\n\n        \nValid ID\n\n    \n\n    \n\n        \nmail.smtp.sasl.realm\n\n        \nThe realm to use with DIGEST-MD5 authentication.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.quitwait\n\n        \nIf set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.reportsuccess\n\n        \nIf set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.socketFactory\n\n        \nIf set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets.\n\n        \nNone\n\n        \nSocket Factory\n\n    \n\n    \n\n        \nmail.smtp.socketFactory.class\n\n        \nIf set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.socketFactory.fallback\n\n        \nIf set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class.\n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.socketFactory.port\n\n        \nSpecifies the port to connect to when using the specified socket factory\n\n        \n25\n\n        \nValid port number\n\n    \n\n    \n\n        \nmail.smtp.ssl.protocols\n\n        \nSpecifies the SSL protocols that will be enabled for SSL connections.\n\n        \nNone\n\n        \nThe property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method.\n\n    \n\n    \n\n        \nmail.smtp.starttls.enable\n\n        \nIf true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.starttls.required\n\n        \nIf true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.socks.host\n\n        \nSpecifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.socks.port\n\n        \nSpecifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080.\n\n        \n1080\n\n        \nvalid port number\n\n    \n\n    \n\n        \nmail.smtp.auth.ntlm.disable\n\n        \nIf true, prevents use of the AUTH NTLM command\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.mailextension\n\n        \nExtension string to append to the MAIL command.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.userset\n\n        \nIf set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\n@sink(type='email', @map(type='json'), username='wso2', address='wso2@gmail.com',password='wso234',host='smtp.gmail.com',subject='Event from SP',to='towso2@gmail.com ,wso2two@gmail.com',cc='ccwso2@gmail.com')define stream inputStream (name string, age int, country string);\n\n\n\n\nFollowing example illustrates how to publish a event using email sink. As in the example, it publishes events come from the inputStream in json format through email to given 'to' and 'cc' recipients.The email is sent through wso2@gmail.com email account via secure connection.\n\n\n\nSource\n\n\nemail \n(Source)\n\n\nEmail source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store ,  https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters).\n\n\n\nSyntax\n\n\n@source(type=\nemail\n, username=\nSTRING\n, password=\nSTRING\n, store=\nSTRING\n, host=\nSTRING\n, port=\nINT\n, folder=\nSTRING\n, search.term=\nSTRING\n, polling.interval=\nLONG\n, action.after.processed=\nSTRING\n, folder.to.move=\nSTRING\n, content.type=\nSTRING\n, ssl.enable=\nBOOL\n, @map(...)))\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \nusername\n\n        \nuser name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \npassword\n\n        \npassword of the email account\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \nstore\n\n        \nStore type that used to receive emails. it can be either imap or pop3.\n\n        \nimap\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nhost\n\n        \nHost name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable.\n\n        \nIf store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'.\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nport\n\n        \nThe port which is used to create the connection.\n\n        \n'993' the default value is valid only if store is imap and ssl enable\n\n        \nINT\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nfolder\n\n        \nName of the folder to fetch email.\n\n        \nINBOX\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nsearch.term\n\n        \nOption which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol.\n\n        \nNone\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \npolling.interval\n\n        \nInterval that email source should poll the account to check for new mails arrivals in seconds.\n\n        \n600\n\n        \nLONG\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \naction.after.processed\n\n        \nAction that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE\n\n        \nNONE\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nfolder.to.move\n\n        \nThe name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \ncontent.type\n\n        \nContent type of the email. It can be either 'text/plain' or 'text/html.'\n\n        \ntext/plain\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nssl.enable\n\n        \nIf it is 'true' then use a secure port to establish the connection. The possible values are 'true or false.\n\n        \ntrue\n\n        \nBOOL\n\n        \nYes\n\n        \nNo\n\n    \n\n\n\n\nSystem Parameters\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Parameters\n\n    \n\n    \n\n        \nmail.imap.partialfetch\n\n        \nControls whether the IMAP partial-fetch capability should be used\n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.fetchsize\n\n        \nPartial fetch size in bytes.\n\n        \n16K\n\n        \nvalue in bytes\n\n    \n\n    \n\n        \nmail.imap.peek\n\n        \nIf set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.connectiontimeout\n\n        \nSocket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket.\n\n        \ninfinity timeout\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.timeout\n\n        \nSocket read timeout value in milliseconds. This timeout is implemented by java.net.Socket.\n\n        \ninfinity timeout\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.writetimeout\n\n        \nSocket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection.\n\n        \ninfinity timeout\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.statuscachetimeout\n\n        \nTimeout value in milliseconds for cache of STATUS command response.\n\n        \n1000ms\n\n        \nTime out in miliseconds\n\n    \n\n    \n\n        \nmail.imap.appendbuffersize\n\n        \nMaximum size of a message to buffer in memory when appending to an IMAP folder.\n\n        \nNone\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.connectionpoolsize\n\n        \nMaximum number of available connections in the connection pool.\n\n        \n1\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.connectionpooltimeout\n\n        \nTimeout value in milliseconds for connection pool connections. \n\n        \n45000ms\n\n        \nAny Integer\n\n    \n\n    \n\n        \nmail.imap.separatestoreconnection\n\n        \nFlag to indicate whether to use a dedicated store connection for store commands.\n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.auth.login.disable\n\n        \nIf true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.auth.plain.disable\n\n        \nIf true, prevents use of the AUTHENTICATE PLAIN command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.auth.ntlm.disable\n\n        \nIf true, prevents use of the AUTHENTICATE NTLM command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.proxyauth.user\n\n        \nIf the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property.\n\n        \nNone\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.localaddress\n\n        \nLocal address (host name) to bind to when creating the IMAP socket.\n\n        \nDefaults to the address picked by the Socket class.\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.localport\n\n        \nLocal port number to bind to when creating the IMAP socket.\n\n        \nDefaults to the port number picked by the Socket class.\n\n        \nValid String value\n\n    \n\n    \n\n        \nmail.imap.sasl.enable\n\n        \nIf set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.sasl.mechanisms\n\n        \nA space or comma separated list of SASL mechanism names to try to use.\n\n        \nNone\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.sasl.authorizationid\n\n        \nThe authorization ID to use in the SASL authentication.\n\n        \nIf not set, the authentication ID (user name) is used.\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.sasl.realm\n\n        \nThe realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5.\n\n        \nNone\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.auth.ntlm.domain\n\n        \nThe NTLM authentication domain.\n\n        \nNone\n\n        \nValid string value\n\n    \n\n    \n\n        \nThe NTLM authentication domain.\n\n        \nNTLM protocol-specific flags.\n\n        \nNone\n\n        \nValid integer value\n\n    \n\n    \n\n        \nmail.imap.socketFactory\n\n        \nIf set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets.\n\n        \nNone\n\n        \nValid SocketFactory\n\n    \n\n    \n\n        \nmail.imap.socketFactory.class\n\n        \nIf set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets.\n\n        \nNone\n\n        \nValid string\n\n    \n\n    \n\n        \nmail.imap.socketFactory.fallback\n\n        \nIf set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. \n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.socketFactory.port\n\n        \nSpecifies the port to connect to when using the specified socket factory. Default port is used when not set.\n\n        \n143\n\n        \nValid Integer\n\n    \n\n    \n\n        \nmail.imap.ssl.checkserveridentity\n\n        \nIf set to true, check the server identity as specified by RFC 2595.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.ssl.trust\n\n        \nIf set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '\n', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.imap.ssl.socketFactory\n\n        \nIf set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets.\n\n        \nNone\n\n        \nSSL Socket Factory\n\n    \n\n    \n\n        \nmail.imap.ssl.socketFactory.class\n\n        \nIf set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.imap.ssl.socketFactory.port\n\n        \nSpecifies the port to connect to when using the specified socket factory.\n\n        \nthe default port will be used-993\n\n        \nvalid port number\n\n    \n\n    \n\n        \nmail.imap.ssl.protocols\n\n        \nSpecifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method.\n\n        \nNone\n\n        \nValid string\n\n    \n\n    \n\n        \nmail.imap.starttls.enable\n\n        \nIf true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.socks.host\n\n        \nSpecifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.imap.socks.port\n\n        \nSpecifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080.\n\n        \n1080\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.imap.minidletime\n\n        \nThis property sets the delay in milliseconds.\n\n        \n10 milliseconds\n\n        \ntime in seconds (Integer)\n\n    \n\n    \n\n        \nmail.imap.enableimapevents\n\n        \nEnable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.folder.class\n\n        \nClass name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store)\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.connectiontimeout\n\n        \nSocket connection timeout value in milliseconds.\n\n        \nInfinite timeout\n\n        \nInteger value\n\n    \n\n    \n\n        \nmail.pop3.timeout\n\n        \nSocket I/O timeout value in milliseconds. \n\n        \nInfinite timeout\n\n        \nInteger value\n\n    \n\n    \n\n        \nmail.pop3.message.class\n\n        \nClass name of a subclass of com.sun.mail.pop3.POP3Message\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.localaddress\n\n        \nLocal address (host name) to bind to when creating the POP3 socket.\n\n        \nDefaults to the address picked by the Socket class.\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.localport\n\n        \nLocal port number to bind to when creating the POP3 socket.\n\n        \nDefaults to the port number picked by the Socket class.\n\n        \nValid port number\n\n    \n\n    \n\n        \nmail.pop3.apop.enable\n\n        \nIf set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.socketFactory\n\n        \nIf set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets.\n\n        \nNone\n\n        \nSocket Factory\n\n    \n\n    \n\n        \nmail.pop3.socketFactory.class\n\n        \nIf set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.socketFactory.fallback\n\n        \nIf set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.socketFactory.port\n\n        \nSpecifies the port to connect to when using the specified socket factory.\n\n        \nDefault port\n\n        \nValid port number\n\n    \n\n    \n\n        \nmail.pop3.ssl.checkserveridentity\n\n        \nIf set to true, check the server identity as specified by RFC 2595. \n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.ssl.trust\n\n        \nIf set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to '\n', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents.\n\n        \nDepends on the certificate the server presents\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.ssl.socketFactory\n\n        \nIf set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets.\n\n        \nNone\n\n        \nSSL Socket Factory\n\n    \n\n    \n\n        \nmail.pop3.ssl.checkserveridentity\n\n        \nIf set to true, check the server identity as specified by RFC 2595. \n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.ssl.trust\n\n        \n If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted. \n\n        \ntrust depends on the certificate the server presents.\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.ssl.socketFactory\n\n        \nIf set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets.\n\n        \nNone\n\n        \nSSL Socket Factory\n\n    \n\n    \n\n        \nmail.pop3.ssl.socketFactory.class\n\n        \nIf set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets. \n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.ssl.socketFactory.p\n\n        \nSpecifies the port to connect to when using the specified socket factory.\n\n        \n995\n\n        \nValid Integer\n\n    \n\n    \n\n        \nmail.pop3.ssl.protocols\n\n        \nSpecifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.starttls.enable\n\n        \nIf true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.starttls.required\n\n        \nIf true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.socks.host\n\n        \nSpecifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.socks.port\n\n        \nSpecifies the port number for the SOCKS5 proxy server.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.disabletop\n\n        \nIf set to true, the POP3 TOP command will not be used to fetch message headers. \n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.forgettopheaders\n\n        \nIf set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.filecache.enable\n\n        \nIf set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.filecache.dir\n\n        \nIf the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.cachewriteto\n\n        \nControls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.keepmessagecontent\n\n        \nIf this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method). \n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\n@source(type='email', @map(type='xml'), username='wso2mail', password='wso2Password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:das, from: wso2one@ , cc: wso2two, polling.interval='50000',action.after.processed='SEEN',content.type='text/html,)define stream inputStream (name string, age int, country string);\n\n\n\n\nFollowing example illustrates how to receive events in 'xml' format using email source. The email source polls the mail account in every 50 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term. In the example action after processes is defined as the 'SEEN', so that after processing the event, corresponding mail is mark as read.", 
            "title": "1.0.0"
        }, 
        {
            "location": "/api/1.0.0/#api-docs-v100", 
            "text": "", 
            "title": "API Docs - v1.0.0"
        }, 
        {
            "location": "/api/1.0.0/#sink", 
            "text": "", 
            "title": "Sink"
        }, 
        {
            "location": "/api/1.0.0/#email-sink", 
            "text": "The email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters).  Syntax  @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , @map(...)))  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         username \n         Username of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com). \n         \n         STRING \n         No \n         No \n     \n     \n         address \n         Address of the email account which is used to send emails. \n         \n         STRING \n         No \n         No \n     \n     \n         password \n         Password of the email account. \n         \n         STRING \n         No \n         No \n     \n     \n         host \n         Host name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account. \n         smtp.gmail.com \n         STRING \n         Yes \n         No \n     \n     \n         port \n         The port which is used to create the connection. \n         '465' the default value is only valid is ssl enable \n         INT \n         Yes \n         No \n     \n     \n         ssl.enable \n         Whether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection. \n         true \n         BOOL \n         Yes \n         No \n     \n     \n         auth \n         Whether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command. \n         true \n         BOOL \n         Yes \n         No \n     \n     \n         content.type \n         Content type can be either 'text/plain' or 'text/html'. \n         text/plain \n         STRING \n         Yes \n         No \n     \n     \n         subject \n         Subject of the mail which has to be send. \n         \n         STRING \n         No \n         Yes \n     \n     \n         to \n         Address of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list. \n         \n         STRING \n         No \n         Yes \n     \n     \n         cc \n         Address of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list. \n         None \n         STRING \n         Yes \n         No \n     \n     \n         bcc \n         Address of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list. \n         None \n         STRING \n         Yes \n         No \n       System Parameters  \n     \n         Name \n         Description \n         Default Value \n         Possible Parameters \n     \n     \n         mail.smtp.connectiontimeout \n         Socket connection timeout value in milliseconds.  \n         infinite timeout \n         Any Integer \n     \n     \n         mail.smtp.timeout \n         Socket I/O timeout value in milliseconds.  \n         infinite timeout \n         Any Integer \n     \n     \n         mail.smtp.from \n         Email address to use for SMTP MAIL command. This sets the envelope return address. \n         Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). \n         Valid email address \n     \n     \n         mail.smtp.localport \n         Local port number to bind to when creating the SMTP socket. \n         Defaults to the port number picked by the Socket class. \n         Any Integer \n     \n     \n         mail.smtp.ehlo \n         If false, do not attempt to sign on with the EHLO command. \n         true \n         true or false \n     \n     \n         mail.smtp.auth.login.disable \n         If true, prevents use of the AUTH LOGIN command. \n         false \n         true or false \n     \n     \n         mail.smtp.auth.plain.disable \n         If true, prevents use of the AUTH PLAIN command. \n         false \n         true or false \n     \n     \n         mail.smtp.auth.digest-md5.disable \n         If true, prevents use of the AUTH DIGEST-MD5 command. \n         false \n         true or false \n     \n     \n         mail.smtp.auth.ntlm.disable \n         If true, prevents use of the AUTH NTLM command \n         false \n         true or false \n     \n     \n         mail.smtp.auth.ntlm.domain \n         The NTLM authentication domain. \n         None \n         Valid NTLM authentication domain name \n     \n     \n         mail.smtp.auth.ntlm.flags \n         NTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details. \n         None \n         Valid NTLM protocol-specific flags. \n     \n     \n         mail.smtp.dsn.notify \n         The NOTIFY option to the RCPT command. \n         None \n         Either NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas). \n     \n     \n         mail.smtp.dsn.ret \n         The RET option to the MAIL command. \n         None \n         Either FULL or HDRS. \n     \n     \n         mail.smtp.sendpartial \n         If set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address. \n         false \n         true or false \n     \n     \n         mail.smtp.sasl.enable \n         If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. \n         false \n         true or false \n     \n     \n         mail.smtp.sasl.mechanisms \n         A space or comma separated list of SASL mechanism names to try to use. \n         None \n         \n     \n     \n         mail.smtp.sasl.authorizationid \n         The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. \n         username \n         Valid ID \n     \n     \n         mail.smtp.sasl.realm \n         The realm to use with DIGEST-MD5 authentication. \n         None \n         \n     \n     \n         mail.smtp.quitwait \n         If set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command. \n         false \n         true or false \n     \n     \n         mail.smtp.reportsuccess \n         If set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful. \n         false \n         true or false \n     \n     \n         mail.smtp.socketFactory \n         If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets. \n         None \n         Socket Factory \n     \n     \n         mail.smtp.socketFactory.class \n         If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets. \n         None \n         \n     \n     \n         mail.smtp.socketFactory.fallback \n         If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. \n         true \n         true or false \n     \n     \n         mail.smtp.socketFactory.port \n         Specifies the port to connect to when using the specified socket factory \n         25 \n         Valid port number \n     \n     \n         mail.smtp.ssl.protocols \n         Specifies the SSL protocols that will be enabled for SSL connections. \n         None \n         The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. \n     \n     \n         mail.smtp.starttls.enable \n         If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. \n         false \n         true or false \n     \n     \n         mail.smtp.starttls.required \n         If true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail. \n         false \n         true or false \n     \n     \n         mail.smtp.socks.host \n         Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. \n         None \n         \n     \n     \n         mail.smtp.socks.port \n         Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. \n         1080 \n         valid port number \n     \n     \n         mail.smtp.auth.ntlm.disable \n         If true, prevents use of the AUTH NTLM command \n         false \n         true or false \n     \n     \n         mail.smtp.mailextension \n         Extension string to append to the MAIL command. \n         None \n         \n     \n     \n         mail.smtp.userset \n         If set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue. \n         false \n         true or false \n       Examples  EXAMPLE 1  @sink(type='email', @map(type='json'), username='wso2', address='wso2@gmail.com',password='wso234',host='smtp.gmail.com',subject='Event from SP',to='towso2@gmail.com ,wso2two@gmail.com',cc='ccwso2@gmail.com')define stream inputStream (name string, age int, country string);  Following example illustrates how to publish a event using email sink. As in the example, it publishes events come from the inputStream in json format through email to given 'to' and 'cc' recipients.The email is sent through wso2@gmail.com email account via secure connection.", 
            "title": "email (Sink)"
        }, 
        {
            "location": "/api/1.0.0/#source", 
            "text": "", 
            "title": "Source"
        }, 
        {
            "location": "/api/1.0.0/#email-source", 
            "text": "Email source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store ,  https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters).  Syntax  @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...)))  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         username \n         user name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account. \n         \n         STRING \n         No \n         No \n     \n     \n         password \n         password of the email account \n         \n         STRING \n         No \n         No \n     \n     \n         store \n         Store type that used to receive emails. it can be either imap or pop3. \n         imap \n         STRING \n         Yes \n         No \n     \n     \n         host \n         Host name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable. \n         If store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'. \n         STRING \n         Yes \n         No \n     \n     \n         port \n         The port which is used to create the connection. \n         '993' the default value is valid only if store is imap and ssl enable \n         INT \n         Yes \n         No \n     \n     \n         folder \n         Name of the folder to fetch email. \n         INBOX \n         STRING \n         Yes \n         No \n     \n     \n         search.term \n         Option which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol. \n         None \n         STRING \n         Yes \n         No \n     \n     \n         polling.interval \n         Interval that email source should poll the account to check for new mails arrivals in seconds. \n         600 \n         LONG \n         Yes \n         No \n     \n     \n         action.after.processed \n         Action that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE \n         NONE \n         STRING \n         Yes \n         No \n     \n     \n         folder.to.move \n         The name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move. \n         \n         STRING \n         No \n         No \n     \n     \n         content.type \n         Content type of the email. It can be either 'text/plain' or 'text/html.' \n         text/plain \n         STRING \n         Yes \n         No \n     \n     \n         ssl.enable \n         If it is 'true' then use a secure port to establish the connection. The possible values are 'true or false. \n         true \n         BOOL \n         Yes \n         No \n       System Parameters  \n     \n         Name \n         Description \n         Default Value \n         Possible Parameters \n     \n     \n         mail.imap.partialfetch \n         Controls whether the IMAP partial-fetch capability should be used \n         true \n         true or false \n     \n     \n         mail.imap.fetchsize \n         Partial fetch size in bytes. \n         16K \n         value in bytes \n     \n     \n         mail.imap.peek \n         If set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage. \n         false \n         true or false \n     \n     \n         mail.imap.connectiontimeout \n         Socket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket. \n         infinity timeout \n         Any Integer value \n     \n     \n         mail.imap.timeout \n         Socket read timeout value in milliseconds. This timeout is implemented by java.net.Socket. \n         infinity timeout \n         Any Integer value \n     \n     \n         mail.imap.writetimeout \n         Socket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection. \n         infinity timeout \n         Any Integer value \n     \n     \n         mail.imap.statuscachetimeout \n         Timeout value in milliseconds for cache of STATUS command response. \n         1000ms \n         Time out in miliseconds \n     \n     \n         mail.imap.appendbuffersize \n         Maximum size of a message to buffer in memory when appending to an IMAP folder. \n         None \n         Any Integer value \n     \n     \n         mail.imap.connectionpoolsize \n         Maximum number of available connections in the connection pool. \n         1 \n         Any Integer value \n     \n     \n         mail.imap.connectionpooltimeout \n         Timeout value in milliseconds for connection pool connections.  \n         45000ms \n         Any Integer \n     \n     \n         mail.imap.separatestoreconnection \n         Flag to indicate whether to use a dedicated store connection for store commands. \n         true \n         true or false \n     \n     \n         mail.imap.auth.login.disable \n         If true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command. \n         false \n         true or false \n     \n     \n         mail.imap.auth.plain.disable \n         If true, prevents use of the AUTHENTICATE PLAIN command. \n         false \n         true or false \n     \n     \n         mail.imap.auth.ntlm.disable \n         If true, prevents use of the AUTHENTICATE NTLM command. \n         false \n         true or false \n     \n     \n         mail.imap.proxyauth.user \n         If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property. \n         None \n         Valid string value \n     \n     \n         mail.imap.localaddress \n         Local address (host name) to bind to when creating the IMAP socket. \n         Defaults to the address picked by the Socket class. \n         Valid string value \n     \n     \n         mail.imap.localport \n         Local port number to bind to when creating the IMAP socket. \n         Defaults to the port number picked by the Socket class. \n         Valid String value \n     \n     \n         mail.imap.sasl.enable \n         If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. \n         false \n         true or false \n     \n     \n         mail.imap.sasl.mechanisms \n         A space or comma separated list of SASL mechanism names to try to use. \n         None \n         Valid string value \n     \n     \n         mail.imap.sasl.authorizationid \n         The authorization ID to use in the SASL authentication. \n         If not set, the authentication ID (user name) is used. \n         Valid string value \n     \n     \n         mail.imap.sasl.realm \n         The realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5. \n         None \n         Valid string value \n     \n     \n         mail.imap.auth.ntlm.domain \n         The NTLM authentication domain. \n         None \n         Valid string value \n     \n     \n         The NTLM authentication domain. \n         NTLM protocol-specific flags. \n         None \n         Valid integer value \n     \n     \n         mail.imap.socketFactory \n         If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets. \n         None \n         Valid SocketFactory \n     \n     \n         mail.imap.socketFactory.class \n         If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets. \n         None \n         Valid string \n     \n     \n         mail.imap.socketFactory.fallback \n         If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class.  \n         true \n         true or false \n     \n     \n         mail.imap.socketFactory.port \n         Specifies the port to connect to when using the specified socket factory. Default port is used when not set. \n         143 \n         Valid Integer \n     \n     \n         mail.imap.ssl.checkserveridentity \n         If set to true, check the server identity as specified by RFC 2595. \n         false \n         true or false \n     \n     \n         mail.imap.ssl.trust \n         If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. \n         None \n         Valid String \n     \n     \n         mail.imap.ssl.socketFactory \n         If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets. \n         None \n         SSL Socket Factory \n     \n     \n         mail.imap.ssl.socketFactory.class \n         If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets. \n         None \n         Valid String \n     \n     \n         mail.imap.ssl.socketFactory.port \n         Specifies the port to connect to when using the specified socket factory. \n         the default port will be used-993 \n         valid port number \n     \n     \n         mail.imap.ssl.protocols \n         Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. \n         None \n         Valid string \n     \n     \n         mail.imap.starttls.enable \n         If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. \n         false \n         true or false \n     \n     \n         mail.imap.socks.host \n         Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. \n         None \n         Valid String \n     \n     \n         mail.imap.socks.port \n         Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. \n         1080 \n         Valid String \n     \n     \n         mail.imap.minidletime \n         This property sets the delay in milliseconds. \n         10 milliseconds \n         time in seconds (Integer) \n     \n     \n         mail.imap.enableimapevents \n         Enable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string. \n         false \n         true or false \n     \n     \n         mail.imap.folder.class \n         Class name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store) \n         None \n         Valid String \n     \n     \n         mail.pop3.connectiontimeout \n         Socket connection timeout value in milliseconds. \n         Infinite timeout \n         Integer value \n     \n     \n         mail.pop3.timeout \n         Socket I/O timeout value in milliseconds.  \n         Infinite timeout \n         Integer value \n     \n     \n         mail.pop3.message.class \n         Class name of a subclass of com.sun.mail.pop3.POP3Message \n         None \n         Valid String \n     \n     \n         mail.pop3.localaddress \n         Local address (host name) to bind to when creating the POP3 socket. \n         Defaults to the address picked by the Socket class. \n         Valid String \n     \n     \n         mail.pop3.localport \n         Local port number to bind to when creating the POP3 socket. \n         Defaults to the port number picked by the Socket class. \n         Valid port number \n     \n     \n         mail.pop3.apop.enable \n         If set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password. \n         false \n         true or false \n     \n     \n         mail.pop3.socketFactory \n         If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets. \n         None \n         Socket Factory \n     \n     \n         mail.pop3.socketFactory.class \n         If set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets. \n         None \n         Valid String \n     \n     \n         mail.pop3.socketFactory.fallback \n         If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. \n         false \n         true or false \n     \n     \n         mail.pop3.socketFactory.port \n         Specifies the port to connect to when using the specified socket factory. \n         Default port \n         Valid port number \n     \n     \n         mail.pop3.ssl.checkserveridentity \n         If set to true, check the server identity as specified by RFC 2595.  \n         false \n         true or false \n     \n     \n         mail.pop3.ssl.trust \n         If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. \n         Depends on the certificate the server presents \n         Valid String \n     \n     \n         mail.pop3.ssl.socketFactory \n         If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. \n         None \n         SSL Socket Factory \n     \n     \n         mail.pop3.ssl.checkserveridentity \n         If set to true, check the server identity as specified by RFC 2595.  \n         false \n         true or false \n     \n     \n         mail.pop3.ssl.trust \n          If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.  \n         trust depends on the certificate the server presents. \n         Valid String \n     \n     \n         mail.pop3.ssl.socketFactory \n         If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. \n         None \n         SSL Socket Factory \n     \n     \n         mail.pop3.ssl.socketFactory.class \n         If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets.  \n         None \n         Valid String \n     \n     \n         mail.pop3.ssl.socketFactory.p \n         Specifies the port to connect to when using the specified socket factory. \n         995 \n         Valid Integer \n     \n     \n         mail.pop3.ssl.protocols \n         Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. \n         None \n         Valid String \n     \n     \n         mail.pop3.starttls.enable \n         If true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands \n         false \n         true or false \n     \n     \n         mail.pop3.starttls.required \n         If true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail. \n         false \n         true or false \n     \n     \n         mail.pop3.socks.host \n         Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. \n         None \n         Valid String \n     \n     \n         mail.pop3.socks.port \n         Specifies the port number for the SOCKS5 proxy server. \n         None \n         Valid String \n     \n     \n         mail.pop3.disabletop \n         If set to true, the POP3 TOP command will not be used to fetch message headers.  \n         false \n         true or false \n     \n     \n         mail.pop3.forgettopheaders \n         If set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command. \n         false \n         true or false \n     \n     \n         mail.pop3.filecache.enable \n         If set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. \n         false \n         true or false \n     \n     \n         mail.pop3.filecache.dir \n         If the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files. \n         None \n         Valid String \n     \n     \n         mail.pop3.cachewriteto \n         Controls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached. \n         false \n         true or false \n     \n     \n         mail.pop3.keepmessagecontent \n         If this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method).  \n         false \n         true or false \n       Examples  EXAMPLE 1  @source(type='email', @map(type='xml'), username='wso2mail', password='wso2Password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:das, from: wso2one@ , cc: wso2two, polling.interval='50000',action.after.processed='SEEN',content.type='text/html,)define stream inputStream (name string, age int, country string);  Following example illustrates how to receive events in 'xml' format using email source. The email source polls the mail account in every 50 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term. In the example action after processes is defined as the 'SEEN', so that after processing the event, corresponding mail is mark as read.", 
            "title": "email (Source)"
        }, 
        {
            "location": "/api/latest/", 
            "text": "API Docs - v1.0.16\n\n\nSink\n\n\nemail \n(Sink)\n\n\nThe email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken for the optional parameters. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters). Further, some email account required to enable 'access to less secure apps' option (for gmail account you can enable it via https://myaccount.google.com/lesssecureapps).\n\n\n\nSyntax\n\n\n@sink(type=\nemail\n, username=\nSTRING\n, address=\nSTRING\n, password=\nSTRING\n, host=\nSTRING\n, port=\nINT\n, ssl.enable=\nBOOL\n, auth=\nBOOL\n, content.type=\nSTRING\n, subject=\nSTRING\n, to=\nSTRING\n, cc=\nSTRING\n, bcc=\nSTRING\n, attachments=\nSTRING\n, @map(...)))\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \nusername\n\n        \nUsername of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com).\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \naddress\n\n        \nAddress of the email account which is used to send emails.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \npassword\n\n        \nPassword of the email account.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \nhost\n\n        \nHost name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account.\n\n        \nsmtp.gmail.com\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nport\n\n        \nThe port which is used to create the connection.\n\n        \n'465' the default value is only valid is ssl enable\n\n        \nINT\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nssl.enable\n\n        \nWhether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection.\n\n        \ntrue\n\n        \nBOOL\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nauth\n\n        \nWhether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command.\n\n        \ntrue\n\n        \nBOOL\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \ncontent.type\n\n        \nContent type can be either 'text/plain' or 'text/html'.\n\n        \ntext/plain\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nsubject\n\n        \nSubject of the mail which has to be send.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nYes\n\n    \n\n    \n\n        \nto\n\n        \nAddress of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nYes\n\n    \n\n    \n\n        \ncc\n\n        \nAddress of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list.\n\n        \nNone\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nbcc\n\n        \nAddress of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list.\n\n        \nNone\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nattachments\n\n        \nFile paths of the files that needs to be attached to the email.\nThese paths should be absolute paths.\nThey can be either a directories or files\n. If it's a directory, all the files at its first level will be attached.\n\n        \nNone\n\n        \nSTRING\n\n        \nYes\n\n        \nYes\n\n    \n\n\n\n\nSystem Parameters\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Parameters\n\n    \n\n    \n\n        \nmail.smtp.ssl.trust\n\n        \nIf set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to \"\n\", all hosts are trusted. If set to a whitespace separated list of hosts, those hosts are trusted. Otherwise, trust depends on the certificate the server presents.\n\n        \n\n        \nString\n\n    \n\n    \n\n        \nmail.smtp.connectiontimeout\n\n        \nSocket connection timeout value in milliseconds. \n\n        \ninfinite timeout\n\n        \nAny Integer\n\n    \n\n    \n\n        \nmail.smtp.timeout\n\n        \nSocket I/O timeout value in milliseconds. \n\n        \ninfinite timeout\n\n        \nAny Integer\n\n    \n\n    \n\n        \nmail.smtp.from\n\n        \nEmail address to use for SMTP MAIL command. This sets the envelope return address.\n\n        \nDefaults to msg.getFrom() or InternetAddress.getLocalAddress().\n\n        \nValid email address\n\n    \n\n    \n\n        \nmail.smtp.localport\n\n        \nLocal port number to bind to when creating the SMTP socket.\n\n        \nDefaults to the port number picked by the Socket class.\n\n        \nAny Integer\n\n    \n\n    \n\n        \nmail.smtp.ehlo\n\n        \nIf false, do not attempt to sign on with the EHLO command.\n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.login.disable\n\n        \nIf true, prevents use of the AUTH LOGIN command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.plain.disable\n\n        \nIf true, prevents use of the AUTH PLAIN command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.digest-md5.disable\n\n        \nIf true, prevents use of the AUTH DIGEST-MD5 command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.ntlm.disable\n\n        \nIf true, prevents use of the AUTH NTLM command\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.auth.ntlm.domain\n\n        \nThe NTLM authentication domain.\n\n        \nNone\n\n        \nValid NTLM authentication domain name\n\n    \n\n    \n\n        \nmail.smtp.auth.ntlm.flags\n\n        \nNTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details.\n\n        \nNone\n\n        \nValid NTLM protocol-specific flags.\n\n    \n\n    \n\n        \nmail.smtp.dsn.notify\n\n        \nThe NOTIFY option to the RCPT command.\n\n        \nNone\n\n        \nEither NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas).\n\n    \n\n    \n\n        \nmail.smtp.dsn.ret\n\n        \nThe RET option to the MAIL command.\n\n        \nNone\n\n        \nEither FULL or HDRS.\n\n    \n\n    \n\n        \nmail.smtp.sendpartial\n\n        \nIf set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.sasl.enable\n\n        \nIf set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.sasl.mechanisms\n\n        \nA space or comma separated list of SASL mechanism names to try to use.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.sasl.authorizationid\n\n        \nThe authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used.\n\n        \nusername\n\n        \nValid ID\n\n    \n\n    \n\n        \nmail.smtp.sasl.realm\n\n        \nThe realm to use with DIGEST-MD5 authentication.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.quitwait\n\n        \nIf set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.reportsuccess\n\n        \nIf set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.socketFactory\n\n        \nIf set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets.\n\n        \nNone\n\n        \nSocket Factory\n\n    \n\n    \n\n        \nmail.smtp.socketFactory.class\n\n        \nIf set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.socketFactory.fallback\n\n        \nIf set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class.\n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.socketFactory.port\n\n        \nSpecifies the port to connect to when using the specified socket factory\n\n        \n25\n\n        \nValid port number\n\n    \n\n    \n\n        \nmail.smtp.ssl.protocols\n\n        \nSpecifies the SSL protocols that will be enabled for SSL connections.\n\n        \nNone\n\n        \nThe property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method.\n\n    \n\n    \n\n        \nmail.smtp.starttls.enable\n\n        \nIf true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.starttls.required\n\n        \nIf true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.socks.host\n\n        \nSpecifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.socks.port\n\n        \nSpecifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080.\n\n        \n1080\n\n        \nvalid port number\n\n    \n\n    \n\n        \nmail.smtp.auth.ntlm.disable\n\n        \nIf true, prevents use of the AUTH NTLM command\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.smtp.mailextension\n\n        \nExtension string to append to the MAIL command.\n\n        \nNone\n\n        \n\n    \n\n    \n\n        \nmail.smtp.userset\n\n        \nIf set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\n@sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string);\n\n\n\n\nFollowing example illustrates how to publish events using the email sinkusing mandatory parameters. As in the example, it publishes events come from the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection.\n\n\n\nEXAMPLE 2\n\n\n@sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string);\n\n\n\n\nFollowing example illustrates how to configure the query parameters and system parameters in the deployment ymal file.\nCorresponding parameters need to be configure under name:'email' and namespace:'sink' as follows\nextensions:\n-  extension:\nname:'email'\nnamespace:'sink'\nproperties:\nusername: \nsender's email username\naddress: \nsender's email address\npassword: \nsender's email password\nAs in the example, it publishes events comefrom the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection.\n\n\n\nEXAMPLE 3\n\n\n@sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream fooStream (name string, age int, country string);\n\n\n\n\nFollowing example illustrates how to publish events using the email sink. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given \nto\n,\ncc\n and \nbcc\n recipients using a secure connection. \nname\n in the \nsubject\n attribute will be the value of the \nname\n parameter in the corresponding output event\n\n\n\nEXAMPLE 4\n\n\n@sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.comattachments= '{{attachments}}')define stream fooStream (name string, age int, country string, attachments string);\n\n\n\n\nFollowing example illustrates how to publish events using theemail sink. Here files are also attached to the email. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given \nto\n,\ncc\n and \nbcc\n recipients using a secure connection. \nname\n in the \nsubject\n attribute will be the value of the \nname\n parameter in the corresponding output event.\nAlso to the same email message, the local file(s) related to the path received for the attribute attachments is/are attached.\n\n\n\nSource\n\n\nemail \n(Source)\n\n\nEmail source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store ,  https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters).\n\n\n\nSyntax\n\n\n@source(type=\nemail\n, username=\nSTRING\n, password=\nSTRING\n, store=\nSTRING\n, host=\nSTRING\n, port=\nINT\n, folder=\nSTRING\n, search.term=\nSTRING\n, polling.interval=\nLONG\n, action.after.processed=\nSTRING\n, folder.to.move=\nSTRING\n, content.type=\nSTRING\n, ssl.enable=\nBOOL\n, @map(...)))\n\n\n\n\nQUERY PARAMETERS\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Data Types\n\n        \nOptional\n\n        \nDynamic\n\n    \n\n    \n\n        \nusername\n\n        \nuser name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \npassword\n\n        \npassword of the email account\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \nstore\n\n        \nStore type that used to receive emails. it can be either imap or pop3.\n\n        \nimap\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nhost\n\n        \nHost name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable.\n\n        \nIf store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'.\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nport\n\n        \nThe port which is used to create the connection.\n\n        \n'993' the default value is valid only if store is imap and ssl enable\n\n        \nINT\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nfolder\n\n        \nName of the folder to fetch email.\n\n        \nINBOX\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nsearch.term\n\n        \nOption which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol.\n\n        \nNone\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \npolling.interval\n\n        \nInterval that email source should poll the account to check for new mails arrivals in seconds.\n\n        \n600\n\n        \nLONG\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \naction.after.processed\n\n        \nAction that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE\n\n        \nNONE\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nfolder.to.move\n\n        \nThe name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move.\n\n        \n\n        \nSTRING\n\n        \nNo\n\n        \nNo\n\n    \n\n    \n\n        \ncontent.type\n\n        \nContent type of the email. It can be either 'text/plain' or 'text/html.'\n\n        \ntext/plain\n\n        \nSTRING\n\n        \nYes\n\n        \nNo\n\n    \n\n    \n\n        \nssl.enable\n\n        \nIf it is 'true' then use a secure port to establish the connection. The possible values are 'true or false.\n\n        \ntrue\n\n        \nBOOL\n\n        \nYes\n\n        \nNo\n\n    \n\n\n\n\nSystem Parameters\n\n\n\n    \n\n        \nName\n\n        \nDescription\n\n        \nDefault Value\n\n        \nPossible Parameters\n\n    \n\n    \n\n        \nmail.imap.partialfetch\n\n        \nControls whether the IMAP partial-fetch capability should be used\n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.fetchsize\n\n        \nPartial fetch size in bytes.\n\n        \n16K\n\n        \nvalue in bytes\n\n    \n\n    \n\n        \nmail.imap.peek\n\n        \nIf set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.connectiontimeout\n\n        \nSocket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket.\n\n        \ninfinity timeout\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.timeout\n\n        \nSocket read timeout value in milliseconds. This timeout is implemented by java.net.Socket.\n\n        \ninfinity timeout\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.writetimeout\n\n        \nSocket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection.\n\n        \ninfinity timeout\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.statuscachetimeout\n\n        \nTimeout value in milliseconds for cache of STATUS command response.\n\n        \n1000ms\n\n        \nTime out in miliseconds\n\n    \n\n    \n\n        \nmail.imap.appendbuffersize\n\n        \nMaximum size of a message to buffer in memory when appending to an IMAP folder.\n\n        \nNone\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.connectionpoolsize\n\n        \nMaximum number of available connections in the connection pool.\n\n        \n1\n\n        \nAny Integer value\n\n    \n\n    \n\n        \nmail.imap.connectionpooltimeout\n\n        \nTimeout value in milliseconds for connection pool connections. \n\n        \n45000ms\n\n        \nAny Integer\n\n    \n\n    \n\n        \nmail.imap.separatestoreconnection\n\n        \nFlag to indicate whether to use a dedicated store connection for store commands.\n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.auth.login.disable\n\n        \nIf true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.auth.plain.disable\n\n        \nIf true, prevents use of the AUTHENTICATE PLAIN command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.auth.ntlm.disable\n\n        \nIf true, prevents use of the AUTHENTICATE NTLM command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.proxyauth.user\n\n        \nIf the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property.\n\n        \nNone\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.localaddress\n\n        \nLocal address (host name) to bind to when creating the IMAP socket.\n\n        \nDefaults to the address picked by the Socket class.\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.localport\n\n        \nLocal port number to bind to when creating the IMAP socket.\n\n        \nDefaults to the port number picked by the Socket class.\n\n        \nValid String value\n\n    \n\n    \n\n        \nmail.imap.sasl.enable\n\n        \nIf set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.sasl.mechanisms\n\n        \nA space or comma separated list of SASL mechanism names to try to use.\n\n        \nNone\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.sasl.authorizationid\n\n        \nThe authorization ID to use in the SASL authentication.\n\n        \nIf not set, the authentication ID (user name) is used.\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.sasl.realm\n\n        \nThe realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5.\n\n        \nNone\n\n        \nValid string value\n\n    \n\n    \n\n        \nmail.imap.auth.ntlm.domain\n\n        \nThe NTLM authentication domain.\n\n        \nNone\n\n        \nValid string value\n\n    \n\n    \n\n        \nThe NTLM authentication domain.\n\n        \nNTLM protocol-specific flags.\n\n        \nNone\n\n        \nValid integer value\n\n    \n\n    \n\n        \nmail.imap.socketFactory\n\n        \nIf set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets.\n\n        \nNone\n\n        \nValid SocketFactory\n\n    \n\n    \n\n        \nmail.imap.socketFactory.class\n\n        \nIf set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets.\n\n        \nNone\n\n        \nValid string\n\n    \n\n    \n\n        \nmail.imap.socketFactory.fallback\n\n        \nIf set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. \n\n        \ntrue\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.socketFactory.port\n\n        \nSpecifies the port to connect to when using the specified socket factory. Default port is used when not set.\n\n        \n143\n\n        \nValid Integer\n\n    \n\n    \n\n        \nmail.imap.ssl.checkserveridentity\n\n        \nIf set to true, check the server identity as specified by RFC 2595.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.ssl.trust\n\n        \nIf set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '\n', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents.\n\n        \n\n        \nValid String\n\n    \n\n    \n\n        \nmail.imap.ssl.socketFactory\n\n        \nIf set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets.\n\n        \nNone\n\n        \nSSL Socket Factory\n\n    \n\n    \n\n        \nmail.imap.ssl.socketFactory.class\n\n        \nIf set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.imap.ssl.socketFactory.port\n\n        \nSpecifies the port to connect to when using the specified socket factory.\n\n        \nthe default port will be used-993\n\n        \nvalid port number\n\n    \n\n    \n\n        \nmail.imap.ssl.protocols\n\n        \nSpecifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method.\n\n        \nNone\n\n        \nValid string\n\n    \n\n    \n\n        \nmail.imap.starttls.enable\n\n        \nIf true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.socks.host\n\n        \nSpecifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.imap.socks.port\n\n        \nSpecifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080.\n\n        \n1080\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.imap.minidletime\n\n        \nThis property sets the delay in milliseconds.\n\n        \n10 milliseconds\n\n        \ntime in seconds (Integer)\n\n    \n\n    \n\n        \nmail.imap.enableimapevents\n\n        \nEnable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.imap.folder.class\n\n        \nClass name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store)\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.connectiontimeout\n\n        \nSocket connection timeout value in milliseconds.\n\n        \nInfinite timeout\n\n        \nInteger value\n\n    \n\n    \n\n        \nmail.pop3.timeout\n\n        \nSocket I/O timeout value in milliseconds. \n\n        \nInfinite timeout\n\n        \nInteger value\n\n    \n\n    \n\n        \nmail.pop3.message.class\n\n        \nClass name of a subclass of com.sun.mail.pop3.POP3Message\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.localaddress\n\n        \nLocal address (host name) to bind to when creating the POP3 socket.\n\n        \nDefaults to the address picked by the Socket class.\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.localport\n\n        \nLocal port number to bind to when creating the POP3 socket.\n\n        \nDefaults to the port number picked by the Socket class.\n\n        \nValid port number\n\n    \n\n    \n\n        \nmail.pop3.apop.enable\n\n        \nIf set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.socketFactory\n\n        \nIf set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets.\n\n        \nNone\n\n        \nSocket Factory\n\n    \n\n    \n\n        \nmail.pop3.socketFactory.class\n\n        \nIf set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.socketFactory.fallback\n\n        \nIf set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.socketFactory.port\n\n        \nSpecifies the port to connect to when using the specified socket factory.\n\n        \nDefault port\n\n        \nValid port number\n\n    \n\n    \n\n        \nmail.pop3.ssl.checkserveridentity\n\n        \nIf set to true, check the server identity as specified by RFC 2595. \n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.ssl.trust\n\n        \nIf set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to '\n', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents.\n\n        \n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.ssl.socketFactory\n\n        \nIf set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets.\n\n        \nNone\n\n        \nSSL Socket Factory\n\n    \n\n    \n\n        \nmail.pop3.ssl.checkserveridentity\n\n        \nIf set to true, check the server identity as specified by RFC 2595. \n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.ssl.trust\n\n        \n If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted. \n\n        \ntrust depends on the certificate the server presents.\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.ssl.socketFactory\n\n        \nIf set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets.\n\n        \nNone\n\n        \nSSL Socket Factory\n\n    \n\n    \n\n        \nmail.pop3.ssl.socketFactory.class\n\n        \nIf set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets. \n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.ssl.socketFactory.p\n\n        \nSpecifies the port to connect to when using the specified socket factory.\n\n        \n995\n\n        \nValid Integer\n\n    \n\n    \n\n        \nmail.pop3.ssl.protocols\n\n        \nSpecifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.starttls.enable\n\n        \nIf true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.starttls.required\n\n        \nIf true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.socks.host\n\n        \nSpecifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.socks.port\n\n        \nSpecifies the port number for the SOCKS5 proxy server.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.disabletop\n\n        \nIf set to true, the POP3 TOP command will not be used to fetch message headers. \n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.forgettopheaders\n\n        \nIf set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.filecache.enable\n\n        \nIf set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.filecache.dir\n\n        \nIf the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files.\n\n        \nNone\n\n        \nValid String\n\n    \n\n    \n\n        \nmail.pop3.cachewriteto\n\n        \nControls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached.\n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n    \n\n        \nmail.pop3.keepmessagecontent\n\n        \nIf this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method). \n\n        \nfalse\n\n        \ntrue or false\n\n    \n\n\n\n\nExamples\n\n\nEXAMPLE 1\n\n\n@source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string);\n\n\n\n\nFollowing example illustrates how to receive events in \nxml\n format using email source. In this example only mandatory parameters are defined in the  in the stream definition. For other parameters default values are taken. since search term is not defined, it poll and take all new messages in the inbox folder\n\n\n\nEXAMPLE 2\n\n\n@source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string);\n\n\n\n\nFollowing example illustrates how to receive events in \nxml\n format using email source. The email source polls the mail account in every 500 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term (email messages which come from\nfrom.account@.\nhost name\n, contains \ncc.account\n in cc receipts list, and \nStream Processor\n words in the mail subject) In the example, action after processes is defined as the \nDELETE\n, so that after processing the event, corresponding mail is deleted from the mail folder.", 
            "title": "latest"
        }, 
        {
            "location": "/api/latest/#api-docs-v1016", 
            "text": "", 
            "title": "API Docs - v1.0.16"
        }, 
        {
            "location": "/api/latest/#sink", 
            "text": "", 
            "title": "Sink"
        }, 
        {
            "location": "/api/latest/#email-sink", 
            "text": "The email sink uses 'smtp' server to publish events via emails. It can be published events in 'text', 'xml' or 'json' formats. The user can define email sink parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition or 'ymal' file respectively. If it is not given in both places, then default values are taken for the optional parameters. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email sink properties. (Refer link: https://javaee.github.io/javamail/SMTP-Transport to more information about smtp server parameters). Further, some email account required to enable 'access to less secure apps' option (for gmail account you can enable it via https://myaccount.google.com/lesssecureapps).  Syntax  @sink(type= email , username= STRING , address= STRING , password= STRING , host= STRING , port= INT , ssl.enable= BOOL , auth= BOOL , content.type= STRING , subject= STRING , to= STRING , cc= STRING , bcc= STRING , attachments= STRING , @map(...)))  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         username \n         Username of the email account which is used to send emails (e.g: 'abc' is the username for abc@gmail.com). \n         \n         STRING \n         No \n         No \n     \n     \n         address \n         Address of the email account which is used to send emails. \n         \n         STRING \n         No \n         No \n     \n     \n         password \n         Password of the email account. \n         \n         STRING \n         No \n         No \n     \n     \n         host \n         Host name of the smtp server (e.g. host name for a gmail account : 'smtp.gmail.com'). The default value 'smtp.gmail.com' is only valid if email account is a gmail account. \n         smtp.gmail.com \n         STRING \n         Yes \n         No \n     \n     \n         port \n         The port which is used to create the connection. \n         '465' the default value is only valid is ssl enable \n         INT \n         Yes \n         No \n     \n     \n         ssl.enable \n         Whether the connection should be established through secure connection or not. The value can be either 'true' or 'false'. If it is 'true' then the connection is establish through 493 port which is secure connection. \n         true \n         BOOL \n         Yes \n         No \n     \n     \n         auth \n         Whether to use AUTH command or not, while authenticating. If true, then attempt to authenticate the user using the AUTH command. \n         true \n         BOOL \n         Yes \n         No \n     \n     \n         content.type \n         Content type can be either 'text/plain' or 'text/html'. \n         text/plain \n         STRING \n         Yes \n         No \n     \n     \n         subject \n         Subject of the mail which has to be send. \n         \n         STRING \n         No \n         Yes \n     \n     \n         to \n         Address of the 'to' recipients. If there are more than to recipients, then addresses can be given as a comma separated list. \n         \n         STRING \n         No \n         Yes \n     \n     \n         cc \n         Address of the 'cc' recipients. If there are more than cc recipients, then addresses can be given as a comma separated list. \n         None \n         STRING \n         Yes \n         No \n     \n     \n         bcc \n         Address of the 'bcc' recipients. If there are more than bcc recipients, then addresses can be given as a comma separated list. \n         None \n         STRING \n         Yes \n         No \n     \n     \n         attachments \n         File paths of the files that needs to be attached to the email. These paths should be absolute paths. They can be either a directories or files . If it's a directory, all the files at its first level will be attached. \n         None \n         STRING \n         Yes \n         Yes \n       System Parameters  \n     \n         Name \n         Description \n         Default Value \n         Possible Parameters \n     \n     \n         mail.smtp.ssl.trust \n         If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to \" \", all hosts are trusted. If set to a whitespace separated list of hosts, those hosts are trusted. Otherwise, trust depends on the certificate the server presents. \n         \n         String \n     \n     \n         mail.smtp.connectiontimeout \n         Socket connection timeout value in milliseconds.  \n         infinite timeout \n         Any Integer \n     \n     \n         mail.smtp.timeout \n         Socket I/O timeout value in milliseconds.  \n         infinite timeout \n         Any Integer \n     \n     \n         mail.smtp.from \n         Email address to use for SMTP MAIL command. This sets the envelope return address. \n         Defaults to msg.getFrom() or InternetAddress.getLocalAddress(). \n         Valid email address \n     \n     \n         mail.smtp.localport \n         Local port number to bind to when creating the SMTP socket. \n         Defaults to the port number picked by the Socket class. \n         Any Integer \n     \n     \n         mail.smtp.ehlo \n         If false, do not attempt to sign on with the EHLO command. \n         true \n         true or false \n     \n     \n         mail.smtp.auth.login.disable \n         If true, prevents use of the AUTH LOGIN command. \n         false \n         true or false \n     \n     \n         mail.smtp.auth.plain.disable \n         If true, prevents use of the AUTH PLAIN command. \n         false \n         true or false \n     \n     \n         mail.smtp.auth.digest-md5.disable \n         If true, prevents use of the AUTH DIGEST-MD5 command. \n         false \n         true or false \n     \n     \n         mail.smtp.auth.ntlm.disable \n         If true, prevents use of the AUTH NTLM command \n         false \n         true or false \n     \n     \n         mail.smtp.auth.ntlm.domain \n         The NTLM authentication domain. \n         None \n         Valid NTLM authentication domain name \n     \n     \n         mail.smtp.auth.ntlm.flags \n         NTLM protocol-specific flags. See http://curl.haxx.se/rfc/ntlm.html#theNtlmFlags for details. \n         None \n         Valid NTLM protocol-specific flags. \n     \n     \n         mail.smtp.dsn.notify \n         The NOTIFY option to the RCPT command. \n         None \n         Either NEVER, or some combination of SUCCESS, FAILURE, and DELAY (separated by commas). \n     \n     \n         mail.smtp.dsn.ret \n         The RET option to the MAIL command. \n         None \n         Either FULL or HDRS. \n     \n     \n         mail.smtp.sendpartial \n         If set to true, and a message has some valid and some invalid addresses, send the message anyway, reporting the partial failure with a SendFailedException. If set to false (the default), the message is not sent to any of the recipients if there is an invalid recipient address. \n         false \n         true or false \n     \n     \n         mail.smtp.sasl.enable \n         If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. \n         false \n         true or false \n     \n     \n         mail.smtp.sasl.mechanisms \n         A space or comma separated list of SASL mechanism names to try to use. \n         None \n         \n     \n     \n         mail.smtp.sasl.authorizationid \n         The authorization ID to use in the SASL authentication. If not set, the authentication ID (user name) is used. \n         username \n         Valid ID \n     \n     \n         mail.smtp.sasl.realm \n         The realm to use with DIGEST-MD5 authentication. \n         None \n         \n     \n     \n         mail.smtp.quitwait \n         If set to false, the QUIT command is sent and the connection is immediately closed. If set to true (the default), causes the transport to wait for the response to the QUIT command. \n         false \n         true or false \n     \n     \n         mail.smtp.reportsuccess \n         If set to true, causes the transport to include an SMTPAddressSucceededException for each address that is successful. \n         false \n         true or false \n     \n     \n         mail.smtp.socketFactory \n         If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create SMTP sockets. \n         None \n         Socket Factory \n     \n     \n         mail.smtp.socketFactory.class \n         If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create SMTP sockets. \n         None \n         \n     \n     \n         mail.smtp.socketFactory.fallback \n         If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. \n         true \n         true or false \n     \n     \n         mail.smtp.socketFactory.port \n         Specifies the port to connect to when using the specified socket factory \n         25 \n         Valid port number \n     \n     \n         mail.smtp.ssl.protocols \n         Specifies the SSL protocols that will be enabled for SSL connections. \n         None \n         The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. \n     \n     \n         mail.smtp.starttls.enable \n         If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. \n         false \n         true or false \n     \n     \n         mail.smtp.starttls.required \n         If true, requires the use of the STARTTLS command. If the server doesn't support the STARTTLS command, or the command fails, the connect method will fail. \n         false \n         true or false \n     \n     \n         mail.smtp.socks.host \n         Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. \n         None \n         \n     \n     \n         mail.smtp.socks.port \n         Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. \n         1080 \n         valid port number \n     \n     \n         mail.smtp.auth.ntlm.disable \n         If true, prevents use of the AUTH NTLM command \n         false \n         true or false \n     \n     \n         mail.smtp.mailextension \n         Extension string to append to the MAIL command. \n         None \n         \n     \n     \n         mail.smtp.userset \n         If set to true, use the RSET command instead of the NOOP command in the isConnected method. In some cases sendmail will respond slowly after many NOOP commands; use of RSET avoids this sendmail issue. \n         false \n         true or false \n       Examples  EXAMPLE 1  @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string);  Following example illustrates how to publish events using the email sinkusing mandatory parameters. As in the example, it publishes events come from the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection.  EXAMPLE 2  @sink(type='email', @map(type ='json'), subject='Alerts from Wso2 Stream Processor',to='{{email}}',)define stream fooStream (email string, loginId int, name string);  Following example illustrates how to configure the query parameters and system parameters in the deployment ymal file. Corresponding parameters need to be configure under name:'email' and namespace:'sink' as follows extensions: -  extension: name:'email' namespace:'sink' properties: username:  sender's email username address:  sender's email address password:  sender's email password As in the example, it publishes events comefrom the fooStream in json format via email sink to the given 'to' recipients. The email is sent by the sender.account@gmail.com via secure connection.  EXAMPLE 3  @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.com)define stream fooStream (name string, age int, country string);  Following example illustrates how to publish events using the email sink. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given  to , cc  and  bcc  recipients using a secure connection.  name  in the  subject  attribute will be the value of the  name  parameter in the corresponding output event  EXAMPLE 4  @sink(type='email', @map(type ='json'), username='sender.account', address='sender.account@gmail.com',password='account.password',host='smtp.gmail.com',port='465',ssl.enable='true',auth='true',content.type='text/html',subject='Alerts from Wso2 Stream Processor-{{name}}',to='to1.account@gmail.com, to2.account@gmail.com',cc='cc1.account@gmail.com, cc2.account@gmail.com',bcc='bcc1.account@gmail.comattachments= '{{attachments}}')define stream fooStream (name string, age int, country string, attachments string);  Following example illustrates how to publish events using theemail sink. Here files are also attached to the email. According to the example, it publishes events come from the fooStream in xml format via email sink as a text/html message to the given  to , cc  and  bcc  recipients using a secure connection.  name  in the  subject  attribute will be the value of the  name  parameter in the corresponding output event. Also to the same email message, the local file(s) related to the path received for the attribute attachments is/are attached.", 
            "title": "email (Sink)"
        }, 
        {
            "location": "/api/latest/#source", 
            "text": "", 
            "title": "Source"
        }, 
        {
            "location": "/api/latest/#email-source", 
            "text": "Email source allows user to receive events via emails. Email source can be configured using 'imap' or 'pop3' server to receive events. This allows user to filter the messages which satisfy the given criteria under 'search term' option. The user can define email source parameters in either 'deployment yaml' file or stream definition. So that email source checks whether parameters are given in stream definition and 'ymal' file respectively. If it is not given in both places, then default values are taken if defaults values are available. If user need to configure server system parameters which are not given as options in stream definition then it is needed to define them in 'yaml' file under email source properties. (Refer link: https://javaee.github.io/javamail/IMAP-Store ,  https://javaee.github.io/javamail/POP3-Store to more information about imap and pop3 server system parameters).  Syntax  @source(type= email , username= STRING , password= STRING , store= STRING , host= STRING , port= INT , folder= STRING , search.term= STRING , polling.interval= LONG , action.after.processed= STRING , folder.to.move= STRING , content.type= STRING , ssl.enable= BOOL , @map(...)))  QUERY PARAMETERS  \n     \n         Name \n         Description \n         Default Value \n         Possible Data Types \n         Optional \n         Dynamic \n     \n     \n         username \n         user name of the email account. (e.g. wso2mail is the username of wso2mail@gmail.commail account. \n         \n         STRING \n         No \n         No \n     \n     \n         password \n         password of the email account \n         \n         STRING \n         No \n         No \n     \n     \n         store \n         Store type that used to receive emails. it can be either imap or pop3. \n         imap \n         STRING \n         Yes \n         No \n     \n     \n         host \n         Host name of the server (e.g. host name for a gmail account with imap store : 'imap.gmail.com'). The default value imap.gmail.com' is only valid if email account is a gmail account with imap enable. \n         If store type is 'imap' then default value is 'imap.gmail.com' and if store type is 'pop3' thendefault value is 'pop3.gmail.com'. \n         STRING \n         Yes \n         No \n     \n     \n         port \n         The port which is used to create the connection. \n         '993' the default value is valid only if store is imap and ssl enable \n         INT \n         Yes \n         No \n     \n     \n         folder \n         Name of the folder to fetch email. \n         INBOX \n         STRING \n         Yes \n         No \n     \n     \n         search.term \n         Option which includes conditions as a key value pairs to search emails. String search term should define ':' separated key and value with ',' separated key value pairs. Currently, this string search term only supported keys: subject, from, to, bcc, and cc. As an example: subject:DAS , from:carbon , bcc:wso2 string search term create a search term instance which filter emails contain 'DAS' in the subject, 'carbon' in the from address and 'wso2' in one of the bcc addresses. It does sub string matching which is case insensitive. But if '@' contains in the given value except for 'subject' key, then it check whether address is equal or not. As a example from: abc@ string search term check whether 'from' address is equal to 'abc' before '@' Symbol. \n         None \n         STRING \n         Yes \n         No \n     \n     \n         polling.interval \n         Interval that email source should poll the account to check for new mails arrivals in seconds. \n         600 \n         LONG \n         Yes \n         No \n     \n     \n         action.after.processed \n         Action that email source should carry out for the processed mail. FLAGGED : set the flag as falgged. SEEN : set the flag as read. ANSWERED : set the flag as answered. DELETE : delete tha mail after the polling cycle. MOVE : move the the mail to the folder given in folder.to.move. If folder is pop3, then only option available is 'DELETE \n         NONE \n         STRING \n         Yes \n         No \n     \n     \n         folder.to.move \n         The name of the folder, which mail has to move after processing.If the action after process is 'MOVE' then it is mandatory to define the folder to move. \n         \n         STRING \n         No \n         No \n     \n     \n         content.type \n         Content type of the email. It can be either 'text/plain' or 'text/html.' \n         text/plain \n         STRING \n         Yes \n         No \n     \n     \n         ssl.enable \n         If it is 'true' then use a secure port to establish the connection. The possible values are 'true or false. \n         true \n         BOOL \n         Yes \n         No \n       System Parameters  \n     \n         Name \n         Description \n         Default Value \n         Possible Parameters \n     \n     \n         mail.imap.partialfetch \n         Controls whether the IMAP partial-fetch capability should be used \n         true \n         true or false \n     \n     \n         mail.imap.fetchsize \n         Partial fetch size in bytes. \n         16K \n         value in bytes \n     \n     \n         mail.imap.peek \n         If set to true, use the IMAP PEEK option when fetching body parts, to avoid setting the SEEN flag on messages. Defaults to false. Can be overridden on a per-message basis by the setPeek method on IMAPMessage. \n         false \n         true or false \n     \n     \n         mail.imap.connectiontimeout \n         Socket connection timeout value in milliseconds. This timeout is implemented by java.net.Socket. \n         infinity timeout \n         Any Integer value \n     \n     \n         mail.imap.timeout \n         Socket read timeout value in milliseconds. This timeout is implemented by java.net.Socket. \n         infinity timeout \n         Any Integer value \n     \n     \n         mail.imap.writetimeout \n         Socket write timeout value in milliseconds. This timeout is implemented by using a java.util.concurrent.ScheduledExecutorService per connection that schedules a thread to close the socket if the timeout expires. Thus, the overhead of using this timeout is one thread per connection. \n         infinity timeout \n         Any Integer value \n     \n     \n         mail.imap.statuscachetimeout \n         Timeout value in milliseconds for cache of STATUS command response. \n         1000ms \n         Time out in miliseconds \n     \n     \n         mail.imap.appendbuffersize \n         Maximum size of a message to buffer in memory when appending to an IMAP folder. \n         None \n         Any Integer value \n     \n     \n         mail.imap.connectionpoolsize \n         Maximum number of available connections in the connection pool. \n         1 \n         Any Integer value \n     \n     \n         mail.imap.connectionpooltimeout \n         Timeout value in milliseconds for connection pool connections.  \n         45000ms \n         Any Integer \n     \n     \n         mail.imap.separatestoreconnection \n         Flag to indicate whether to use a dedicated store connection for store commands. \n         true \n         true or false \n     \n     \n         mail.imap.auth.login.disable \n         If true, prevents use of the non-standard AUTHENTICATE LOGIN command, instead using the plain LOGIN command. \n         false \n         true or false \n     \n     \n         mail.imap.auth.plain.disable \n         If true, prevents use of the AUTHENTICATE PLAIN command. \n         false \n         true or false \n     \n     \n         mail.imap.auth.ntlm.disable \n         If true, prevents use of the AUTHENTICATE NTLM command. \n         false \n         true or false \n     \n     \n         mail.imap.proxyauth.user \n         If the server supports the PROXYAUTH extension, this property specifies the name of the user to act as. Authenticate to the server using the administrator's credentials. After authentication, the IMAP provider will issue the PROXYAUTH command with the user name specified in this property. \n         None \n         Valid string value \n     \n     \n         mail.imap.localaddress \n         Local address (host name) to bind to when creating the IMAP socket. \n         Defaults to the address picked by the Socket class. \n         Valid string value \n     \n     \n         mail.imap.localport \n         Local port number to bind to when creating the IMAP socket. \n         Defaults to the port number picked by the Socket class. \n         Valid String value \n     \n     \n         mail.imap.sasl.enable \n         If set to true, attempt to use the javax.security.sasl package to choose an authentication mechanism for login. \n         false \n         true or false \n     \n     \n         mail.imap.sasl.mechanisms \n         A space or comma separated list of SASL mechanism names to try to use. \n         None \n         Valid string value \n     \n     \n         mail.imap.sasl.authorizationid \n         The authorization ID to use in the SASL authentication. \n         If not set, the authentication ID (user name) is used. \n         Valid string value \n     \n     \n         mail.imap.sasl.realm \n         The realm to use with SASL authentication mechanisms that require a realm, such as DIGEST-MD5. \n         None \n         Valid string value \n     \n     \n         mail.imap.auth.ntlm.domain \n         The NTLM authentication domain. \n         None \n         Valid string value \n     \n     \n         The NTLM authentication domain. \n         NTLM protocol-specific flags. \n         None \n         Valid integer value \n     \n     \n         mail.imap.socketFactory \n         If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create IMAP sockets. \n         None \n         Valid SocketFactory \n     \n     \n         mail.imap.socketFactory.class \n         If set, specifies the name of a class that implements the javax.net.SocketFactory interface. This class will be used to create IMAP sockets. \n         None \n         Valid string \n     \n     \n         mail.imap.socketFactory.fallback \n         If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class.  \n         true \n         true or false \n     \n     \n         mail.imap.socketFactory.port \n         Specifies the port to connect to when using the specified socket factory. Default port is used when not set. \n         143 \n         Valid Integer \n     \n     \n         mail.imap.ssl.checkserveridentity \n         If set to true, check the server identity as specified by RFC 2595. \n         false \n         true or false \n     \n     \n         mail.imap.ssl.trust \n         If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. \n         \n         Valid String \n     \n     \n         mail.imap.ssl.socketFactory \n         If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create IMAP SSL sockets. \n         None \n         SSL Socket Factory \n     \n     \n         mail.imap.ssl.socketFactory.class \n         If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create IMAP SSL sockets. \n         None \n         Valid String \n     \n     \n         mail.imap.ssl.socketFactory.port \n         Specifies the port to connect to when using the specified socket factory. \n         the default port will be used-993 \n         valid port number \n     \n     \n         mail.imap.ssl.protocols \n         Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. \n         None \n         Valid string \n     \n     \n         mail.imap.starttls.enable \n         If true, enables the use of the STARTTLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands. \n         false \n         true or false \n     \n     \n         mail.imap.socks.host \n         Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. \n         None \n         Valid String \n     \n     \n         mail.imap.socks.port \n         Specifies the port number for the SOCKS5 proxy server. This should only need to be used if the proxy server is not using the standard port number of 1080. \n         1080 \n         Valid String \n     \n     \n         mail.imap.minidletime \n         This property sets the delay in milliseconds. \n         10 milliseconds \n         time in seconds (Integer) \n     \n     \n         mail.imap.enableimapevents \n         Enable special IMAP-specific events to be delivered to the Store's ConnectionListener. If true, unsolicited responses received during the Store's idle method will be sent as ConnectionEvents with a type of IMAPStore.RESPONSE. The event's message will be the raw IMAP response string. \n         false \n         true or false \n     \n     \n         mail.imap.folder.class \n         Class name of a subclass of com.sun.mail.imap.IMAPFolder. The subclass can be used to provide support for additional IMAP commands. The subclass must have public constructors of the form public MyIMAPFolder(String fullName, char separator, IMAPStore store, Boolean isNamespace) and public MyIMAPFolder(ListInfo li, IMAPStore store) \n         None \n         Valid String \n     \n     \n         mail.pop3.connectiontimeout \n         Socket connection timeout value in milliseconds. \n         Infinite timeout \n         Integer value \n     \n     \n         mail.pop3.timeout \n         Socket I/O timeout value in milliseconds.  \n         Infinite timeout \n         Integer value \n     \n     \n         mail.pop3.message.class \n         Class name of a subclass of com.sun.mail.pop3.POP3Message \n         None \n         Valid String \n     \n     \n         mail.pop3.localaddress \n         Local address (host name) to bind to when creating the POP3 socket. \n         Defaults to the address picked by the Socket class. \n         Valid String \n     \n     \n         mail.pop3.localport \n         Local port number to bind to when creating the POP3 socket. \n         Defaults to the port number picked by the Socket class. \n         Valid port number \n     \n     \n         mail.pop3.apop.enable \n         If set to true, use APOP instead of USER/PASS to login to the POP3 server, if the POP3 server supports APOP. APOP sends a digest of the password rather than the clear text password. \n         false \n         true or false \n     \n     \n         mail.pop3.socketFactory \n         If set to a class that implements the javax.net.SocketFactory interface, this class will be used to create POP3 sockets. \n         None \n         Socket Factory \n     \n     \n         mail.pop3.socketFactory.class \n         If set, specifies the name of a class that implements the javax.net. SocketFactory interface. This class will be used to create POP3 sockets. \n         None \n         Valid String \n     \n     \n         mail.pop3.socketFactory.fallback \n         If set to true, failure to create a socket using the specified socket factory class will cause the socket to be created using the java.net.Socket class. \n         false \n         true or false \n     \n     \n         mail.pop3.socketFactory.port \n         Specifies the port to connect to when using the specified socket factory. \n         Default port \n         Valid port number \n     \n     \n         mail.pop3.ssl.checkserveridentity \n         If set to true, check the server identity as specified by RFC 2595.  \n         false \n         true or false \n     \n     \n         mail.pop3.ssl.trust \n         If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory. If set to ' ', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.Otherwise, trust depends on the certificate the server presents. \n         \n         Valid String \n     \n     \n         mail.pop3.ssl.socketFactory \n         If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. \n         None \n         SSL Socket Factory \n     \n     \n         mail.pop3.ssl.checkserveridentity \n         If set to true, check the server identity as specified by RFC 2595.  \n         false \n         true or false \n     \n     \n         mail.pop3.ssl.trust \n          If set, and a socket factory hasn't been specified, enables use of a MailSSLSocketFactory.If set to '*', all hosts are trusted.If set to a whitespace separated list of hosts, those hosts are trusted.  \n         trust depends on the certificate the server presents. \n         Valid String \n     \n     \n         mail.pop3.ssl.socketFactory \n         If set to a class that extends the javax.net.ssl.SSLSocketFactory class, this class will be used to create POP3 SSL sockets. \n         None \n         SSL Socket Factory \n     \n     \n         mail.pop3.ssl.socketFactory.class \n         If set, specifies the name of a class that extends the javax.net.ssl.SSLSocketFactory class. This class will be used to create POP3 SSL sockets.  \n         None \n         Valid String \n     \n     \n         mail.pop3.ssl.socketFactory.p \n         Specifies the port to connect to when using the specified socket factory. \n         995 \n         Valid Integer \n     \n     \n         mail.pop3.ssl.protocols \n         Specifies the SSL protocols that will be enabled for SSL connections. The property value is a whitespace separated list of tokens acceptable to the javax.net.ssl.SSLSocket.setEnabledProtocols method. \n         None \n         Valid String \n     \n     \n         mail.pop3.starttls.enable \n         If true, enables the use of the STLS command (if supported by the server) to switch the connection to a TLS-protected connection before issuing any login commands \n         false \n         true or false \n     \n     \n         mail.pop3.starttls.required \n         If true, requires the use of the STLS command. If the server doesn't support the STLS command, or the command fails, the connect method will fail. \n         false \n         true or false \n     \n     \n         mail.pop3.socks.host \n         Specifies the host name of a SOCKS5 proxy server that will be used for connections to the mail server. \n         None \n         Valid String \n     \n     \n         mail.pop3.socks.port \n         Specifies the port number for the SOCKS5 proxy server. \n         None \n         Valid String \n     \n     \n         mail.pop3.disabletop \n         If set to true, the POP3 TOP command will not be used to fetch message headers.  \n         false \n         true or false \n     \n     \n         mail.pop3.forgettopheaders \n         If set to true, the headers that might have been retrieved using the POP3 TOP command will be forgotten and replaced by headers retrieved as part of the POP3 RETR command. \n         false \n         true or false \n     \n     \n         mail.pop3.filecache.enable \n         If set to true, the POP3 provider will cache message data in a temporary file rather than in memory. Messages are only added to the cache when accessing the message content. Message headers are always cached in memory (on demand). The file cache is removed when the folder is closed or the JVM terminates. \n         false \n         true or false \n     \n     \n         mail.pop3.filecache.dir \n         If the file cache is enabled, this property can be used to override the default directory used by the JDK for temporary files. \n         None \n         Valid String \n     \n     \n         mail.pop3.cachewriteto \n         Controls the behavior of the writeTo method on a POP3 message object. If set to true, and the message content hasn't yet been cached, and ignoreList is null, the message is cached before being written. Otherwise, the message is streamed directly to the output stream without being cached. \n         false \n         true or false \n     \n     \n         mail.pop3.keepmessagecontent \n         If this property is set to true, a hard reference to the cached content will be kept, preventing the memory from being reused until the folder is closed or the cached content is explicitly invalidated (using the invalidate method).  \n         false \n         true or false \n       Examples  EXAMPLE 1  @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',)define stream inputStream (name string, age int, country string);  Following example illustrates how to receive events in  xml  format using email source. In this example only mandatory parameters are defined in the  in the stream definition. For other parameters default values are taken. since search term is not defined, it poll and take all new messages in the inbox folder  EXAMPLE 2  @source(type='email', @map(type='xml'), username='receiver.account', password='account.password',store = 'imap',host = 'imap.gmail.com',port = '993',searchTerm = 'subject:Stream Processor, from: from.account@ , cc: cc.account',polling.interval='500',action.after.processed='DELETE',content.type='text/html,)define stream inputStream (name string, age int, country string);  Following example illustrates how to receive events in  xml  format using email source. The email source polls the mail account in every 500 seconds to check whether new mails has been arrived and processes new mails only if if it satisfy the properties given under email search term (email messages which come from from.account@. host name , contains  cc.account  in cc receipts list, and  Stream Processor  words in the mail subject) In the example, action after processes is defined as the  DELETE , so that after processing the event, corresponding mail is deleted from the mail folder.", 
            "title": "email (Source)"
        }, 
        {
            "location": "/license/", 
            "text": "Copyright (c) 2017 WSO2 Inc. (\nhttp://www.wso2.org\n) All Rights Reserved.\n\n\nWSO2 Inc. licenses this file to you under the Apache License,\nVersion 2.0 (the \"License\"); you may not use this file except\nin compliance with the License.\nYou may obtain a copy of the License at\n\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\n\nUnless required by applicable law or agreed to in writing,\nsoftware distributed under the License is distributed on an\n\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, either express or implied.  See the License for the\nspecific language governing permissions and limitations\nunder the License.\n\n\n-------------------------------------------------------------------------\n                              Apache License\n                        Version 2.0, January 2004\n                     http://www.apache.org/licenses/\n\n\nTERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n1. Definitions.\n\n   \nLicense\n shall mean the terms and conditions for use, reproduction,\n   and distribution as defined by Sections 1 through 9 of this document.\n\n   \nLicensor\n shall mean the copyright owner or entity authorized by\n   the copyright owner that is granting the License.\n\n   \nLegal Entity\n shall mean the union of the acting entity and all\n   other entities that control, are controlled by, or are under common\n   control with that entity. For the purposes of this definition,\n   \ncontrol\n means (i) the power, direct or indirect, to cause the\n   direction or management of such entity, whether by contract or\n   otherwise, or (ii) ownership of fifty percent (50%) or more of the\n   outstanding shares, or (iii) beneficial ownership of such entity.\n\n   \nYou\n (or \nYour\n) shall mean an individual or Legal Entity\n   exercising permissions granted by this License.\n\n   \nSource\n form shall mean the preferred form for making modifications,\n   including but not limited to software source code, documentation\n   source, and configuration files.\n\n   \nObject\n form shall mean any form resulting from mechanical\n   transformation or translation of a Source form, including but\n   not limited to compiled object code, generated documentation,\n   and conversions to other media types.\n\n   \nWork\n shall mean the work of authorship, whether in Source or\n   Object form, made available under the License, as indicated by a\n   copyright notice that is included in or attached to the work\n   (an example is provided in the Appendix below).\n\n   \nDerivative Works\n shall mean any work, whether in Source or Object\n   form, that is based on (or derived from) the Work and for which the\n   editorial revisions, annotations, elaborations, or other modifications\n   represent, as a whole, an original work of authorship. For the purposes\n   of this License, Derivative Works shall not include works that remain\n   separable from, or merely link (or bind by name) to the interfaces of,\n   the Work and Derivative Works thereof.\n\n   \nContribution\n shall mean any work of authorship, including\n   the original version of the Work and any modifications or additions\n   to that Work or Derivative Works thereof, that is intentionally\n   submitted to Licensor for inclusion in the Work by the copyright owner\n   or by an individual or Legal Entity authorized to submit on behalf of\n   the copyright owner. For the purposes of this definition, \nsubmitted\n\n   means any form of electronic, verbal, or written communication sent\n   to the Licensor or its representatives, including but not limited to\n   communication on electronic mailing lists, source code control systems,\n   and issue tracking systems that are managed by, or on behalf of, the\n   Licensor for the purpose of discussing and improving the Work, but\n   excluding communication that is conspicuously marked or otherwise\n   designated in writing by the copyright owner as \nNot a Contribution.\n\n\n   \nContributor\n shall mean Licensor and any individual or Legal Entity\n   on behalf of whom a Contribution has been received by Licensor and\n   subsequently incorporated within the Work.\n\n2. Grant of Copyright License. Subject to the terms and conditions of\n   this License, each Contributor hereby grants to You a perpetual,\n   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n   copyright license to reproduce, prepare Derivative Works of,\n   publicly display, publicly perform, sublicense, and distribute the\n   Work and such Derivative Works in Source or Object form.\n\n3. Grant of Patent License. Subject to the terms and conditions of\n   this License, each Contributor hereby grants to You a perpetual,\n   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n   (except as stated in this section) patent license to make, have made,\n   use, offer to sell, sell, import, and otherwise transfer the Work,\n   where such license applies only to those patent claims licensable\n   by such Contributor that are necessarily infringed by their\n   Contribution(s) alone or by combination of their Contribution(s)\n   with the Work to which such Contribution(s) was submitted. If You\n   institute patent litigation against any entity (including a\n   cross-claim or counterclaim in a lawsuit) alleging that the Work\n   or a Contribution incorporated within the Work constitutes direct\n   or contributory patent infringement, then any patent licenses\n   granted to You under this License for that Work shall terminate\n   as of the date such litigation is filed.\n\n4. Redistribution. You may reproduce and distribute copies of the\n   Work or Derivative Works thereof in any medium, with or without\n   modifications, and in Source or Object form, provided that You\n   meet the following conditions:\n\n   (a) You must give any other recipients of the Work or\n       Derivative Works a copy of this License; and\n\n   (b) You must cause any modified files to carry prominent notices\n       stating that You changed the files; and\n\n   (c) You must retain, in the Source form of any Derivative Works\n       that You distribute, all copyright, patent, trademark, and\n       attribution notices from the Source form of the Work,\n       excluding those notices that do not pertain to any part of\n       the Derivative Works; and\n\n   (d) If the Work includes a \nNOTICE\n text file as part of its\n       distribution, then any Derivative Works that You distribute must\n       include a readable copy of the attribution notices contained\n       within such NOTICE file, excluding those notices that do not\n       pertain to any part of the Derivative Works, in at least one\n       of the following places: within a NOTICE text file distributed\n       as part of the Derivative Works; within the Source form or\n       documentation, if provided along with the Derivative Works; or,\n       within a display generated by the Derivative Works, if and\n       wherever such third-party notices normally appear. The contents\n       of the NOTICE file are for informational purposes only and\n       do not modify the License. You may add Your own attribution\n       notices within Derivative Works that You distribute, alongside\n       or as an addendum to the NOTICE text from the Work, provided\n       that such additional attribution notices cannot be construed\n       as modifying the License.\n\n   You may add Your own copyright statement to Your modifications and\n   may provide additional or different license terms and conditions\n   for use, reproduction, or distribution of Your modifications, or\n   for any such Derivative Works as a whole, provided Your use,\n   reproduction, and distribution of the Work otherwise complies with\n   the conditions stated in this License.\n\n5. Submission of Contributions. Unless You explicitly state otherwise,\n   any Contribution intentionally submitted for inclusion in the Work\n   by You to the Licensor shall be under the terms and conditions of\n   this License, without any additional terms or conditions.\n   Notwithstanding the above, nothing herein shall supersede or modify\n   the terms of any separate license agreement you may have executed\n   with Licensor regarding such Contributions.\n\n6. Trademarks. This License does not grant permission to use the trade\n   names, trademarks, service marks, or product names of the Licensor,\n   except as required for reasonable and customary use in describing the\n   origin of the Work and reproducing the content of the NOTICE file.\n\n7. Disclaimer of Warranty. Unless required by applicable law or\n   agreed to in writing, Licensor provides the Work (and each\n   Contributor provides its Contributions) on an \nAS IS\n BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n   implied, including, without limitation, any warranties or conditions\n   of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n   PARTICULAR PURPOSE. You are solely responsible for determining the\n   appropriateness of using or redistributing the Work and assume any\n   risks associated with Your exercise of permissions under this License.\n\n8. Limitation of Liability. In no event and under no legal theory,\n   whether in tort (including negligence), contract, or otherwise,\n   unless required by applicable law (such as deliberate and grossly\n   negligent acts) or agreed to in writing, shall any Contributor be\n   liable to You for damages, including any direct, indirect, special,\n   incidental, or consequential damages of any character arising as a\n   result of this License or out of the use or inability to use the\n   Work (including but not limited to damages for loss of goodwill,\n   work stoppage, computer failure or malfunction, or any and all\n   other commercial damages or losses), even if such Contributor\n   has been advised of the possibility of such damages.\n\n9. Accepting Warranty or Additional Liability. While redistributing\n   the Work or Derivative Works thereof, You may choose to offer,\n   and charge a fee for, acceptance of support, warranty, indemnity,\n   or other liability obligations and/or rights consistent with this\n   License. However, in accepting such obligations, You may act only\n   on Your own behalf and on Your sole responsibility, not on behalf\n   of any other Contributor, and only if You agree to indemnify,\n   defend, and hold each Contributor harmless for any liability\n   incurred by, or claims asserted against, such Contributor by reason\n   of your accepting any such warranty or additional liability.\n\nEND OF TERMS AND CONDITIONS", 
            "title": "License"
        }
    ]
}